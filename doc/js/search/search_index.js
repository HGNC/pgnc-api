var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.588,1,2.802]],["body/guards/AccessTokenGuard.html",[0,2.984,1,4.224,2,2.701,3,0.07,4,0.057,5,0.057,6,6.487,7,4.704,8,3.167,9,0.412,10,4.415,11,4.78,12,5.786,13,3.636,14,5.045,15,0.248,16,1.087,17,4.633,18,5.775,19,5.252,20,5.252,21,2.135,22,2.296,23,5.217,24,4.633,25,4.501,26,0.555,27,3.572,28,1.355,29,2.263,30,1.421,31,0.008,32,0.743,33,0.476,34,1.185,35,2.205,36,2.781,37,4.224,38,2.781,39,3.101,40,3.543,41,4.865,42,3.572,43,4.518,44,1.616,45,3.543,46,1.154,47,2.112,48,1.951,49,5.252,50,3.572,51,4.657,52,5.252,53,1.328,54,2.435,55,3.131,56,5.252,57,3.572,58,5.162,59,0.15,60,1.774,61,0.733,62,3.678,63,3.539,64,0.396,65,1.774,66,5.252,67,2.03,68,2.109,69,2.542,70,2.197,71,2.296,72,2.41,73,0.07,74,0.055,75,2.542,76,2.537,77,1.178,78,2.296,79,3.309,80,4.264,81,2.776,82,3.738,83,3.738,84,2.435,85,1.571,86,3.738,87,2.542,88,2.41,89,1.289,90,1.462,91,3.572,92,3.572,93,1.462,94,2.046,95,2.41,96,3.572,97,3.572,98,3.167,99,3.167,100,2.41,101,2.9,102,2.9,103,3.167,104,3.167,105,3.167,106,3.572,107,3.572,108,0.004,109,0.004]],["title/interfaces/ActiveUserInterface.html",[110,3.073,111,1.732]],["body/interfaces/ActiveUserInterface.html",[3,0.118,4,0.096,5,0.096,9,0.47,15,0.416,31,0.008,33,0.564,53,2.059,59,0.118,73,0.118,108,0.006,109,0.006,110,5.493,111,2.842,112,4.534,113,2.517,114,5.316,115,7.473,116,5.319,117,1.86,118,1.779,119,4.735,120,5.749,121,6.445,122,6.068,123,5.75,124,6.068,125,1.493,126,2.842,127,3.957,128,4.869,129,4.534]],["title/classes/AdminCreateUserDto.html",[74,0.07,130,3.073]],["body/classes/AdminCreateUserDto.html",[3,0.084,4,0.069,5,0.069,9,0.542,15,0.298,26,0.675,28,1.782,31,0.008,32,0.881,33,0.579,34,1.034,45,2.898,47,2.341,53,1.988,54,1.524,59,0.146,73,0.084,74,0.092,108,0.005,109,0.005,117,1.894,118,1.427,119,3.957,120,5.371,123,5.303,124,6.067,125,0.788,128,3.488,129,3.249,130,4.044,131,1.673,132,5.315,133,3.488,134,2.28,135,3.175,136,2.805,137,3.854,138,4.267,139,5.566,140,4.596,141,4.868,142,4.868,143,4.868,144,4.412,145,1.596,146,4.296,147,6.122,148,4.296,149,4.296,150,6.067,151,3.402,152,4.296,153,3.809,154,5.315,155,5.315,156,8.141,157,4.296,158,5.315,159,3.488,160,4.533,161,3.809,162,5.315,163,4.296,164,3.809,165,3.488,166,4.296,167,3.854,168,3.809,169,4.296,170,3.809,171,4.044,172,4.296,173,3.809,174,3.809,175,3.809,176,3.488,177,3.809,178,3.488,179,3.809,180,3.809,181,2.537,182,4.412,183,3.809,184,5.315,185,3.809,186,3.488,187,3.809,188,3.488,189,4.296,190,2.653,191,1.203,192,2.583,193,5.995,194,2.762,195,1.715,196,3.249,197,4.296,198,2.07]],["title/injectables/AdminRoleGuard.html",[61,0.636,199,3.073]],["body/injectables/AdminRoleGuard.html",[0,3.049,1,4.283,3,0.072,4,0.059,5,0.059,7,2.364,9,0.497,10,3.449,11,4.227,13,1.948,14,4.058,15,0.255,16,1.111,17,3.62,18,3.819,21,2.161,22,2.364,23,5.26,24,4.995,25,4.555,26,0.433,28,1.385,29,2.73,30,1.111,31,0.008,32,0.581,33,0.372,34,0.926,35,3.108,36,3.921,37,4.283,38,3.921,39,3.168,40,3.62,41,4.555,43,4.111,44,1.564,46,1.392,47,2.148,55,2.85,58,3.62,59,0.164,60,1.826,61,0.749,63,4.741,64,0.408,65,1.826,67,2.09,68,2.172,69,2.617,70,2.262,71,2.364,72,2.481,73,0.072,74,0.056,76,2.414,77,1.42,78,2.364,79,4.186,81,2.805,82,2.617,83,2.617,84,1.903,85,1.227,86,2.617,87,2.617,88,2.481,89,0.761,108,0.004,109,0.004,117,1.794,125,0.675,138,4.508,199,5.215,200,1.096,201,3.261,202,4.393,203,5.502,204,2.846,205,1.668,206,3.516,207,3.678,208,3.678,209,2.75,210,3.819,211,3.819,212,3.168,213,3.819,214,3.62,215,3.3,216,1.826,217,2.142,218,1.544,219,1.544,220,2.617,221,2.364,222,5.27,223,3.246,224,1.119,225,2.781,226,2.481,227,2.781,228,1.143,229,2.617,230,2.617,231,4.357,232,3.678,233,2.781]],["title/modules/AppModule.html",[234,1.001,235,3.444]],["body/modules/AppModule.html",[1,2.702,3,0.055,4,0.045,5,0.045,7,1.814,9,0.221,31,0.008,33,0.196,39,1.666,47,1.49,54,1.001,59,0.183,60,1.401,64,0.313,65,1.401,67,1.603,68,1.666,73,0.055,74,0.043,81,1.024,108,0.004,109,0.004,121,3.322,144,1.666,199,4.714,220,2.008,223,2.251,234,1.604,235,7.177,236,1.913,237,1.024,238,1.073,239,1.073,240,1.024,241,2.051,242,1.073,243,2.502,244,2.502,245,2.502,246,4.973,247,4.714,248,4.714,249,4.973,250,4.973,251,3.83,252,4.973,253,4.973,254,4.973,255,4.973,256,4.973,257,4.973,258,4.714,259,4.714,260,4.973,261,4.714,262,4.714,263,4.714,264,3.27,265,4.714,266,4.714,267,3.581,268,4.714,269,4.714,270,4.714,271,1.671,272,1.073,273,0.936,274,2.291,275,4.393,276,4.333,277,3.567,278,3.567,279,2.509,280,4.393,281,4.393,282,3.567,283,2.822,284,2.822,285,2.822,286,3.567,287,4.944,288,4.393,289,2.822,290,4.393,291,2.822,292,4.393,293,2.822,294,1.155,295,0.714,296,2.502,297,2.822,298,2.822,299,3.322,300,2.822,301,2.291,302,2.822,303,2.822,304,2.822,305,3.322,306,2.822,307,4.393,308,4.393,309,2.134,310,2.822,311,2.822,312,2.822,313,3.127,314,2.822,315,2.822,316,2.822,317,2.822,318,2.624,319,1.666,320,2.502,321,1.603,322,3.895,323,2.822,324,2.822,325,2.822,326,1.541,327,2.008,328,2.822,329,1.736,330,1.666,331,2.502,332,2.822,333,2.822,334,1.603,335,2.822,336,1.603,337,2.822,338,1.736,339,1.603,340,2.822,341,1.814,342,2.822,343,1.666,344,2.822,345,3.895,346,3.895,347,2.502,348,2.291,349,2.291,350,2.502,351,4.38,352,2.502,353,2.822,354,2.822,355,2.822,356,2.822,357,2.822,358,2.822,359,2.502,360,2.822,361,2.822,362,2.822,363,2.822,364,2.822,365,2.502,366,2.822,367,2.822,368,2.291,369,2.822,370,2.822,371,2.822,372,2.822,373,2.502,374,2.822,375,1.814,376,2.822,377,2.822,378,2.822,379,2.502,380,2.502,381,3.322,382,3.895]],["title/entities/Assembly.html",[383,1.106,384,2.928]],["body/entities/Assembly.html",[3,0.071,4,0.058,5,0.058,9,0.577,15,0.251,26,0.658,31,0.008,32,0.833,33,0.637,45,5.701,47,2.966,48,3.138,53,2.103,59,0.123,73,0.071,74,0.096,108,0.004,109,0.004,118,1.265,125,1.152,127,2.812,140,4.529,145,1.556,181,4.542,277,4.312,383,1.68,384,5.866,385,1.448,386,3.215,387,4.016,388,5.571,389,1.437,390,7.362,391,6.283,392,5.571,393,4.923,394,3.172,395,3.641,396,4.303,397,3.626,398,3.942,399,4.074,400,6.133,401,3.626,402,4.946,403,6.246,404,5.8,405,2.141,406,3.136,407,3.626,408,5.361,409,2.742,410,5.311,411,4.667,412,3.215,413,5.311,414,3.626,415,3.626,416,3.626,417,3.626,418,1.988,419,5.311,420,3.626,421,2.945,422,3.626,423,3.315,424,4.709,425,4.016,426,2.911,427,2.288,428,0.917]],["title/controllers/AssemblyController.html",[429,1.175,430,3.444]],["body/controllers/AssemblyController.html",[3,0.14,4,0.115,5,0.115,31,0.008,59,0.14,64,0.79,73,0.14,74,0.109,108,0.007,109,0.007,384,4.582,429,1.839,430,6.272,431,1.877,432,6.319,433,2.992,434,7.127]],["title/modules/AssemblyModule.html",[234,1.001,246,3.241]],["body/modules/AssemblyModule.html",[3,0.123,4,0.101,5,0.101,31,0.008,59,0.174,64,0.695,73,0.123,74,0.096,108,0.006,109,0.006,234,1.826,236,2.224,237,2.275,238,2.384,239,2.384,240,2.275,241,3.158,242,2.384,246,6.434,271,2.921,272,2.384,273,2.08,279,2.384,294,2.566,295,1.586,384,4.031,430,6.281,431,2.023,435,5.559,436,5.559,437,6.434,438,6.27,439,6.27,440,6.27,441,6.27,442,6.27]],["title/injectables/AssemblyService.html",[61,0.636,437,3.241]],["body/injectables/AssemblyService.html",[3,0.14,4,0.115,5,0.115,31,0.008,59,0.14,61,1.161,64,0.795,73,0.14,74,0.11,108,0.007,109,0.007,200,2.135,437,5.921,443,6.354]],["title/controllers/AuthController.html",[429,1.175,444,3.444]],["body/controllers/AuthController.html",[3,0.064,4,0.053,5,0.053,9,0.604,13,4.193,14,4.75,15,0.228,16,1.021,26,0.398,29,1.415,30,1.021,31,0.008,32,0.534,33,0.342,34,0.851,36,3.489,38,2.613,44,1.672,46,1.74,59,0.151,64,0.364,73,0.064,74,0.05,76,1.711,77,0.736,85,1.507,89,1.021,108,0.004,109,0.004,117,1.001,134,2.506,135,3.489,136,3.705,145,1.417,191,0.919,204,2.292,205,1.954,209,3.377,217,1.311,219,1.379,223,3.377,278,6.576,429,0.847,431,0.865,433,1.379,444,5.341,445,2.912,446,2.666,447,2.704,448,3.511,449,4.983,450,2.529,451,6.578,452,6.578,453,3.731,454,4.765,455,4.374,456,1.731,457,4.812,458,4.812,459,2.666,460,5.192,461,3.284,462,4.006,463,3.284,464,4.499,465,5.872,466,3.284,467,5.61,468,3.284,469,6.589,470,6.589,471,6.589,472,6.589,473,4.445,474,5.926,475,3.305,476,6.589,477,7.419,478,5.35,479,2.077,480,5.842,481,6.578,482,5.842,483,4.69,484,3.601,485,3.601,486,4.983,487,5.842,488,5.341,489,4.983,490,2.666,491,5.192,492,6.589,493,3.284,494,6.429,495,3.284,496,2.019,497,3.284,498,4.934,499,2.696,500,3.284,501,2.666,502,2.666,503,2.666,504,2.666,505,2.912,506,1.453,507,1.582,508,2.666,509,3.284,510,3.284,511,1.582,512,1.582,513,4.934,514,2.309,515,3.284,516,3.284]],["title/modules/AuthModule.html",[234,1.001,247,3.073]],["body/modules/AuthModule.html",[3,0.093,4,0.076,5,0.076,9,0.373,31,0.008,36,3.406,38,3.406,59,0.178,64,0.528,65,2.363,67,2.704,68,2.81,73,0.093,74,0.073,108,0.005,109,0.005,117,1.305,234,1.601,236,1.688,237,1.727,238,1.81,239,1.81,240,1.727,241,2.77,242,2.77,247,6.265,267,3.999,271,2.446,272,1.81,273,1.578,279,2.77,282,5.222,286,3.864,296,4.219,379,4.219,380,4.219,381,3.599,382,4.219,431,1.694,444,5.509,447,3.525,448,4.577,449,5.9,450,3.999,454,6.209,505,4.219,517,4.219,518,4.219,519,4.219,520,5.372,521,5.4,522,5.666,523,5.666,524,4.759,525,5.702,526,5.222,527,4.577,528,4.759,529,4.759,530,4.863,531,4.759,532,4.219,533,4.219,534,4.759,535,4.863,536,4.219,537,2.927,538,3.864]],["title/injectables/AuthService.html",[61,0.636,454,3.073]],["body/injectables/AuthService.html",[3,0.094,4,0.077,5,0.077,9,0.377,13,3.427,15,0.333,16,1.339,21,1.888,26,0.591,29,2.788,30,1.515,31,0.008,32,0.792,33,0.507,34,1.262,38,3.427,44,1.367,46,1.422,59,0.16,61,0.903,64,0.533,73,0.094,74,0.074,77,1.451,89,1.339,108,0.005,109,0.005,117,1.589,119,3.427,134,2.461,144,3.821,200,1.431,205,2.218,206,2.648,224,1.969,228,2.012,447,3.547,448,4.606,449,4.894,450,3.316,453,4.894,454,5.682,456,1.965,457,5.943,458,5.254,459,3.9,460,5.682,462,5.254,465,4.606,467,4.894,490,5.254,491,5.515,502,3.9,503,3.9,504,3.9,511,3.118,522,5.807,523,5.682,532,4.258,533,4.258,535,3.632,536,4.258,539,4.258,540,5.254,541,4.802,542,4.802,543,4.802,544,4.802,545,6.471,546,5.254,547,3.418,548,4.802,549,4.802]],["title/injectables/BcryptProvider.html",[61,0.636,530,3.444]],["body/injectables/BcryptProvider.html",[3,0.089,4,0.073,5,0.073,9,0.558,15,0.316,16,1.291,26,0.504,30,1.291,31,0.008,32,0.675,33,0.433,34,1.076,44,1.617,46,1.9,47,2.115,48,2.317,53,2.313,59,0.14,61,0.871,64,0.505,73,0.122,74,0.07,75,4.44,76,2.468,81,1.651,89,1.291,108,0.005,109,0.005,134,3.601,200,1.356,205,2.183,215,3.838,228,1.415,456,1.934,489,4.718,520,4.379,530,5.383,550,4.035,551,7.115,552,6.312,553,3.902,554,6.312,555,5.532,556,4.035,557,7.865,558,7.941,559,4.551,560,5.532,561,5.167,562,6.219,563,5.066,564,4.718,565,5.532,566,4.551,567,5.532,568,5.532,569,5.532,570,4.035,571,6.239,572,4.551,573,4.551,574,4.551]],["title/classes/CreateExternalResourceDto.html",[74,0.07,575,3.241]],["body/classes/CreateExternalResourceDto.html",[3,0.125,4,0.102,5,0.102,9,0.5,15,0.442,26,0.515,31,0.008,32,0.966,33,0.442,53,1.963,59,0.152,73,0.125,74,0.119,108,0.006,109,0.006,118,1.848,131,2.484,145,1.218,151,3.098,190,3.436,191,1.786,192,3.345,195,2.546,326,1.639,329,5.357,575,5.525,576,4.583,577,6.882,578,5.654,579,4.302,580,5.525,581,7.762,582,6.377,583,3.978]],["title/classes/CreateGeneDto.html",[74,0.07,584,3.073]],["body/classes/CreateGeneDto.html",[3,0.094,4,0.077,5,0.077,9,0.642,15,0.334,26,0.592,31,0.008,32,0.849,33,0.508,53,1.984,59,0.144,73,0.094,74,0.1,108,0.005,109,0.005,118,1.545,131,1.878,134,2.467,135,3.435,136,3.036,137,4.171,145,1.4,151,3.365,190,3.245,191,1.35,192,3.16,194,3.099,195,1.924,198,2.323,326,1.894,389,1.794,393,4.457,479,2.412,583,3.758,584,4.377,585,6.954,586,4.274,587,6.501,588,7.332,589,4.274,590,6.369,591,6.954,592,7.843,593,4.82,594,4.82,595,5.752,596,8.43,597,7.332,598,4.82,599,6.369,600,7.843,601,4.82,602,4.82,603,7.332,604,6.647,605,4.82,606,4.82,607,4.82,608,5.954,609,4.617,610,6.487,611,4.377,612,4.274,613,2.553,614,4.906,615,4.82]],["title/classes/CreateGeneLocusTypeDto.html",[74,0.07,616,3.241]],["body/classes/CreateGeneLocusTypeDto.html",[3,0.116,4,0.095,5,0.095,15,0.41,26,0.654,31,0.008,33,0.561,59,0.145,73,0.116,74,0.114,108,0.006,109,0.006,118,1.764,125,1.556,131,2.304,145,1.545,192,3.655,194,3.802,195,2.361,318,3.94,326,1.791,479,2.265,613,3.132,616,5.273,617,2.233,618,6.887,619,4.802,620,8.091,621,8.091,622,7.409,623,5.914,624,5.914,625,4.434,626,5.914,627,5.914,628,4.777,629,4.802,630,3.241,631,6.016,632,4.209]],["title/classes/CreateGeneNameDto.html",[74,0.07,633,3.241]],["body/classes/CreateGeneNameDto.html",[3,0.099,4,0.081,5,0.081,9,0.671,15,0.351,26,0.646,31,0.008,32,0.97,33,0.621,59,0.157,73,0.099,74,0.103,108,0.005,109,0.005,118,1.596,125,1.467,131,1.972,145,1.528,151,3.535,190,3.326,191,1.418,192,3.586,194,3.256,195,2.021,198,3.23,326,1.96,389,1.83,456,1.565,479,2.33,611,5.07,613,2.682,617,2.191,625,4.561,628,4.438,630,2.775,632,3.604,633,4.771,634,7.378,635,4.112,636,5.444,637,3.973,638,5.064,639,5.064,640,3.829,641,5.064,642,5.922,643,4.49,644,4.771,645,4.49,646,3.604,647,3.829,648,4.49]],["title/classes/CreateGeneNoteDto.html",[74,0.07,649,3.241]],["body/classes/CreateGeneNoteDto.html",[3,0.108,4,0.088,5,0.088,9,0.648,15,0.381,26,0.632,31,0.008,33,0.542,59,0.153,73,0.108,74,0.109,108,0.006,109,0.006,118,1.685,125,1.515,131,2.143,145,1.494,151,3.491,190,3.656,191,1.541,192,3.559,194,3.537,195,2.196,198,2.651,326,1.952,389,1.889,456,1.652,479,2.393,613,2.914,617,2.175,625,4.683,628,4.62,630,3.016,632,3.916,637,4.102,640,4.161,649,5.037,650,7.323,651,4.468,652,4.876,653,7.077,654,5.502,655,5.502,656,5.502]],["title/injectables/CreateGeneProvider.html",[61,0.636,657,3.073]],["body/injectables/CreateGeneProvider.html",[3,0.081,4,0.067,5,0.067,9,0.577,15,0.288,16,1.212,21,2.148,26,0.473,28,2.003,30,1.212,31,0.008,32,0.633,33,0.406,34,1.01,35,3.09,44,1.236,46,1.287,54,2.076,59,0.171,61,0.817,64,0.46,73,0.081,74,0.064,76,2.691,77,1.52,81,1.507,84,2.076,85,1.933,89,0.859,90,2.396,93,2.396,94,2.28,108,0.005,109,0.005,111,2.799,113,1.743,117,1.767,134,2.226,137,3.763,200,1.237,205,1.785,206,3.387,216,2.062,224,2.063,228,2.107,295,1.05,326,1.917,375,4.733,393,4.802,421,3.372,428,1.05,456,1.582,496,2.396,511,3.547,553,3.208,584,5.701,657,4.966,658,6.011,659,3.682,660,2.554,661,5.701,662,6.527,663,3.137,664,4.152,665,3.682,666,4.152,667,2.554,668,1.699,669,3.14,670,1.264,671,3.372,672,1.743,673,2.128,674,4.152,675,3.682,676,3.852,677,2.554,678,4.152,679,4.152,680,3.601,681,4.152,682,2.128,683,4.152,684,2.36,685,2.276]],["title/classes/CreateGeneReplacementDto.html",[74,0.07,686,3.241]],["body/classes/CreateGeneReplacementDto.html",[3,0.115,4,0.095,5,0.095,9,0.579,15,0.408,26,0.597,31,0.008,33,0.512,59,0.145,73,0.115,74,0.113,108,0.006,109,0.006,118,1.759,125,1.553,131,2.293,145,1.411,151,3.38,190,3.574,191,1.648,192,3.479,195,2.35,326,1.946,389,1.937,617,2.126,628,4.768,637,3.669,686,5.258,687,7.159,688,5.22,689,7.159,690,7.159,691,7.388,692,6.551,693,7.388,694,5.887,695,7.388,696,4.75,697,5.999,698,5.887]],["title/classes/CreateGeneSymbolDto.html",[74,0.07,699,3.241]],["body/classes/CreateGeneSymbolDto.html",[3,0.099,4,0.081,5,0.081,9,0.671,15,0.351,26,0.646,31,0.008,33,0.621,59,0.157,73,0.099,74,0.103,108,0.005,109,0.005,118,1.596,125,1.467,131,1.972,145,1.528,151,3.535,190,3.326,191,1.418,192,3.586,194,3.256,195,2.021,198,3.23,326,1.96,389,1.83,456,1.565,479,2.33,611,5.07,613,2.682,617,2.191,625,4.561,628,4.438,630,2.775,632,3.604,636,5.444,637,3.973,640,3.829,642,5.922,643,4.49,644,4.771,646,3.604,647,3.829,648,4.49,699,4.771,700,7.378,701,4.112,702,4.593,703,5.064,704,5.064,705,5.064,706,5.064]],["title/classes/CreateGeneXrefDto.html",[74,0.07,707,3.241]],["body/classes/CreateGeneXrefDto.html",[3,0.101,4,0.138,5,0.083,9,0.656,15,0.357,26,0.651,31,0.008,33,0.558,53,1.715,59,0.149,73,0.101,74,0.104,108,0.006,109,0.006,118,1.615,125,1.477,131,2.008,145,1.539,151,3.548,190,3.355,191,1.443,192,3.606,194,3.314,195,2.057,198,2.483,326,1.964,389,1.843,456,1.583,479,2.343,583,3.476,611,5.115,613,2.729,617,2.204,625,4.587,628,4.476,630,2.825,632,3.668,636,5.507,637,4.001,640,3.898,702,3.476,707,4.827,708,7.421,709,4.185,710,4.639,711,4.57,712,4.57,713,3.717,714,5.154,715,5.154,716,5.154]],["title/classes/CreateLocusGroupDto.html",[74,0.07,717,3.241]],["body/classes/CreateLocusGroupDto.html",[3,0.124,4,0.102,5,0.102,9,0.498,15,0.44,26,0.513,31,0.008,32,0.965,33,0.44,53,1.957,59,0.152,73,0.124,74,0.119,108,0.006,109,0.006,118,1.843,131,2.472,145,1.212,151,3.089,190,3.425,191,1.777,192,3.335,195,2.533,318,3.746,326,1.634,579,4.281,583,3.966,717,5.508,718,3.844,719,6.862,720,5.627,721,4.976,722,6.862,723,7.739,724,6.346]],["title/classes/CreateLocusTypeDto.html",[74,0.07,725,3.241]],["body/classes/CreateLocusTypeDto.html",[3,0.114,4,0.093,5,0.093,9,0.574,15,0.402,26,0.591,31,0.008,32,0.94,33,0.615,53,1.85,59,0.143,73,0.114,74,0.112,108,0.006,109,0.006,118,1.742,125,1.342,131,2.258,145,1.397,151,3.361,190,3.548,191,1.623,192,3.454,195,2.313,318,3.96,326,1.545,389,1.674,579,3.91,583,3.749,618,6.509,619,4.706,628,4.32,629,4.706,631,4.706,637,3.633,718,3.981,721,4.703,722,6.486,725,5.207,726,8.016,727,5.139,728,6.486,729,5.796,730,6.486,731,5.796]],["title/classes/CreateNameDto.html",[74,0.07,732,3.241]],["body/classes/CreateNameDto.html",[3,0.119,4,0.098,5,0.098,9,0.591,15,0.422,26,0.491,31,0.008,32,0.984,33,0.422,53,1.906,59,0.148,73,0.119,74,0.116,108,0.006,109,0.006,118,1.795,131,2.368,134,2.866,135,3.992,136,3.528,145,1.161,151,3.009,190,3.336,191,1.702,192,3.248,195,2.427,326,1.592,579,4.102,583,3.863,609,5.365,635,4.937,644,5.365,645,5.391,696,4.846,732,5.365,733,6.683,734,6.683,735,7.538,736,7.538,737,7.538,738,7.538,739,7.538]],["title/classes/CreateNoteDto.html",[74,0.07,740,3.241]],["body/classes/CreateNoteDto.html",[3,0.126,4,0.103,5,0.103,9,0.503,15,0.444,26,0.518,31,0.008,33,0.444,53,1.969,59,0.153,73,0.126,74,0.12,108,0.006,109,0.006,118,1.854,131,2.496,145,1.224,151,3.108,190,3.446,191,1.794,192,3.355,195,2.558,326,1.842,579,4.324,583,3.99,651,5.204,652,4.898,740,5.541,741,6.903,742,6.903,743,7.785,744,7.785,745,6.408]],["title/classes/CreateRoleDto.html",[74,0.07,746,3.241]],["body/classes/CreateRoleDto.html",[3,0.118,4,0.097,5,0.097,9,0.641,15,0.419,26,0.488,31,0.008,32,0.983,33,0.419,59,0.16,73,0.118,74,0.115,108,0.006,109,0.006,117,1.523,118,1.787,123,5.928,129,4.566,131,2.352,134,2.854,135,3.975,136,3.512,137,4.825,145,1.153,151,2.996,190,3.322,191,1.69,192,3.234,195,2.41,198,2.909,204,2.907,508,4.902,583,3.846,746,5.342,747,6.655,748,5.353,749,6.037,750,6.037]],["title/classes/CreateSymbolDto.html",[74,0.07,751,3.241]],["body/classes/CreateSymbolDto.html",[3,0.114,4,0.094,5,0.094,9,0.576,15,0.405,26,0.471,31,0.008,32,0.913,33,0.405,53,1.858,59,0.144,73,0.114,74,0.113,108,0.006,109,0.006,118,1.749,131,2.273,134,2.794,135,3.891,136,3.438,145,1.114,151,2.932,176,5.965,178,5.965,190,3.252,191,1.634,192,3.166,195,2.329,326,1.551,564,4.412,583,3.765,609,5.229,644,5.229,696,4.723,701,4.738,702,4.62,751,5.229,752,6.514,753,5.835,754,7.346,755,6.514,756,7.346,757,7.346,758,5.835,759,7.346,760,7.346,761,5.835,762,5.173,763,5.835,764,5.835,765,5.173]],["title/classes/CreateUserDto.html",[74,0.07,139,2.928]],["body/classes/CreateUserDto.html",[3,0.076,4,0.062,5,0.062,9,0.636,15,0.268,26,0.635,31,0.008,32,0.949,33,0.545,34,0.959,45,3.751,47,1.885,53,2.168,59,0.109,73,0.076,74,0.085,108,0.005,109,0.005,117,1.912,118,1.324,119,4.291,125,1.02,131,1.505,133,3.137,134,2.114,135,2.944,136,2.602,137,3.575,139,3.575,140,4.984,141,5.289,142,5.289,143,5.289,144,4.784,145,1.502,151,3.501,153,3.425,154,6.317,155,6.317,158,4.93,159,4.515,160,5.388,161,4.93,162,6.317,164,3.425,165,4.515,167,4.581,168,4.93,170,3.425,171,4.807,173,3.425,174,4.93,175,4.93,176,4.515,177,4.93,178,4.515,179,4.93,180,4.93,181,3.283,182,4.896,183,4.93,184,6.317,185,4.93,186,4.515,187,3.425,188,4.515,190,3.342,191,1.082,192,3.253,195,1.542,564,4.205,583,3.869,611,4.395,614,4.926,762,3.425,766,7.184,767,3.863,768,3.863,769,3.863,770,3.863,771,3.863,772,3.863,773,3.425,774,4.93,775,5.56,776,6.514,777,6.514,778,3.863,779,3.863,780,3.863,781,3.863]],["title/injectables/CreateUserProvider.html",[61,0.636,782,3.073]],["body/injectables/CreateUserProvider.html",[3,0.053,4,0.043,5,0.043,9,0.538,10,2.73,11,3.149,15,0.187,16,0.879,21,1.239,26,0.424,28,2.093,29,1.83,30,1.086,31,0.008,32,0.568,33,0.364,34,0.905,35,2.496,38,2.249,44,0.897,46,0.933,54,2.109,59,0.156,60,1.342,61,0.593,62,3.817,63,1.535,64,0.3,73,0.053,74,0.041,76,2.062,77,1.333,81,0.98,84,2.83,85,2.057,89,0.879,90,3.203,93,2.808,94,3.048,108,0.003,109,0.003,111,2.261,113,1.134,117,1.88,119,3.149,120,5.032,130,4.012,137,2.73,139,4.916,144,2.507,196,3.211,200,0.805,202,3.899,203,1.923,204,2.413,205,1.807,224,1.81,228,2.48,273,1.972,295,0.683,385,1.695,389,0.618,396,2.109,428,0.683,429,1.535,446,3.448,456,1.601,483,3.022,511,2.865,520,4.704,527,1.923,547,1.923,552,3.765,553,4.289,663,2.673,668,1.106,670,0.822,672,1.134,782,4.012,783,5.272,784,2.395,785,4.012,786,3.448,787,3.765,788,3.448,789,5.246,790,2.194,791,5.016,792,4.78,793,2.702,794,3.765,795,4.26,796,5.272,797,4.246,798,4.246,799,3.448,800,2.702,801,2.702,802,2.702,803,2.875,804,2.194,805,1.923,806,2.702,807,2.702,808,2.395,809,2.702,810,2.194,811,2.194,812,6.862,813,5.246,814,4.246,815,2.702,816,2.702,817,5.946,818,5.946,819,6.084,820,5.272,821,4.497,822,2.413,823,2.702,824,3.211,825,2.702,826,3.448,827,2.702,828,2.702,829,1.662,830,2.413,831,2.507,832,2.702,833,2.702,834,2.702,835,2.194,836,6.862,837,4.246,838,4.246,839,4.246,840,5.946,841,4.246,842,4.246,843,3.022,844,2.702]],["title/classes/CreateXrefDto.html",[74,0.07,845,3.241]],["body/classes/CreateXrefDto.html",[3,0.116,4,0.095,5,0.095,9,0.58,15,0.409,26,0.598,31,0.008,33,0.513,53,1.871,59,0.145,73,0.116,74,0.114,108,0.006,109,0.006,118,1.762,125,1.554,131,2.298,145,1.413,151,3.383,190,3.577,191,1.652,192,3.483,195,2.355,329,4.551,389,1.939,580,5.266,583,3.792,628,4.369,629,4.791,631,4.791,637,3.675,709,4.791,710,4.488,711,5.232,727,5.232,728,6.56,773,5.232,845,5.266,846,7.166,847,6.563,848,8.083,849,5.901,850,6.56,851,7.399,852,5.901,853,5.901]],["title/injectables/CuratorRoleGuard.html",[61,0.636,269,3.073]],["body/injectables/CuratorRoleGuard.html",[0,3.106,1,4.335,3,0.074,4,0.061,5,0.061,7,2.426,9,0.504,11,4.26,13,1.998,14,4.1,15,0.262,16,1.132,17,3.688,18,3.891,21,2.183,22,2.426,23,5.297,24,5.047,25,4.602,26,0.442,28,1.411,29,2.77,30,1.132,31,0.008,32,0.592,33,0.379,34,0.943,35,3.14,36,3.962,37,4.335,38,3.962,39,3.228,40,3.688,41,4.602,43,4.161,44,1.58,46,1.413,47,2.18,55,2.884,58,3.688,59,0.165,60,1.874,61,0.763,63,4.572,64,0.418,65,1.874,67,2.144,68,2.228,69,2.686,70,2.321,71,2.426,72,2.546,73,0.074,74,0.058,76,2.444,77,1.441,78,2.426,79,3.97,81,2.83,82,2.686,83,2.686,84,1.939,85,1.251,86,2.686,87,2.686,88,2.546,89,0.781,108,0.004,109,0.004,117,1.771,125,0.692,138,4.575,200,1.124,204,2.803,205,1.693,206,3.535,209,2.802,210,3.891,211,3.891,212,3.228,213,3.891,214,3.688,215,3.363,216,1.874,217,2.182,218,1.584,219,1.584,220,2.686,221,2.426,222,4.575,223,3.294,224,1.148,225,2.854,226,2.546,227,2.854,228,1.173,229,2.686,230,2.686,231,4.439,233,2.854,269,5.262,713,3.863,826,3.064,854,3.346,855,5.467,856,3.773,857,3.773,858,4.847,859,3.773]],["title/injectables/DataResponseInterceptor.html",[61,0.636,299,3.444]],["body/injectables/DataResponseInterceptor.html",[3,0.097,4,0.08,5,0.08,9,0.583,15,0.344,16,1.368,21,2.17,26,0.534,30,1.368,31,0.008,32,0.715,33,0.458,34,1.14,35,2.775,41,5.083,43,4.684,44,1.396,59,0.146,61,0.923,64,0.55,65,2.462,73,0.097,74,0.076,75,4.705,76,2.579,77,1.112,89,1.368,100,5.352,108,0.005,109,0.005,134,3.394,200,1.477,214,4.46,287,7.32,299,6.428,301,6.039,447,3.623,488,4.46,512,2.389,860,6.594,861,4.396,862,6.61,863,6.61,864,7.034,865,6.61,866,4.958,867,4.958,868,6.61,869,8.263,870,4.958,871,6.61,872,6.61,873,5.861,874,6.61,875,8.499,876,6.61,877,7.437,878,4.396,879,4.396,880,4.958,881,4.958,882,4.958,883,4.958]],["title/entities/ExternalResource.html",[383,1.106,884,2.802]],["body/entities/ExternalResource.html",[3,0.115,4,0.095,5,0.095,15,0.408,26,0.652,31,0.008,32,0.874,33,0.587,47,2.505,48,2.744,53,1.868,59,0.145,73,0.115,74,0.09,108,0.006,109,0.006,118,1.759,125,1.355,126,2.81,145,1.542,330,5,383,1.795,385,2.35,389,1.847,394,2.537,395,3.184,398,3.786,423,3.184,427,3.479,428,1.489,576,5,710,4.714,884,4.545,885,5.22,886,8.074,887,5.887,888,5.887,889,3.346,890,7.388,891,5.887,892,5.22,893,4.198]],["title/controllers/ExternalResourceController.html",[429,1.175,894,3.444]],["body/controllers/ExternalResourceController.html",[3,0.088,4,0.072,5,0.072,9,0.676,15,0.312,16,1.282,21,1.314,26,0.5,28,1.598,30,1.282,31,0.008,32,0.766,33,0.529,34,1.068,44,1.308,46,1.676,59,0.166,64,0.499,73,0.088,74,0.069,77,1.01,85,1.417,89,1.282,108,0.005,109,0.005,125,1.399,145,1.183,191,1.261,202,3.52,204,1.462,205,2.176,217,1.798,218,1.891,219,1.891,224,1.371,318,2.669,329,5.303,330,4.18,389,1.89,429,1.162,431,1.186,433,1.891,464,3.52,475,2.899,479,1.734,484,3.313,485,3.313,496,2.897,499,2.818,506,1.993,507,2.17,514,2.899,575,5.88,576,4.18,580,6.023,670,1.371,721,3.982,884,2.77,894,4.684,895,3.993,896,6.277,897,6.194,898,4.504,899,3.657,900,3.993,901,3.076,902,4.418,903,3.908,904,2.896,905,4.504,906,6.194,907,3.205,908,3.205,909,3.982,910,3.406,911,3.406,912,4.355,913,4.504,914,4.552,915,3.411,916,3.657,917,4.552,918,3.657,919,3.993,920,3.205,921,4.504,922,4.504,923,3.406,924,2.896,925,4.504,926,3.039,927,3.039,928,4.504]],["title/modules/ExternalResourceModule.html",[234,1.001,248,3.073]],["body/modules/ExternalResourceModule.html",[3,0.118,4,0.097,5,0.097,31,0.008,59,0.172,64,0.67,73,0.118,74,0.093,108,0.006,109,0.006,234,1.795,236,2.141,237,2.191,238,2.296,239,2.296,240,2.191,241,3.106,242,3.106,248,6.128,271,2.854,272,2.296,273,2.002,279,2.296,294,2.471,295,1.527,329,5.024,330,3.565,431,1.976,576,3.565,884,3.714,894,6.176,917,6.051,918,4.902,920,4.297,929,5.353,930,5.353,931,5.353,932,6.037,933,6.037,934,6.037]],["title/injectables/ExternalResourceService.html",[61,0.636,917,2.928]],["body/injectables/ExternalResourceService.html",[3,0.092,4,0.075,5,0.075,9,0.5,15,0.326,16,1.32,21,1.861,26,0.585,28,1.868,30,1.498,31,0.008,32,0.783,33,0.502,34,1.248,44,1.346,46,1.706,54,1.666,55,2.609,59,0.159,61,0.89,64,0.521,73,0.092,74,0.072,77,1.054,84,2.567,85,1.656,89,1.32,90,2.609,93,2.609,94,3.161,95,3.17,108,0.005,109,0.005,125,1.327,200,1.4,205,2.204,224,1.43,228,2.25,295,1.188,329,4.452,330,4.583,389,1.656,428,1.188,456,1.953,575,6.091,576,4.583,580,5.151,663,3.023,668,1.923,670,1.43,803,3.967,822,2.67,830,2.67,831,2.774,884,5.49,917,4.099,919,4.166,920,3.344,935,4.166,936,4.538,937,4.699,938,4.699,939,6.376,940,4.699,941,4.699,942,4.538,943,4.699,944,4.538,945,4.699,946,4.699,947,4.699,948,3.344,949,3.344,950,4.699,951,4.699]],["title/injectables/FindOneUserByEmailProvider.html",[61,0.636,952,3.073]],["body/injectables/FindOneUserByEmailProvider.html",[3,0.091,4,0.074,5,0.074,9,0.605,15,0.321,16,1.307,21,1.843,26,0.51,30,1.307,31,0.008,32,0.683,33,0.438,34,1.089,44,1.517,53,1.817,54,1.643,55,3.304,59,0.151,61,0.881,62,4.242,63,4.082,64,0.514,73,0.091,74,0.11,76,2.189,77,1.039,79,3.718,84,2.239,85,1.444,89,0.959,90,1.896,93,1.896,94,1.804,108,0.005,109,0.005,117,1.924,119,4.921,182,4.242,200,1.38,205,1.892,224,1.41,228,1.44,295,1.171,383,1.961,428,1.171,456,1.677,547,3.297,553,4.229,663,3.38,668,1.896,790,3.761,795,5.833,805,3.297,810,3.761,843,3.297,952,4.26,953,6.37,954,4.107,955,4.619,956,5.599,957,4.632,958,6.314,959,5.599,960,4.632,961,4.775,962,4.107,963,3.297,964,4.632]],["title/entities/Gene.html",[326,0.962,383,1.106]],["body/entities/Gene.html",[3,0.05,4,0.081,5,0.041,9,0.199,15,0.176,26,0.671,31,0.008,32,0.437,33,0.625,47,2.264,48,2.132,53,1.585,54,0.899,59,0.151,73,0.05,74,0.077,108,0.003,109,0.003,117,1.644,118,0.962,125,0.923,126,2.183,127,3.04,145,1.586,167,2.597,171,3.873,182,3.943,198,3.218,318,1.741,326,1.967,327,1.805,334,1.441,336,1.441,338,1.56,339,1.441,343,1.497,375,4.938,383,1.394,385,1.012,389,1.151,393,4.365,394,1.741,395,2.877,396,2.851,398,2.07,399,2.139,411,2.725,418,2.759,421,2.059,423,2.169,426,3.146,427,2.169,428,0.641,450,2.07,456,1.34,479,1.961,496,2.349,587,4.463,590,3.28,591,3.581,604,5.422,608,3.28,609,4.085,612,2.249,613,1.343,617,1.758,673,1.3,682,2.58,889,3.795,893,4.132,965,2.249,966,3.581,967,2.875,968,5.033,969,2.972,970,4.463,971,4.463,972,4.463,973,4.463,974,5.033,975,4.463,976,3.582,977,3.396,978,4.904,979,3.096,980,2.536,981,6.644,982,6.677,983,5.74,984,5.74,985,4.039,986,2.536,987,5.74,988,4.039,989,2.536,990,3.581,991,4.108,992,4.039,993,2.536,994,3.98,995,4.039,996,2.536,997,4.085,998,5.089,999,3.795,1000,4.039,1001,2.536,1002,4.63,1003,4.039,1004,2.536,1005,4.039,1006,2.536,1007,3.98,1008,4.039,1009,2.536,1010,4.341,1011,2.536,1012,4.039,1013,3.581,1014,2.536,1015,4.039,1016,4.039,1017,3.582,1018,2.536,1019,3.581,1020,2.875,1021,4.039,1022,2.536,1023,2.536,1024,4.039,1025,3.581,1026,4.039,1027,2.875,1028,4.039,1029,3.396,1030,2.536,1031,4.039,1032,3.581,1033,3.581,1034,3.581,1035,4.461,1036,2.249,1037,1.441,1038,1.441,1039,1.441,1040,1.441,1041,1.711,1042,2.536,1043,2.249,1044,2.536,1045,1.918,1046,2.536,1047,2.536]],["title/controllers/GeneController.html",[429,1.175,1048,3.444]],["body/controllers/GeneController.html",[3,0.082,4,0.067,5,0.067,9,0.664,15,0.291,16,1.22,26,0.476,28,1.521,29,1.807,30,1.22,31,0.008,32,0.738,33,0.409,34,1.017,36,3.121,44,1.245,46,1.625,47,1.421,55,2.412,59,0.169,64,0.465,73,0.082,74,0.105,76,1.454,77,0.94,85,1.691,89,1.22,108,0.005,109,0.005,111,2.811,113,1.76,117,1.639,125,1.25,145,1.126,191,1.174,202,2.382,204,2.211,217,1.673,218,1.76,219,1.76,223,3.02,326,1.96,389,1.97,429,1.759,431,1.104,433,1.76,450,3.02,456,1.885,464,3.349,475,2.758,479,1.65,484,3.189,485,3.189,496,1.716,499,2.681,506,1.855,507,2.02,511,3.284,512,2.02,514,2.758,584,5.45,669,3.17,670,1.276,671,3.404,672,1.76,713,4.052,901,2.927,903,3.789,907,2.984,908,2.984,912,2.579,915,3.284,916,3.48,926,2.828,927,2.828,1048,5.154,1049,3.717,1050,3.48,1051,6.815,1052,5.893,1053,4.192,1054,4.192,1055,3.717,1056,4.192,1057,4.192,1058,5.225,1059,3.789,1060,4.192,1061,4.192,1062,3.17,1063,4.192,1064,4.785,1065,4.457,1066,3.48,1067,2.475,1068,2.695,1069,3.492,1070,3.717,1071,2.695,1072,2.695,1073,2.298,1074,4.192,1075,4.192,1076,4.192]],["title/entities/GeneHistory.html",[383,1.106,1035,3.241]],["body/entities/GeneHistory.html",[3,0.081,4,0.066,5,0.066,15,0.285,26,0.667,31,0.008,33,0.632,47,2.485,48,2.982,53,2.168,59,0.132,73,0.081,74,0.063,108,0.005,109,0.005,117,1.763,118,1.384,125,1.066,126,2.211,127,3.079,145,1.576,326,1.914,327,5.999,383,1.412,385,1.642,389,1.543,394,2.906,395,3.459,398,4.114,399,4.251,404,5.217,411,4.945,418,3.187,423,3.159,426,3.696,427,2.906,428,1.04,617,2.22,673,2.108,969,3.982,978,4.566,979,4.149,1020,5.999,1025,5.155,1027,5.217,1035,4.138,1077,3.647,1078,6.28,1079,6.744,1080,6.744,1081,6.744,1082,5.155,1083,4.113,1084,5.155,1085,5.155,1086,4.113,1087,5.952,1088,5.814,1089,4.113,1090,4.113,1091,5.814,1092,4.113,1093,4.113,1094,4.113,1095,2.337,1096,5.155]],["title/modules/GeneHistoryModule.html",[234,1.001,249,3.241]],["body/modules/GeneHistoryModule.html",[3,0.135,4,0.11,5,0.11,31,0.008,59,0.169,64,0.761,73,0.135,74,0.105,108,0.007,109,0.007,234,1.783,236,2.434,249,5.774,279,2.61,294,2.809,295,1.736,326,1.45,327,4.885,617,1.808,1035,4.885,1036,6.086,1097,6.864,1098,6.864]],["title/entities/GeneLocusType.html",[383,1.106,991,2.802]],["body/entities/GeneLocusType.html",[3,0.082,4,0.067,5,0.067,15,0.291,26,0.695,31,0.008,32,0.454,33,0.612,34,1.505,48,2.189,54,1.487,59,0.153,73,0.082,74,0.064,108,0.005,109,0.005,117,1.79,118,1.403,125,1.081,126,1.594,145,1.644,198,3.562,318,4,321,2.382,326,1.818,338,5.367,383,1.432,385,1.673,389,1.559,394,1.807,395,2.539,396,2.927,405,2.475,406,3.48,418,4.052,423,2.539,426,4.269,427,2.539,428,1.06,479,1.908,613,2.22,617,2.298,625,4.269,630,2.298,673,2.149,682,3.492,718,2.082,969,4.024,976,4.85,977,4.598,978,4.77,979,4.192,991,3.625,1017,4.85,1029,4.598,1039,2.382,1095,2.382,1099,3.404,1100,4.85,1101,5.152,1102,4.192,1103,4.457,1104,4.192,1105,4.457,1106,4.192,1107,5.893,1108,4.192,1109,3.717,1110,5.893,1111,4.192,1112,4.192,1113,4.192,1114,4.192,1115,4.192,1116,2.984,1117,2.984]],["title/controllers/GeneLocusTypeController.html",[429,1.175,1118,3.444]],["body/controllers/GeneLocusTypeController.html",[3,0.1,4,0.082,5,0.082,9,0.528,15,0.353,16,1.393,26,0.411,28,1.737,30,1.054,31,0.008,32,0.551,33,0.578,34,0.879,44,1.076,46,1.479,59,0.176,64,0.565,73,0.1,74,0.078,77,1.142,85,1.54,89,1.054,108,0.005,109,0.005,111,3.049,113,2.138,117,1.627,145,0.973,191,1.426,204,1.653,217,2.033,218,2.138,219,2.138,318,3.866,326,1.809,338,4.14,429,1.314,431,1.341,433,2.138,456,1.759,475,2.384,479,1.426,484,3.15,485,3.15,496,2.085,499,3.062,506,2.254,507,2.454,512,2.454,514,2.384,616,6.096,617,1.772,670,1.55,672,2.138,901,3.342,902,3.449,903,3.449,915,3.243,991,3.133,1039,2.894,1066,3.974,1067,3.008,1068,3.275,1071,3.275,1072,3.275,1073,2.792,1118,5.09,1119,4.136,1120,7.537,1121,5.093,1122,3.275,1123,5.093,1124,5.093,1125,5.093,1126,5.085,1127,3.625,1128,3.852,1129,3.436,1130,5.093,1131,5.093]],["title/modules/GeneLocusTypeModule.html",[234,1.001,250,3.241]],["body/modules/GeneLocusTypeModule.html",[3,0.106,4,0.087,5,0.087,31,0.008,59,0.178,64,0.598,73,0.106,74,0.083,108,0.006,109,0.006,234,1.703,236,1.911,237,1.955,238,2.049,239,2.049,240,1.955,241,2.946,242,2.049,250,6.658,251,4.767,259,5.868,264,4.07,267,4.458,271,2.655,272,2.049,273,1.787,279,2.655,294,2.205,295,1.363,318,3.658,321,3.062,322,4.778,326,1.636,338,3.315,431,1.839,537,3.315,617,1.419,718,2.676,991,3.315,1039,3.062,1118,5.858,1126,5.868,1127,3.835,1132,4.778,1133,5.388,1134,4.778,1135,4.778,1136,4.778,1137,2.953,1138,3.635,1139,5.388]],["title/injectables/GeneLocusTypeService.html",[61,0.636,1126,3.073]],["body/injectables/GeneLocusTypeService.html",[3,0.089,4,0.073,5,0.073,9,0.357,15,0.316,16,1.291,21,1.821,26,0.504,28,1.837,30,1.291,31,0.008,32,0.675,33,0.494,34,1.076,44,0.961,46,1.371,54,2.525,59,0.172,61,0.871,64,0.505,73,0.089,74,0.07,77,1.717,81,1.651,84,2.213,85,1.427,89,0.942,90,2.553,93,2.553,94,2.43,108,0.005,109,0.005,111,2.912,113,1.911,117,1.444,200,1.356,205,1.875,206,3.392,216,2.26,224,2.331,228,2.381,295,1.151,318,3.778,321,2.586,326,1.75,338,4.379,428,1.151,456,1.661,479,1.274,616,5.898,617,1.875,660,2.799,663,2.983,667,2.799,668,1.862,670,1.385,672,1.911,676,4.045,677,2.799,680,3.838,682,2.332,684,2.586,685,2.494,718,2.26,991,3.838,1039,2.586,1069,4.349,1101,4.203,1126,4.209,1127,3.239,1128,3.442,1140,3.695,1141,5.456,1142,7.119,1143,4.551,1144,4.551,1145,4.551,1146,2.926,1147,4.551,1148,4.551,1149,4.551,1150,4.551,1151,4.551,1152,4.551,1153,4.551]],["title/modules/GeneModule.html",[234,1.001,251,2.496]],["body/modules/GeneModule.html",[3,0.093,4,0.076,5,0.076,9,0.373,31,0.008,36,3.402,59,0.18,64,0.527,73,0.093,74,0.112,108,0.005,109,0.005,234,1.79,236,1.685,237,1.724,238,1.806,239,1.806,240,1.724,241,2.767,242,2.767,251,5.108,263,5.663,264,3.928,265,5.663,267,4.302,271,2.443,272,1.806,273,1.575,279,2.443,294,1.944,295,1.201,326,1.773,334,2.699,336,2.699,339,2.699,343,2.805,431,1.692,450,3.292,537,2.922,617,2.053,657,5.663,669,3.592,994,3.65,999,3.65,1002,3.793,1007,3.65,1037,2.699,1038,2.699,1040,2.699,1041,3.205,1048,5.504,1050,3.793,1069,4.66,1070,4.212,1137,2.603,1154,4.212,1155,4.212,1156,4.212,1157,4.75,1158,4.75,1159,4.75,1160,3.592,1161,4.212,1162,4.75,1163,4.75,1164,4.75]],["title/entities/GeneName.html",[383,1.106,994,2.588]],["body/entities/GeneName.html",[3,0.08,4,0.066,5,0.066,15,0.284,26,0.701,31,0.008,32,0.95,33,0.631,34,1.497,48,2.717,54,2.055,59,0.157,73,0.08,74,0.063,108,0.005,109,0.005,117,1.781,118,1.38,125,1.063,126,1.557,145,1.658,198,4.057,326,1.808,336,4.99,383,1.408,385,1.634,389,1.539,394,2.497,395,3.152,396,3.633,405,2.417,406,3.422,418,4.009,423,2.899,426,4.231,427,2.497,428,1.035,479,1.883,613,2.168,617,2.312,625,4.231,630,2.244,642,5.494,646,2.913,647,3.096,673,2.098,682,3.447,969,3.972,976,4.788,977,4.538,978,4.733,979,4.138,994,3.293,1017,4.788,1029,4.538,1095,2.326,1100,4.788,1103,4.382,1105,4.382,1116,2.913,1117,2.913,1165,3.63,1166,4.093,1167,4.093,1168,4.093,1169,5.795,1170,4.093,1171,4.093,1172,4.093,1173,5.795,1174,4.093,1175,4.093,1176,4.093,1177,4.093,1178,3.63,1179,3.63,1180,3.63]],["title/controllers/GeneNameController.html",[429,1.175,1181,3.444]],["body/controllers/GeneNameController.html",[3,0.1,4,0.082,5,0.082,9,0.529,15,0.355,16,1.397,26,0.413,28,1.741,30,1.058,31,0.008,32,0.869,33,0.355,34,0.882,44,1.08,46,1.483,59,0.176,64,0.567,73,0.1,74,0.079,77,1.147,85,1.837,89,1.058,108,0.006,109,0.006,111,3.054,113,2.147,117,1.629,145,0.977,191,1.432,204,1.659,217,2.041,218,2.147,219,2.147,326,1.874,336,3.834,429,1.32,431,1.347,433,2.147,456,1.762,475,2.393,479,1.432,484,3.158,485,3.158,496,2.093,499,3.07,506,2.263,507,2.464,511,3.251,512,2.464,514,2.393,617,1.777,633,6.102,670,1.556,672,2.147,901,3.351,902,3.458,903,3.458,915,3.251,994,2.906,1038,2.906,1066,3.984,1067,3.019,1068,3.288,1071,3.288,1072,3.288,1073,2.803,1122,3.288,1181,5.103,1182,4.534,1183,7.552,1184,5.113,1185,5.113,1186,5.113,1187,5.113,1188,5.095,1189,3.867,1190,3.867,1191,5.113,1192,5.113]],["title/modules/GeneNameModule.html",[234,1.001,252,3.241]],["body/modules/GeneNameModule.html",[3,0.107,4,0.088,5,0.088,31,0.008,59,0.178,64,0.606,73,0.107,74,0.084,108,0.006,109,0.006,234,1.715,236,1.939,237,1.984,238,2.079,239,2.079,240,1.984,241,2.966,242,2.079,251,4.786,252,6.67,261,5.891,264,4.086,267,4.475,271,2.68,272,2.079,273,1.813,279,2.68,294,2.238,295,1.383,326,1.647,336,3.107,431,1.856,537,3.363,617,1.44,994,3.107,1038,3.107,1137,2.997,1138,3.689,1181,5.899,1188,5.891,1189,4.135,1193,4.848,1194,5.467,1195,4.848,1196,5.467,1197,4.848,1198,5.467,1199,5.467]],["title/injectables/GeneNameService.html",[61,0.636,1188,3.073]],["body/injectables/GeneNameService.html",[3,0.086,4,0.071,5,0.071,9,0.345,15,0.305,16,1.263,21,1.78,26,0.493,28,1.806,30,1.263,31,0.008,32,0.954,33,0.485,34,1.052,44,0.93,46,1.341,54,2.482,59,0.176,61,0.851,64,0.488,73,0.086,74,0.068,77,1.694,81,1.598,84,2.163,85,1.395,89,0.912,90,2.496,93,2.496,94,2.376,108,0.005,109,0.005,111,2.872,113,1.849,117,1.609,126,1.675,200,1.313,205,1.843,206,3.358,216,2.188,224,2.299,228,2.348,295,1.114,326,1.838,336,3.976,428,1.114,456,1.633,479,1.233,617,1.843,633,5.84,660,2.71,663,2.942,667,2.71,668,1.803,670,1.341,672,1.849,673,2.257,676,3.976,677,2.71,680,3.752,682,2.257,684,2.503,685,2.414,994,3.466,1038,2.503,1069,4.311,1095,2.503,1146,2.832,1178,3.906,1188,4.115,1190,3.331,1200,3.906,1201,5.408,1202,6.998,1203,4.405,1204,4.405,1205,4.405,1206,4.405,1207,4.405,1208,4.405,1209,4.405,1210,4.405,1211,4.405,1212,4.405,1213,4.405,1214,4.405,1215,4.405,1216,2.832,1217,2.832]],["title/entities/GeneNote.html",[383,1.106,999,2.588]],["body/entities/GeneNote.html",[3,0.089,4,0.073,5,0.073,15,0.315,26,0.698,31,0.008,32,0.492,33,0.608,34,1.49,54,1.611,59,0.157,73,0.089,74,0.07,108,0.005,109,0.005,117,1.816,118,1.484,125,1.143,126,1.728,145,1.65,198,3.688,326,1.851,339,4.98,383,1.514,385,1.813,389,1.627,394,1.958,396,3.095,418,4.195,423,2.685,426,4.395,427,3.065,428,1.149,479,1.991,613,2.406,617,2.308,625,4.395,630,2.49,652,4.86,673,2.328,682,3.645,969,4.199,977,4.798,978,4.519,979,4.375,999,3.541,1029,4.798,1095,2.582,1100,5.062,1116,3.233,1117,3.233,1218,4.028,1219,4.543,1220,6.231,1221,4.543,1222,6.231,1223,4.543,1224,6.231,1225,4.543,1226,4.543,1227,6.231,1228,4.543,1229,4.543,1230,4.543,1231,4.543,1232,4.543]],["title/controllers/GeneNoteController.html",[429,1.175,1233,3.444]],["body/controllers/GeneNoteController.html",[3,0.093,4,0.076,5,0.076,9,0.373,15,0.33,16,1.331,21,1.389,26,0.384,28,1.88,30,0.985,31,0.008,32,0.515,33,0.33,34,0.821,44,1.005,46,1.414,54,2.583,59,0.175,64,0.528,73,0.093,74,0.073,77,1.749,81,1.727,84,2.281,85,1.471,89,0.985,90,2.632,93,2.632,94,2.505,108,0.005,109,0.005,111,2.967,113,1.998,117,1.478,126,1.81,191,1.332,205,1.918,206,2.981,216,2.363,224,2.374,228,2.425,295,1.203,326,1.844,339,3.655,428,1.203,429,1.228,431,1.253,433,1.998,456,1.7,479,1.332,506,2.106,617,1.694,649,5.978,652,4.603,663,2.505,667,2.927,668,1.948,670,1.448,672,1.998,676,4.139,677,2.927,680,3.956,682,2.439,684,2.704,685,2.608,999,3.655,1040,2.704,1069,3.733,1071,3.059,1072,3.059,1146,3.059,1216,3.059,1217,3.059,1233,4.863,1234,4.219,1235,4.219,1236,4.759,1237,4.481,1238,4.219,1239,3.599,1240,4.219,1241,4.219,1242,4.219,1243,4.219,1244,4.219,1245,4.219,1246,4.219]],["title/modules/GeneNoteModule.html",[234,1.001,253,3.241]],["body/modules/GeneNoteModule.html",[3,0.107,4,0.088,5,0.088,31,0.008,59,0.178,64,0.606,73,0.107,74,0.084,108,0.006,109,0.006,234,1.715,236,1.939,237,1.984,238,2.079,239,2.079,240,1.984,241,2.966,242,2.079,251,4.786,253,6.67,262,5.891,264,4.086,267,4.475,271,2.68,272,2.079,273,1.813,279,2.68,294,2.238,295,1.383,326,1.647,339,3.107,431,1.856,537,3.363,617,1.44,999,3.107,1040,3.107,1137,2.997,1138,3.689,1233,5.899,1247,4.848,1248,5.467,1249,4.848,1250,6.215,1251,5.467,1252,4.848,1253,4.44,1254,5.467,1255,5.467]],["title/injectables/GeneNoteService.html",[61,0.636,1250,3.241]],["body/injectables/GeneNoteService.html",[3,0.09,4,0.074,5,0.074,9,0.361,15,0.319,16,1.302,21,1.836,26,0.508,28,1.849,30,1.302,31,0.008,32,0.681,33,0.436,34,1.085,44,0.973,46,1.383,54,2.541,59,0.172,61,0.878,64,0.511,73,0.09,74,0.071,77,1.726,81,1.672,84,2.231,85,1.439,89,0.954,90,2.575,93,2.575,94,2.451,108,0.005,109,0.005,111,2.927,113,1.934,117,1.454,126,1.752,200,1.373,205,1.887,206,3.404,216,2.288,224,2.343,228,2.393,295,1.165,326,1.798,339,4.071,428,1.165,456,1.672,479,1.29,617,1.887,649,5.92,652,4.559,660,2.834,663,2.999,667,2.834,668,1.886,670,1.402,672,1.934,676,4.071,677,2.834,680,3.87,682,2.361,684,2.618,685,2.525,999,3.575,1040,2.618,1069,4.364,1146,2.962,1216,2.962,1217,2.962,1235,4.085,1237,5.238,1238,4.085,1239,3.484,1240,4.085,1241,6.352,1242,4.085,1243,4.085,1244,4.085,1245,4.085,1246,4.085,1250,4.478,1256,4.085,1257,4.607,1258,4.607]],["title/entities/GeneReplacement.html",[383,1.106,1002,2.689]],["body/entities/GeneReplacement.html",[3,0.099,4,0.081,5,0.081,15,0.35,26,0.69,31,0.008,32,0.812,33,0.592,48,2.483,59,0.147,73,0.099,74,0.077,108,0.005,109,0.005,117,1.733,118,1.592,125,1.465,145,1.631,326,1.925,343,5.145,383,1.624,385,2.013,395,2.881,418,4.111,426,4.378,428,1.276,617,2.295,673,2.585,689,6.651,690,6.651,969,4.429,978,4.907,979,4.614,1002,3.948,1095,2.866,1259,4.472,1260,6.651,1261,6.651,1262,5.044,1263,6.687,1264,5.044,1265,5.044,1266,6.687,1267,5.044,1268,8.311,1269,5.044,1270,5.044,1271,6.687,1272,5.044,1273,5.044,1274,7.501,1275,5.044,1276,5.044,1277,5.044]],["title/controllers/GeneReplacementController.html",[429,1.175,1278,3.444]],["body/controllers/GeneReplacementController.html",[3,0.102,4,0.084,5,0.084,9,0.535,15,0.361,16,1.413,21,1.519,26,0.42,28,1.762,30,1.077,31,0.008,32,0.563,33,0.361,34,0.898,44,1.099,46,1.501,59,0.177,64,0.577,73,0.102,74,0.08,77,1.167,85,1.562,89,1.077,108,0.006,109,0.006,111,3.075,113,2.185,117,1.641,145,0.994,191,1.457,204,1.689,217,2.078,218,2.185,219,2.185,224,1.584,326,1.82,343,4.031,429,1.343,431,1.371,433,2.185,456,1.778,475,2.436,479,1.457,484,3.195,485,3.195,496,2.13,499,3.106,506,2.304,507,2.508,514,2.436,617,1.798,670,1.584,672,2.185,686,6.132,901,3.391,902,3.499,903,3.499,915,3.29,1002,3.074,1041,3.512,1066,4.031,1067,3.074,1068,3.347,1071,3.347,1072,3.347,1073,2.853,1122,3.347,1278,5.163,1279,4.615,1280,7.618,1281,5.205,1282,5.205,1283,5.205,1284,5.205,1285,5.14,1286,4.615,1287,4.615,1288,4.615,1289,5.205,1290,5.205]],["title/modules/GeneReplacementModule.html",[234,1.001,254,3.241]],["body/modules/GeneReplacementModule.html",[3,0.11,4,0.09,5,0.09,31,0.008,59,0.177,64,0.623,73,0.11,74,0.086,108,0.006,109,0.006,234,1.737,236,1.993,237,2.04,238,2.137,239,2.137,240,2.04,241,3.005,242,2.137,251,4.821,254,6.635,264,4.116,267,4.508,271,2.728,272,2.137,273,1.864,279,2.728,294,2.3,295,1.422,326,1.669,343,3.319,431,1.889,537,3.458,617,1.48,1002,3.319,1041,3.792,1137,3.081,1138,3.792,1278,5.977,1285,5.934,1286,4.984,1291,4.984,1292,4.984,1293,5.621,1294,5.621,1295,5.621,1296,5.621]],["title/injectables/GeneReplacementService.html",[61,0.636,1285,3.073]],["body/injectables/GeneReplacementService.html",[3,0.092,4,0.075,5,0.075,9,0.368,15,0.325,16,1.318,21,1.858,26,0.514,28,1.866,30,1.318,31,0.008,32,0.689,33,0.442,34,1.099,44,0.99,46,1.4,54,2.564,59,0.171,61,0.889,64,0.52,73,0.092,74,0.072,77,1.621,81,1.702,84,2.258,85,1.457,89,0.971,90,2.606,93,2.606,94,2.481,108,0.005,109,0.005,111,2.949,113,1.969,117,1.467,126,1.784,200,1.398,205,1.904,206,3.423,216,2.329,224,2.2,228,2.411,295,1.186,326,1.638,343,4.269,428,1.186,456,1.688,617,1.904,660,2.885,663,3.021,667,2.885,668,1.919,670,1.427,672,1.969,677,2.885,680,3.917,684,2.665,685,2.571,686,5.952,969,4.579,1002,3.76,1041,3.164,1069,4.384,1146,3.015,1216,3.015,1217,3.015,1260,6.877,1261,6.877,1285,4.296,1287,4.159,1288,5.646,1297,4.159,1298,7.23,1299,4.69,1300,4.69,1301,4.69,1302,4.69,1303,6.368,1304,4.69,1305,4.69,1306,4.69,1307,4.69]],["title/injectables/GeneService.html",[61,0.636,1069,2.334]],["body/injectables/GeneService.html",[3,0.083,4,0.068,5,0.068,9,0.582,15,0.293,16,1.228,21,2.167,26,0.553,28,2.227,30,1.418,31,0.008,32,0.741,33,0.475,34,1.182,35,2.491,36,3.142,38,3.142,44,1.568,46,1.632,55,2.428,59,0.163,61,0.828,64,0.469,73,0.083,74,0.12,76,2.574,77,1.33,79,2.859,89,1.228,94,2.311,108,0.005,109,0.005,111,2.823,113,1.777,116,4.223,117,1.723,125,1.256,134,2.256,200,1.261,205,2.134,209,3.805,224,1.806,228,1.316,295,1.071,326,1.979,389,1.942,428,1.071,450,3.041,456,1.891,496,2.428,553,4.069,584,5.613,657,5.729,662,5.261,663,2.892,665,3.753,668,1.732,669,3.201,670,1.288,671,3.437,672,1.777,675,3.753,684,2.406,1069,3.805,1160,3.201,1161,3.753,1308,3.753,1309,5.261,1310,5.933,1311,5.261,1312,4.233,1313,4.233,1314,5.933,1315,4.233,1316,5.933,1317,4.233,1318,3.437,1319,3.753,1320,4.233,1321,4.233]],["title/entities/GeneSymbol.html",[383,1.106,1007,2.588]],["body/entities/GeneSymbol.html",[3,0.079,4,0.065,5,0.065,9,0.316,15,0.279,26,0.699,31,0.008,32,0.436,33,0.63,34,1.446,48,2.698,54,2.032,59,0.156,73,0.079,74,0.102,108,0.005,109,0.005,117,1.776,118,1.365,125,1.051,126,1.533,145,1.653,198,4.04,326,1.849,334,4.974,383,1.765,385,1.609,389,1.526,394,2.47,395,3.13,396,3.608,405,2.38,406,3.384,418,3.981,423,2.874,426,4.206,427,2.47,428,1.019,479,1.867,613,2.134,617,2.305,625,4.206,630,2.209,642,5.462,646,2.868,647,3.048,673,2.065,682,3.418,702,4.531,969,3.938,976,4.747,977,4.5,978,4.709,979,4.103,1007,3.257,1017,4.747,1029,4.5,1095,2.29,1100,4.747,1103,4.334,1105,4.334,1116,2.868,1117,2.868,1180,3.573,1322,3.573,1323,4.03,1324,4.03,1325,4.03,1326,5.081,1327,4.03,1328,4.03,1329,4.03,1330,4.03,1331,5.731,1332,4.03,1333,4.03,1334,4.03,1335,4.03,1336,3.573]],["title/controllers/GeneSymbolController.html",[429,1.175,1337,3.444]],["body/controllers/GeneSymbolController.html",[3,0.102,4,0.084,5,0.084,9,0.537,15,0.362,16,1.417,26,0.422,28,1.766,30,1.082,31,0.008,32,0.566,33,0.362,34,0.902,44,1.104,46,1.504,59,0.177,64,0.58,73,0.102,74,0.08,77,1.172,85,1.566,89,1.082,108,0.006,109,0.006,111,3.08,113,2.194,117,1.643,145,0.998,191,1.463,204,1.696,217,2.086,218,2.194,219,2.194,326,1.822,334,3.89,429,1.349,431,1.376,433,2.194,456,1.781,475,2.446,479,1.463,484,3.203,485,3.203,496,2.139,499,3.114,506,2.313,507,2.518,512,2.518,514,2.446,617,1.803,670,1.591,672,2.194,699,6.139,702,2.678,901,3.399,902,3.508,903,3.508,915,3.298,1007,2.97,1037,2.97,1066,4.042,1067,3.086,1068,3.36,1071,3.36,1072,3.36,1073,2.864,1122,3.36,1337,5.176,1338,4.634,1339,7.633,1340,5.226,1341,5.226,1342,5.226,1343,5.226,1344,5.15,1345,3.952,1346,3.952,1347,5.226,1348,5.226]],["title/modules/GeneSymbolModule.html",[234,1.001,255,3.241]],["body/modules/GeneSymbolModule.html",[3,0.107,4,0.088,5,0.088,31,0.008,59,0.178,64,0.606,73,0.107,74,0.084,108,0.006,109,0.006,234,1.715,236,1.939,237,1.984,238,2.079,239,2.079,240,1.984,241,2.966,242,2.079,251,4.786,255,6.67,264,4.086,266,5.891,267,4.475,271,2.68,272,2.079,273,1.813,279,2.68,294,2.238,295,1.383,326,1.647,334,3.107,431,1.856,537,3.363,617,1.44,1007,3.107,1037,3.107,1137,2.997,1138,3.689,1337,5.899,1344,5.891,1345,4.135,1349,4.848,1350,5.467,1351,4.848,1352,5.467,1353,4.848,1354,5.467,1355,5.467]],["title/injectables/GeneSymbolService.html",[61,0.636,1344,3.073]],["body/injectables/GeneSymbolService.html",[3,0.09,4,0.074,5,0.074,9,0.36,15,0.318,16,1.299,21,1.832,26,0.507,28,1.845,30,1.299,31,0.008,32,0.679,33,0.496,34,1.083,44,0.97,46,1.379,54,2.536,59,0.172,61,0.876,64,0.509,73,0.09,74,0.071,77,1.724,81,1.666,84,2.226,85,1.436,89,0.95,90,2.569,93,2.569,94,2.445,108,0.005,109,0.005,111,2.923,113,1.927,117,1.451,126,1.746,200,1.368,205,1.883,206,3.401,216,2.28,224,2.339,228,2.39,295,1.161,326,1.796,334,4.064,428,1.161,456,1.669,479,1.285,617,1.883,660,2.824,663,2.994,667,2.824,668,1.879,670,1.397,672,1.927,676,4.064,677,2.824,680,3.861,682,2.353,684,2.609,685,2.516,699,5.914,702,4.259,1007,3.567,1037,2.609,1069,4.36,1146,2.952,1216,2.952,1217,2.952,1344,4.234,1346,3.472,1356,4.071,1357,5.469,1358,7.151,1359,4.591,1360,4.591,1361,4.591,1362,4.591,1363,4.591,1364,4.591,1365,4.591,1366,4.591,1367,4.591,1368,4.591,1369,4.591]],["title/entities/GeneXref.html",[383,1.106,1370,2.928]],["body/entities/GeneXref.html",[3,0.081,4,0.118,5,0.066,15,0.287,26,0.703,31,0.008,32,0.447,33,0.621,34,1.5,48,2.728,53,1.475,54,1.466,59,0.152,73,0.081,74,0.063,108,0.005,109,0.005,117,1.785,118,1.389,125,1.07,126,1.571,145,1.661,198,3.54,326,1.812,341,5.656,383,1.417,385,1.65,389,1.547,394,2.514,395,3.165,396,3.648,398,2.99,399,3.089,405,2.44,406,3.445,418,4.026,423,2.914,426,4.246,427,2.514,428,1.045,479,1.893,613,2.188,617,2.317,625,4.246,630,2.265,673,2.118,682,3.465,710,4.607,713,3.197,892,3.664,969,3.992,976,4.812,977,4.562,978,4.748,979,4.159,1017,4.812,1029,4.562,1095,2.348,1100,4.812,1103,4.412,1105,4.412,1116,2.941,1117,2.941,1326,5.172,1370,3.751,1371,3.664,1372,4.132,1373,4.132,1374,4.132,1375,4.132,1376,4.132,1377,4.132,1378,4.737,1379,4.132,1380,4.132,1381,4.132,1382,5.834,1383,4.132,1384,4.132]],["title/controllers/GeneXrefController.html",[429,1.175,1385,3.444]],["body/controllers/GeneXrefController.html",[3,0.102,4,0.084,5,0.084,9,0.537,15,0.362,16,1.417,26,0.422,28,1.766,30,1.082,31,0.008,32,0.566,33,0.362,34,0.902,44,1.104,46,1.504,59,0.177,64,0.58,73,0.102,74,0.08,77,1.172,85,1.566,89,1.082,108,0.006,109,0.006,111,3.08,113,2.194,117,1.643,145,0.998,191,1.463,204,1.696,217,2.086,218,2.194,219,2.194,326,1.822,341,4.401,429,1.349,431,1.376,433,2.194,456,1.781,475,2.446,479,1.463,484,3.203,485,3.203,496,2.139,499,3.114,506,2.313,507,2.518,512,2.518,514,2.446,617,1.803,670,1.591,672,2.194,707,6.139,710,2.768,901,3.399,902,3.508,903,3.508,915,3.298,1066,4.042,1067,3.086,1068,3.36,1071,3.36,1072,3.36,1073,2.864,1122,3.36,1370,3.36,1385,5.176,1386,4.634,1387,7.633,1388,5.226,1389,5.226,1390,5.226,1391,5.226,1392,5.15,1393,3.952,1394,3.952,1395,3.36,1396,5.226,1397,5.226]],["title/modules/GeneXrefModule.html",[234,1.001,256,3.241]],["body/modules/GeneXrefModule.html",[3,0.107,4,0.088,5,0.088,31,0.008,59,0.178,64,0.606,73,0.107,74,0.084,108,0.006,109,0.006,234,1.715,236,1.939,237,1.984,238,2.079,239,2.079,240,1.984,241,2.966,242,2.079,251,4.786,256,6.67,264,4.086,267,4.475,268,5.891,271,2.68,272,2.079,273,1.813,279,2.68,294,2.238,295,1.383,326,1.647,341,3.515,431,1.856,537,3.363,617,1.44,1137,2.997,1138,3.689,1370,3.515,1385,5.899,1392,5.891,1393,4.135,1395,3.515,1398,4.848,1399,5.467,1400,4.848,1401,5.467,1402,4.848,1403,5.467,1404,5.467]],["title/injectables/GeneXrefService.html",[61,0.636,1392,3.073]],["body/injectables/GeneXrefService.html",[3,0.09,4,0.101,5,0.074,9,0.36,15,0.318,16,1.299,21,1.832,26,0.507,28,1.845,30,1.299,31,0.008,32,0.679,33,0.435,34,1.083,44,0.97,46,1.379,54,2.536,59,0.172,61,0.876,64,0.509,73,0.09,74,0.071,77,1.724,81,1.666,84,2.226,85,1.436,89,0.95,90,2.569,93,2.569,94,2.445,108,0.005,109,0.005,111,2.923,113,1.927,117,1.451,126,1.746,200,1.368,205,1.883,206,3.401,216,2.28,224,2.339,228,2.39,295,1.161,326,1.796,341,4.598,428,1.161,456,1.669,479,1.285,617,1.883,660,2.824,663,2.994,667,2.824,668,1.879,670,1.397,672,1.927,676,4.064,677,2.824,680,3.861,682,2.353,684,2.609,685,2.516,707,5.914,710,4.401,1069,4.36,1146,2.952,1216,2.952,1217,2.952,1370,4.035,1392,4.234,1394,3.472,1395,2.952,1405,4.071,1406,5.469,1407,7.151,1408,4.591,1409,4.591,1410,4.591,1411,4.591,1412,4.591,1413,4.591,1414,4.591,1415,4.591,1416,4.591,1417,4.591,1418,4.591]],["title/injectables/GenerateTokensProvider.html",[61,0.636,521,2.928]],["body/injectables/GenerateTokensProvider.html",[3,0.072,4,0.059,5,0.059,9,0.547,13,4.1,14,4.651,15,0.256,16,1.444,21,2.036,22,2.374,23,5.266,25,4.562,26,0.513,30,1.444,31,0.008,32,0.687,33,0.484,34,1.095,35,2.259,37,5.349,39,3.178,44,1.473,46,1.534,58,5.801,59,0.152,60,1.834,61,0.751,64,0.41,65,1.834,67,2.099,68,2.181,73,0.072,74,0.057,76,2.684,77,1.207,78,2.374,81,1.34,89,1.114,108,0.004,109,0.004,111,1.404,117,1.722,119,1.956,121,2.793,125,1.42,136,2.519,200,1.101,205,2.039,209,3.576,224,1.638,226,4.707,228,1.673,383,1.307,389,1.231,447,4.243,456,1.807,465,5.51,467,6.194,488,3.631,521,4.977,538,2.999,547,2.629,553,3.824,561,4.707,672,1.551,673,1.893,786,4.37,963,3.83,1082,3.275,1419,6.186,1420,2.999,1421,6.977,1422,4.37,1423,7.417,1424,4.37,1425,6.977,1426,6.286,1427,6.977,1428,3.693,1429,5.382,1430,3.693,1431,5.382,1432,3.693,1433,7.742,1434,5.665,1435,3.693,1436,5.382,1437,5.382,1438,3.693,1439,4.772,1440,5.382,1441,3.275,1442,3.693,1443,3.275,1444,3.693,1445,3.275,1446,3.693,1447,3.275,1448,3.693,1449,5.382,1450,4.772,1451,3.693,1452,3.693,1453,3.693,1454,3.275,1455,3.693,1456,3.693]],["title/classes/GetUserParamsDto.html",[74,0.07,1457,3.444]],["body/classes/GetUserParamsDto.html",[3,0.111,4,0.091,5,0.091,9,0.567,15,0.394,26,0.459,30,1.495,31,0.008,33,0.598,34,1.442,59,0.156,73,0.111,74,0.133,108,0.006,109,0.006,117,1.872,118,1.72,125,1.583,131,2.213,134,3.179,135,3.826,136,3.381,145,1.085,151,2.884,191,1.591,195,2.268,389,2.05,483,5.142,589,5.038,611,4.874,614,5.463,628,4.266,637,2.822,1045,5.463,1457,5.463,1458,6.406,1459,5.038,1460,5.142,1461,5.866,1462,5.682,1463,5.682,1464,5.866,1465,4.874,1466,4.297]],["title/injectables/HashingProvider.html",[61,0.636,520,2.802]],["body/injectables/HashingProvider.html",[3,0.09,4,0.074,5,0.074,9,0.561,15,0.319,16,1.301,26,0.508,30,1.301,31,0.008,32,0.68,33,0.436,34,1.084,44,1.625,46,1.904,47,2.131,48,2.334,53,2.316,59,0.09,61,0.877,64,0.51,73,0.123,74,0.11,76,2.482,108,0.005,109,0.005,131,2.448,134,3.621,200,1.371,209,3.22,215,3.865,489,4.752,520,4.954,553,3.444,554,6.821,555,6.346,556,4.078,557,7.881,558,7.956,560,6.346,561,5.609,562,6.246,563,5.102,564,4.752,565,5.572,567,6.346,568,6.821,569,5.572,1467,4.078,1468,9.045,1469,5.572,1470,6.284,1471,4.599,1472,4.599]],["title/entities/Location.html",[383,1.106,408,3.073]],["body/entities/Location.html",[3,0.077,4,0.063,5,0.063,9,0.31,15,0.274,26,0.659,31,0.008,32,0.883,33,0.643,47,2.441,48,2.942,53,2.247,59,0.111,73,0.077,74,0.101,108,0.005,109,0.005,118,1.345,125,1.21,127,2.992,145,1.558,181,4.925,383,1.749,384,5.093,385,1.577,387,4.273,388,5.849,389,1.509,392,5.849,394,3.282,395,3.712,398,4.415,399,4.562,402,5.363,403,6.773,404,6.269,405,2.333,406,3.336,408,5.942,409,2.988,423,3.414,425,4.273,427,2.435,428,0.999,850,6.383,1473,3.503,1474,6.753,1475,6.596,1476,5.65,1477,5.01,1478,4.273,1479,3.951,1480,5.65,1481,5.991,1482,3.951,1483,5.65,1484,5.65,1485,5.01,1486,3.951,1487,5.65,1488,3.951,1489,3.951,1490,3.951,1491,5.65,1492,3.951,1493,3.503]],["title/controllers/LocationController.html",[429,1.175,1494,3.444]],["body/controllers/LocationController.html",[3,0.14,4,0.115,5,0.115,31,0.008,59,0.14,64,0.79,73,0.14,74,0.109,108,0.007,109,0.007,408,4.808,429,1.839,431,1.877,433,2.992,1494,6.272,1495,6.319,1496,7.127]],["title/modules/LocationModule.html",[234,1.001,257,3.241]],["body/modules/LocationModule.html",[3,0.123,4,0.101,5,0.101,31,0.008,59,0.174,64,0.695,73,0.123,74,0.096,108,0.006,109,0.006,234,1.826,236,2.224,237,2.275,238,2.384,239,2.384,240,2.275,241,3.158,242,2.384,257,6.434,271,2.921,272,2.384,273,2.08,279,2.384,294,2.566,295,1.586,408,4.23,431,2.023,1494,6.281,1497,5.559,1498,5.559,1499,6.434,1500,6.27,1501,6.27,1502,6.27,1503,6.27,1504,6.27]],["title/injectables/LocationService.html",[61,0.636,1499,3.241]],["body/injectables/LocationService.html",[3,0.14,4,0.115,5,0.115,31,0.008,59,0.14,61,1.161,64,0.795,73,0.14,74,0.11,108,0.007,109,0.007,200,2.135,1499,5.921,1505,6.354]],["title/entities/LocusGroup.html",[383,1.106,1506,2.802]],["body/entities/LocusGroup.html",[3,0.099,4,0.081,5,0.081,9,0.396,15,0.35,26,0.606,31,0.008,32,0.9,33,0.604,47,2.27,48,2.487,53,1.899,59,0.131,73,0.099,74,0.078,108,0.005,109,0.005,118,1.594,125,1.377,126,3.25,127,3.546,145,1.434,181,3.953,318,3.683,319,4.72,321,2.872,383,1.942,385,2.017,389,1.718,394,2.178,395,2.885,398,3.431,399,3.546,402,4.305,423,2.885,427,3.235,428,1.278,718,4.13,721,5.494,889,2.872,893,3.805,1039,2.872,1101,5.29,1129,4.517,1506,4.917,1507,4.481,1508,5.063,1509,5.063,1510,7.508,1511,5.054,1512,6.695,1513,5.054,1514,6.695,1515,6.491,1516,5.054,1517,4.119,1518,5.437]],["title/controllers/LocusGroupController.html",[429,1.175,1519,3.444]],["body/controllers/LocusGroupController.html",[3,0.087,4,0.071,5,0.071,9,0.673,15,0.306,16,1.266,26,0.494,28,1.578,29,1.905,30,1.266,31,0.008,32,0.759,33,0.524,34,1.055,35,1.856,44,1.291,46,1.663,59,0.165,64,0.49,73,0.087,74,0.068,76,1.532,77,0.991,85,1.399,89,1.266,108,0.005,109,0.005,125,1.387,145,1.168,191,1.238,202,3.474,204,1.434,205,2.163,217,1.764,218,1.856,219,1.856,318,3.839,319,4.139,389,1.879,429,1.141,431,1.164,433,1.856,464,3.474,475,2.861,479,1.712,484,3.281,485,3.281,496,2.869,499,2.782,506,1.956,507,2.13,511,2.13,512,2.13,514,2.861,670,1.345,717,5.846,718,3.482,721,5.67,896,6.216,899,3.589,900,3.919,901,3.037,902,4.398,903,3.877,904,2.842,907,3.146,908,3.146,909,3.931,910,3.342,911,3.342,912,4.312,914,4.507,915,3.378,916,3.61,923,3.342,924,2.842,926,2.982,927,2.982,1506,2.719,1519,5.301,1520,3.919,1521,5.421,1522,4.42,1523,4.42,1524,5.421,1525,4.42,1526,3.146,1527,3.919,1528,5.105,1529,3.589,1530,3.919,1531,3.919,1532,4.42,1533,4.42]],["title/modules/LocusGroupModule.html",[234,1.001,258,3.073]],["body/modules/LocusGroupModule.html",[3,0.118,4,0.097,5,0.097,31,0.008,59,0.172,64,0.67,73,0.118,74,0.093,108,0.006,109,0.006,234,1.795,236,2.141,237,2.191,238,2.296,239,2.296,240,2.191,241,3.106,242,3.106,258,6.128,271,2.854,272,2.296,273,2.002,279,2.296,294,2.471,295,1.527,318,3.519,319,3.565,431,1.976,718,2.998,1506,3.714,1519,6.176,1526,4.297,1528,6.051,1529,4.902,1534,5.353,1535,5.353,1536,5.353,1537,6.037,1538,6.037,1539,6.037]],["title/injectables/LocusGroupService.html",[61,0.636,1528,2.928]],["body/injectables/LocusGroupService.html",[3,0.092,4,0.075,5,0.075,9,0.499,15,0.325,16,1.318,21,1.858,26,0.584,28,1.866,30,1.497,31,0.008,32,0.783,33,0.501,34,1.247,44,1.345,46,1.705,54,1.663,55,2.606,59,0.159,61,0.889,64,0.52,73,0.092,74,0.072,77,1.052,84,2.564,85,1.654,89,1.318,90,2.606,93,2.606,94,3.159,95,3.164,108,0.005,109,0.005,125,1.326,200,1.398,205,2.202,224,1.427,228,2.248,295,1.186,318,3.342,319,4.579,389,1.654,428,1.186,456,1.952,663,3.021,668,1.919,670,1.427,717,6.088,718,3.852,721,4.649,803,3.963,822,2.665,830,2.665,831,2.769,936,4.532,942,4.532,944,4.532,948,3.338,949,3.338,1506,5.488,1526,3.338,1527,4.159,1528,4.094,1540,4.159,1541,4.69,1542,4.69,1543,6.368,1544,4.69,1545,4.69,1546,4.69,1547,4.69,1548,4.69,1549,4.69,1550,4.69,1551,4.69]],["title/entities/LocusType.html",[383,1.106,1101,2.689]],["body/entities/LocusType.html",[3,0.093,4,0.076,5,0.076,9,0.371,15,0.328,26,0.629,31,0.008,32,0.88,33,0.638,47,2.64,48,2.38,53,1.837,59,0.142,73,0.093,74,0.073,108,0.005,109,0.005,118,1.526,125,1.332,126,2.96,127,3.393,145,1.487,318,3.613,319,2.795,321,4.622,338,2.911,383,1.891,385,1.889,389,1.662,394,2.039,395,2.761,398,3.284,399,3.393,402,4.119,411,4.323,418,2.594,423,2.761,426,3.512,427,3.13,428,1.197,617,1.246,718,4.165,873,5.681,889,2.689,893,3.641,970,6.441,991,5.158,1039,2.689,1099,3.843,1101,4.597,1109,4.196,1129,4.323,1506,5.59,1508,4.846,1515,5.203,1517,3.941,1526,3.368,1552,6.407,1553,6.407,1554,6.407,1555,6.407,1556,4.733,1557,6.407,1558,4.733,1559,6.407,1560,4.733]],["title/controllers/LocusTypeController.html",[429,1.175,1561,3.444]],["body/controllers/LocusTypeController.html",[3,0.088,4,0.072,5,0.072,9,0.676,15,0.312,16,1.282,26,0.5,28,1.598,30,1.282,31,0.008,32,0.766,33,0.629,34,1.068,44,1.308,46,1.676,59,0.166,64,0.499,73,0.088,74,0.069,77,1.01,85,1.417,89,1.282,108,0.005,109,0.005,125,1.399,145,1.183,191,1.261,202,3.52,204,1.462,205,2.176,217,1.798,218,1.891,219,1.891,318,3.815,321,4.023,389,1.89,429,1.162,431,1.186,433,1.891,464,3.52,475,2.899,479,1.734,484,3.313,485,3.313,496,2.897,499,2.818,506,1.993,507,2.17,512,2.17,514,2.899,670,1.371,718,3.516,725,5.88,899,3.657,901,3.076,902,4.418,903,3.908,904,2.896,907,3.205,908,3.205,909,3.982,910,3.406,911,3.406,912,4.355,914,4.552,915,3.411,916,3.657,923,3.406,924,3.982,926,3.039,927,3.039,1039,2.559,1059,2.896,1101,2.659,1119,3.657,1127,3.205,1128,3.406,1141,4.552,1521,5.492,1524,5.492,1530,3.993,1531,3.993,1561,4.684,1562,6.277,1563,4.504,1564,3.205,1565,4.504,1566,4.504,1567,4.504,1568,4.504]],["title/modules/LocusTypeModule.html",[234,1.001,259,3.073]],["body/modules/LocusTypeModule.html",[3,0.114,4,0.093,5,0.093,31,0.008,59,0.174,64,0.644,73,0.114,74,0.089,108,0.006,109,0.006,234,1.764,236,2.06,237,2.108,238,2.209,239,2.209,240,2.108,241,3.052,242,3.052,258,5.985,259,6.203,271,2.786,272,2.209,273,1.927,279,2.786,294,2.377,295,1.469,318,3.458,319,3.43,320,5.15,321,3.301,431,1.929,718,3.638,1039,3.301,1101,3.43,1127,4.134,1135,5.15,1136,5.15,1141,6.02,1561,6.069,1569,5.15,1570,5.15,1571,5.15,1572,5.809,1573,5.809]],["title/injectables/LocusTypeService.html",[61,0.636,1141,2.928]],["body/injectables/LocusTypeService.html",[3,0.088,4,0.072,5,0.072,9,0.485,15,0.312,16,1.281,21,1.805,26,0.571,28,1.825,30,1.464,31,0.008,32,0.825,33,0.528,34,1.22,44,1.307,46,1.675,54,1.594,55,2.532,59,0.166,61,0.863,62,2.655,64,0.499,73,0.088,74,0.069,77,1.387,84,2.509,85,1.618,89,1.281,90,2.895,93,2.895,94,3.112,108,0.005,109,0.005,125,1.297,200,1.34,205,2.174,224,1.883,228,2.369,295,1.137,318,3.283,319,3.653,321,4.33,389,1.415,428,1.137,456,1.927,663,2.968,668,1.84,670,1.368,718,4.101,721,2.891,725,5.877,803,3.391,822,3.516,843,3.2,936,4.403,942,4.403,1039,2.555,1101,5.163,1128,3.4,1140,3.651,1141,3.978,1506,5.079,1526,3.2,1528,5.308,1529,3.651,1574,4.496,1575,7.073,1576,4.496,1577,4.496,1578,4.496,1579,4.496,1580,4.403,1581,4.496,1582,4.496,1583,4.496,1584,4.496,1585,4.496,1586,4.496,1587,4.496]],["title/modules/MailModule.html",[234,1.001,260,3.241]],["body/modules/MailModule.html",[3,0.099,4,0.082,5,0.082,9,0.398,31,0.008,47,1.72,48,2.493,59,0.168,60,2.52,64,0.563,65,2.52,73,0.099,74,0.078,85,1.161,108,0.005,109,0.005,117,1.029,119,4.24,205,1.336,234,1.83,236,1.799,237,1.841,238,1.929,239,1.929,240,1.841,241,2.861,242,2.861,260,6.211,271,2.553,272,1.929,273,1.683,279,1.929,287,6.108,359,4.499,368,4.12,373,4.499,396,2.52,446,4.12,473,4.529,791,6.197,829,4.129,1588,4.499,1589,4.499,1590,4.499,1591,5.074,1592,5.952,1593,5.952,1594,4.529,1595,6.713,1596,5.076,1597,5.952,1598,7.585,1599,6.713,1600,6.713,1601,5.952,1602,5.074,1603,5.074,1604,4.12,1605,4.499,1606,4.499,1607,6.713,1608,5.074,1609,5.074,1610,5.074,1611,5.074,1612,5.074,1613,5.074,1614,5.074,1615,5.074,1616,5.074,1617,5.074,1618,4.499,1619,5.074,1620,5.074,1621,5.074,1622,5.074,1623,4.499,1624,5.074]],["title/injectables/MailService.html",[61,0.636,791,3.073]],["body/injectables/MailService.html",[3,0.102,4,0.083,5,0.083,9,0.597,15,0.36,16,1.411,21,2.221,26,0.551,30,1.411,31,0.008,32,0.824,33,0.473,34,1.176,35,3.615,43,3.067,44,1.097,46,1.499,59,0.149,60,3.386,61,0.952,64,0.576,73,0.102,74,0.08,76,2.364,108,0.006,109,0.006,117,1.844,119,4.77,200,1.548,205,2.004,228,1.615,456,1.776,473,4.6,512,2.503,673,2.662,791,4.6,829,4.194,1454,6.045,1593,7.895,1598,4.606,1604,4.218,1618,4.606,1625,4.606,1626,6.818,1627,5.195,1628,8.776,1629,5.195,1630,8.08,1631,6.818,1632,5.195,1633,8.612,1634,5.195,1635,5.195,1636,5.195,1637,4.606,1638,5.195,1639,5.195,1640,5.195]],["title/guards/MasterRoleGuard.html",[0,2.588,313,3.241]],["body/guards/MasterRoleGuard.html",[0,3.084,1,4.315,2,2.825,3,0.073,4,0.06,5,0.06,7,2.402,9,0.501,10,3.489,11,4.247,13,1.978,14,4.083,15,0.259,16,1.123,17,5.027,18,3.862,21,2.174,22,2.402,23,5.283,24,5.027,25,4.583,26,0.438,28,1.4,29,2.754,30,1.123,31,0.008,32,0.587,33,0.376,34,0.936,35,3.128,36,3.946,37,4.315,38,3.946,39,3.204,40,3.661,41,4.583,43,4.142,44,1.573,46,1.405,47,2.167,55,2.871,58,3.661,59,0.164,60,1.855,61,0.757,63,4.669,64,0.414,65,1.855,67,2.123,68,2.206,69,2.659,70,2.298,71,2.402,72,2.52,73,0.073,74,0.057,75,3.862,76,2.432,77,1.433,78,2.402,79,4.1,81,2.82,82,2.659,83,2.659,84,1.925,85,1.241,86,2.659,87,2.659,88,2.52,89,0.773,108,0.004,109,0.004,117,1.785,125,0.685,138,4.549,203,5.303,204,2.828,205,1.683,206,3.528,209,2.781,210,3.862,211,3.862,212,3.204,213,3.862,214,3.661,215,3.338,216,1.855,217,1.491,218,1.568,219,1.568,220,2.659,221,2.402,222,4.992,223,3.276,224,1.137,225,2.825,226,2.52,227,2.825,228,1.161,229,2.659,230,2.659,233,4.104,313,5.532,826,3.033,1641,3.312,1642,3.736,1643,3.736]],["title/entities/Name.html",[32,0.493,383,1.106]],["body/entities/Name.html",[3,0.102,4,0.084,5,0.084,9,0.409,15,0.362,26,0.616,31,0.008,32,1.012,33,0.609,47,2.318,48,2.539,53,1.928,59,0.134,73,0.102,74,0.08,108,0.006,109,0.006,118,1.628,125,1.399,126,3.278,127,3.62,145,1.456,181,4.036,326,1.444,336,2.964,383,1.966,385,2.082,389,1.744,394,2.248,395,2.946,398,3.503,399,3.62,402,4.395,404,5.76,423,2.946,427,3.286,428,1.319,617,1.374,889,2.964,893,3.885,971,6.761,994,4.992,997,4.865,1038,2.964,1508,5.17,1517,4.205,1518,5.551,1644,4.625,1645,6.836,1646,5.216,1647,5.216,1648,5.216,1649,6.061]],["title/controllers/NameController.html",[429,1.175,1650,3.444]],["body/controllers/NameController.html",[3,0.075,4,0.061,5,0.061,9,0.671,15,0.265,16,1.141,26,0.445,28,1.829,29,1.645,30,1.339,31,0.008,32,1.03,33,0.382,34,0.951,35,1.603,44,1.496,46,1.817,47,1.869,53,1.792,55,1.562,59,0.158,64,0.423,73,0.075,74,0.059,76,2.457,77,0.856,79,1.84,85,1.791,89,1.141,108,0.005,109,0.005,125,1.3,134,2.096,145,1.053,191,1.069,204,1.239,217,1.524,218,1.603,219,1.603,223,2.825,389,1.791,429,0.985,431,1.005,433,1.603,456,1.828,464,3.133,475,2.58,479,1.544,484,3.028,485,3.028,496,2.648,499,1.737,506,1.69,507,1.84,511,3.118,512,1.84,514,2.58,637,1.896,670,1.162,713,3.884,732,5.883,803,2.092,830,3.677,831,3.821,901,2.738,902,3.632,903,3.632,904,2.454,909,3.544,912,2.348,914,3.544,915,3.118,916,3.255,924,4.556,1038,2.169,1059,3.544,1062,2.887,1065,4.169,1073,3.021,1189,2.887,1190,2.887,1201,4.832,1564,3.924,1650,4.893,1651,3.385,1652,5.513,1653,5.513,1654,3.818,1655,2.887,1656,3.818,1657,3.818,1658,3.385,1659,3.1,1660,5.576,1661,4.476,1662,3.818,1663,4.169,1664,4.888,1665,3.818,1666,3.818,1667,3.385,1668,2.887,1669,3.385,1670,3.818,1671,3.818,1672,3.818,1673,3.818,1674,3.818]],["title/modules/NameModule.html",[234,1.001,261,3.073]],["body/modules/NameModule.html",[3,0.116,4,0.095,5,0.095,31,0.008,32,0.639,59,0.175,64,0.654,73,0.116,74,0.091,108,0.006,109,0.006,234,1.777,236,2.093,237,2.141,238,2.244,239,2.244,240,2.141,241,3.074,242,3.074,261,6.22,264,4.168,271,2.814,272,2.244,273,1.957,279,2.814,294,2.415,295,1.492,431,1.948,1038,3.353,1137,3.234,1189,4.462,1197,5.232,1201,6.033,1650,6.112,1675,5.232,1676,5.901,1677,5.232,1678,5.232,1679,5.901,1680,5.901]],["title/injectables/NameService.html",[61,0.636,1201,2.928]],["body/injectables/NameService.html",[3,0.058,4,0.047,5,0.047,9,0.558,11,2.406,15,0.204,16,0.94,21,1.326,26,0.503,28,1.608,29,1.957,30,1.29,31,0.008,32,1.034,33,0.432,34,1.075,44,1.616,46,1.899,53,1.799,55,2.55,59,0.132,61,0.634,62,3.679,64,0.327,73,0.058,74,0.045,76,2.57,77,0.661,79,3.243,81,1.069,84,2.522,85,1.834,89,1.148,90,2.269,93,2.269,94,3.123,95,1.988,108,0.004,109,0.004,125,1.497,134,2.108,200,0.878,205,2.149,209,3.193,224,0.897,228,2.441,273,1.507,295,0.745,375,2.92,389,1.959,428,0.745,456,1.905,496,1.859,511,3.002,663,2.887,668,1.206,670,0.897,685,2.49,732,5.707,785,4.204,803,2.49,821,2.228,822,3.541,824,4.193,830,3.15,831,3.273,944,3.233,948,2.097,949,2.097,955,3.564,961,3.435,1020,4.434,1038,1.674,1050,2.682,1087,2.392,1190,2.228,1201,4.006,1478,3.435,1517,3.41,1580,2.097,1594,3.065,1660,5,1681,2.612,1682,3.688,1683,4.542,1684,2.946,1685,2.946,1686,5.544,1687,4.542,1688,2.946,1689,4.542,1690,2.946,1691,4.502,1692,4.541,1693,4.028,1694,7.411,1695,4.542,1696,2.946,1697,2.946,1698,2.946,1699,4.542,1700,4.542,1701,2.228,1702,4.542,1703,2.612,1704,4.028,1705,6.231,1706,2.946,1707,2.946,1708,4.542,1709,2.946,1710,2.946,1711,2.946,1712,2.612]],["title/entities/Note.html",[383,1.106,652,2.496]],["body/entities/Note.html",[3,0.117,4,0.096,5,0.096,15,0.414,26,0.656,31,0.008,33,0.59,47,2.527,48,2.767,53,1.885,59,0.146,73,0.117,74,0.092,108,0.006,109,0.006,118,1.774,125,1.367,126,2.834,145,1.552,339,3.392,383,1.81,385,2.382,389,1.859,394,2.572,395,3.211,423,3.211,427,3.501,428,1.509,617,1.572,652,4.8,889,3.392,893,4.234,972,7.204,999,5.075,1040,3.392,1713,5.292,1714,7.451,1715,5.968,1716,5.968,1717,7.451,1718,5.968]],["title/controllers/NoteController.html",[429,1.175,1719,3.444]],["body/controllers/NoteController.html",[3,0.089,4,0.073,5,0.073,9,0.678,15,0.315,16,1.29,26,0.503,28,1.608,30,1.29,31,0.008,32,0.77,33,0.432,34,1.075,44,1.316,46,1.682,55,1.859,59,0.166,64,0.504,73,0.089,74,0.07,76,1.575,77,1.019,85,1.425,89,1.29,108,0.005,109,0.005,125,1.304,145,1.19,151,2.487,191,1.272,204,1.474,205,1.873,217,1.813,218,1.907,219,1.907,389,1.976,429,1.172,431,1.196,433,1.907,456,1.66,464,3.541,475,2.916,479,1.745,484,3.328,485,3.328,496,1.859,499,2.067,506,2.011,507,2.189,512,2.189,514,2.916,637,3.095,652,5.011,670,1.383,713,4.195,740,5.895,830,3.541,831,3.679,901,3.095,902,3.922,903,3.922,904,2.921,909,4.92,912,2.795,914,4.006,915,3.427,916,3.679,924,4.92,926,3.065,1040,2.582,1059,4.006,1062,3.436,1065,4.712,1073,3.415,1237,4.375,1239,3.436,1253,3.689,1564,4.435,1655,3.436,1659,3.689,1719,4.712,1720,4.028,1721,6.231,1722,6.231,1723,4.543,1724,4.543,1725,4.543,1726,4.543,1727,4.543,1728,4.543,1729,4.543,1730,4.543,1731,4.543,1732,4.543,1733,4.543]],["title/modules/NoteModule.html",[234,1.001,262,3.073]],["body/modules/NoteModule.html",[3,0.116,4,0.095,5,0.095,31,0.008,59,0.175,64,0.654,73,0.116,74,0.091,108,0.006,109,0.006,234,1.777,236,2.093,237,2.141,238,2.244,239,2.244,240,2.141,241,3.074,242,3.074,262,6.22,264,4.168,271,2.814,272,2.244,273,1.957,279,2.814,294,2.415,295,1.492,431,1.948,652,3.234,1040,3.353,1137,3.234,1237,5.772,1252,5.232,1253,4.791,1719,6.112,1734,5.232,1735,5.232,1736,5.232,1737,5.901,1738,5.901,1739,5.901]],["title/injectables/NoteService.html",[61,0.636,1237,2.802]],["body/injectables/NoteService.html",[3,0.074,4,0.06,5,0.06,9,0.552,11,2.886,15,0.26,16,1.128,21,1.59,26,0.603,28,1.406,30,1.546,31,0.008,32,0.843,33,0.518,34,1.288,44,1.485,46,1.809,59,0.146,61,0.761,62,4.409,64,0.417,73,0.074,74,0.058,77,0.842,84,2.849,85,1.838,89,1.327,90,3.056,93,3.056,94,3.362,95,2.535,108,0.004,109,0.004,125,1.538,200,1.12,205,2.297,224,1.143,228,2.421,273,1.807,295,0.95,375,3.504,389,1.708,428,0.95,456,2.036,652,5.003,663,2.74,668,1.538,670,1.143,685,3.855,740,5.97,803,2.059,821,4.121,822,3.997,824,4.121,830,2.135,831,2.218,944,3.879,948,2.674,949,2.674,955,3.504,1020,5.006,1040,2.135,1237,3.352,1239,2.841,1311,4.832,1682,4.425,1692,2.535,1740,3.331,1741,3.757,1742,3.757,1743,5.449,1744,5.449,1745,3.757,1746,5.449,1747,3.757,1748,8.034,1749,5.449,1750,3.757,1751,3.757,1752,6.412,1753,3.757,1754,3.757,1755,3.757,1756,5.449,1757,6.412,1758,5.449,1759,3.757,1760,3.757,1761,3.757]],["title/interfaces/Paginated.html",[110,3.073,1762,3.444]],["body/interfaces/Paginated.html",[3,0.103,4,0.084,5,0.084,9,0.412,15,0.365,31,0.008,33,0.619,53,2.304,73,0.103,100,5.165,108,0.006,109,0.006,110,4.636,112,3.976,118,1.636,125,1.683,134,3.347,140,4.994,167,4.922,171,5.165,221,5.804,696,4.922,864,4.662,967,4.891,1434,6.592,1668,6.534,1762,5.789,1763,4.662,1764,7.661,1765,8.118,1766,6.093,1767,6.093,1768,5.258,1769,7.147,1770,6.093,1771,6.872,1772,6.093,1773,6.093,1774,5.258]],["title/classes/PaginationDto.html",[74,0.07,1775,3.444]],["body/classes/PaginationDto.html",[3,0.101,4,0.082,5,0.082,9,0.403,15,0.356,26,0.546,31,0.008,33,0.607,34,1.481,47,2.566,59,0.133,73,0.101,74,0.116,89,1.4,108,0.006,109,0.006,118,1.611,125,1.677,131,2,134,3.058,135,3.583,136,3.166,145,1.292,195,2.049,349,5.493,396,3.994,478,4.169,614,5.722,637,3.758,1027,5.385,1378,6.144,1460,4.815,1466,3.882,1596,5.116,1767,5.998,1769,6.787,1775,6.082,1776,4.552,1777,6.765,1778,6.765,1779,6.787,1780,6.765,1781,5.134,1782,5.134,1783,7.566,1784,5.998,1785,7.566,1786,7.566,1787,5.134,1788,4.552,1789,5.134,1790,5.134]],["title/modules/PaginationModule.html",[234,1.001,263,3.073]],["body/modules/PaginationModule.html",[3,0.122,4,0.1,5,0.1,9,0.489,31,0.008,59,0.15,64,0.692,73,0.122,74,0.096,108,0.006,109,0.006,234,1.95,236,2.213,237,2.264,238,2.373,239,2.373,240,2.264,241,3.152,242,3.152,263,6.279,271,2.913,272,2.373,273,2.07,279,2.913,1791,5.533,1792,5.533,1793,5.533,1794,6.772,1795,6.24,1796,6.24]],["title/injectables/PaginationProvider.html",[61,0.636,1794,3.241]],["body/injectables/PaginationProvider.html",[3,0.081,4,0.066,5,0.066,9,0.53,11,4.659,15,0.287,16,1.208,21,2.144,26,0.471,30,1.4,31,0.008,32,0.631,33,0.469,34,1.006,44,1.232,46,1.703,59,0.158,60,2.052,61,0.814,64,0.458,70,2.542,73,0.081,74,0.063,76,2.686,77,0.927,81,3.062,85,0.945,89,0.855,100,2.788,108,0.007,109,0.005,134,1.571,136,3.438,140,2.542,167,2.657,171,2.788,200,1.231,205,1.781,209,2.99,224,1.258,228,1.813,309,3.125,428,1.045,447,3.197,456,1.578,489,4.412,553,3.197,637,3.358,663,3.487,696,2.657,1434,3.356,1460,4.812,1660,5.575,1668,3.125,1762,5.555,1764,3.664,1766,3.664,1770,5.995,1772,3.664,1773,6.513,1775,5.859,1794,5.723,1797,3.664,1798,5.834,1799,7.747,1800,4.132,1801,4.132,1802,4.132,1803,4.132,1804,5.834,1805,7.346,1806,6.762,1807,6.762,1808,4.132,1809,4.132,1810,4.132,1811,4.132,1812,4.132,1813,4.132,1814,8.439,1815,7.747,1816,3.356,1817,5.834,1818,4.132,1819,4.132,1820,4.132,1821,4.132,1822,4.132,1823,4.132,1824,4.132,1825,5.834,1826,4.132,1827,4.132,1828,4.132,1829,4.132,1830,4.132]],["title/classes/RefreshTokenDto.html",[74,0.07,460,3.073]],["body/classes/RefreshTokenDto.html",[3,0.118,4,0.097,5,0.097,9,0.589,13,3.975,14,4.909,15,0.419,26,0.488,31,0.008,33,0.419,37,4.617,53,2.161,59,0.147,73,0.118,74,0.115,108,0.006,109,0.006,118,1.787,131,2.352,134,2.854,135,3.975,136,3.512,145,1.153,151,2.996,190,3.322,191,1.69,192,3.234,195,2.41,460,5.063,465,6.081,583,3.846,712,5.353,1450,7.241,1517,4.617,1831,6.655,1832,5.353,1833,6.655,1834,7.505,1835,6.037]],["title/injectables/RefreshTokensProvider.html",[61,0.636,522,3.073]],["body/injectables/RefreshTokensProvider.html",[3,0.083,4,0.068,5,0.068,9,0.536,13,3.131,14,3.745,15,0.292,16,1.224,21,2.162,22,2.708,23,5.452,24,4.998,25,4.8,26,0.478,30,1.224,31,0.008,32,0.64,33,0.41,34,1.02,35,3.396,37,5.217,39,3.491,44,1.249,46,1.502,59,0.166,60,2.092,61,0.825,63,3.883,64,0.467,65,2.092,67,2.394,68,2.487,73,0.083,74,0.065,76,2.705,77,1.661,78,2.708,79,2.849,80,3.421,81,2.146,84,1.494,85,0.964,89,0.872,90,1.724,93,1.724,94,1.641,108,0.005,109,0.005,111,1.602,117,1.386,121,3.186,136,2.767,200,1.255,205,1.951,206,3.574,216,2.092,224,2.255,228,2.124,447,3.241,456,1.595,457,4.801,459,4.801,460,5.606,462,4.801,465,5.554,467,6.118,488,3.989,502,3.421,503,3.421,521,5.676,522,5.458,527,2.998,535,3.186,538,3.421,553,3.241,672,1.769,811,3.421,1420,3.421,1426,4.801,1441,3.735,1443,3.735,1445,3.735,1447,3.735,1460,4.209,1833,5.243,1836,6.058,1837,4.213,1838,4.213,1839,3.421,1840,4.213,1841,4.213,1842,4.213,1843,4.213,1844,4.213,1845,4.213,1846,3.735,1847,4.213]],["title/entities/Role.html",[204,1.478,383,1.106]],["body/entities/Role.html",[3,0.1,4,0.082,5,0.082,9,0.401,15,0.355,26,0.61,31,0.008,32,0.903,33,0.579,47,2.288,48,2.506,53,1.706,54,1.813,59,0.148,73,0.1,74,0.079,108,0.006,109,0.006,117,1.74,118,1.607,123,5.095,125,1.238,126,3.054,129,3.867,145,1.442,198,3.869,204,2.984,230,4.802,383,1.951,385,2.041,389,1.91,394,2.203,395,2.908,396,3.351,405,3.019,406,3.984,409,3.867,423,2.908,425,5.103,427,2.908,428,1.293,508,4.152,673,2.621,829,5.135,966,5.983,967,4.802,1129,4.552,1464,5.479,1465,4.552,1477,5.983,1478,6.073,1692,4.552,1848,4.534,1849,5.113,1850,5.113,1851,5.113,1852,6.521,1853,5.113]],["title/controllers/RoleController.html",[429,1.175,1854,3.444]],["body/controllers/RoleController.html",[3,0.106,4,0.087,5,0.087,9,0.609,15,0.375,16,1.449,26,0.437,28,1.807,30,1.12,31,0.008,32,0.586,33,0.375,34,0.933,44,1.143,46,1.539,54,1.919,59,0.161,64,0.6,73,0.106,74,0.083,77,1.213,85,1.878,89,1.12,108,0.006,109,0.006,120,4.501,137,4.501,145,1.033,191,1.515,204,2.826,205,2.044,429,2.003,431,1.425,433,2.272,456,1.811,475,3.276,479,1.515,484,3.276,485,3.276,499,2.461,501,4.394,506,2.395,511,4.196,512,2.607,514,2.532,670,1.647,684,3.075,746,6.197,792,4.99,915,3.374,1050,4.134,1122,3.479,1854,5.295,1855,4.797,1856,7.001,1857,4.797,1858,5.411,1859,6.208,1860,7.001,1861,5.411,1862,5.411,1863,4.797,1864,4.797,1865,5.411,1866,5.411,1867,5.411,1868,5.411,1869,5.411]],["title/guards/RoleGuard.html",[0,2.588,305,3.444]],["body/guards/RoleGuard.html",[0,4.882,2,5.236,3,0.062,4,0.05,5,0.05,9,0.452,10,5.523,11,4.013,12,4.359,14,3.159,15,0.218,16,0.987,17,5.267,21,2.021,26,0.385,28,1.23,29,2.484,30,0.987,31,0.008,32,0.516,33,0.541,34,0.822,40,3.216,41,4.259,43,3.802,44,1.462,46,1.267,47,2.183,53,1.206,55,1.951,59,0.153,61,0.665,63,4.306,64,0.348,72,2.117,73,0.062,74,0.048,75,3.393,76,2.528,77,1.793,79,3.762,81,2.336,84,1.113,85,0.718,89,0.649,94,2.245,108,0.004,109,0.004,117,1.832,118,0.747,199,5.592,202,3.276,203,4.103,204,2.979,205,1.518,209,2.443,210,3.393,211,3.393,212,2.815,213,3.393,214,3.216,215,2.932,217,1.252,218,1.317,219,1.317,221,4.872,222,4.103,223,3.883,224,2.434,228,0.975,231,2.548,233,3.605,269,5.592,270,5.592,305,5.514,309,2.373,313,5.899,396,2.367,713,3.159,858,2.782,878,4.226,902,2.954,1509,3.605,1870,2.782,1871,4.767,1872,5.765,1873,5.765,1874,3.137,1875,8.503,1876,3.137,1877,5.111,1878,3.137,1879,3.137,1880,3.137,1881,3.137,1882,3.137,1883,2.548,1884,4.767,1885,3.871,1886,3.137,1887,3.137,1888,3.137,1889,3.137,1890,3.137,1891,3.137,1892,2.782,1893,3.137,1894,3.137,1895,3.137,1896,3.137,1897,3.137,1898,3.137,1899,3.137,1900,3.137,1901,3.137,1902,3.137,1903,3.137]],["title/modules/RoleModule.html",[234,1.001,264,2.131]],["body/modules/RoleModule.html",[3,0.115,4,0.095,5,0.095,9,0.462,31,0.008,59,0.171,64,0.653,73,0.115,74,0.09,108,0.006,109,0.006,204,2.62,234,1.775,236,2.088,237,2.136,238,2.239,239,2.239,240,2.136,241,3.07,242,3.07,264,4.313,271,2.81,272,2.239,273,1.953,279,2.239,294,2.409,295,1.489,431,1.946,447,4.049,448,5.258,450,3.786,525,6.551,792,6.031,1854,6.106,1863,5.22,1904,5.22,1905,5.22,1906,5.22,1907,5.887,1908,5.887,1909,5.22,1910,5.887]],["title/injectables/RoleService.html",[61,0.636,792,2.928]],["body/injectables/RoleService.html",[3,0.091,4,0.074,5,0.074,9,0.363,15,0.321,16,1.307,21,1.843,26,0.623,28,2.15,29,2.721,30,1.597,31,0.008,32,0.874,33,0.535,34,1.331,35,2.651,44,1.517,46,1.831,53,1.817,59,0.158,61,0.881,64,0.514,73,0.091,74,0.11,77,1.039,81,2.291,85,1.765,89,0.959,108,0.006,109,0.005,120,4.619,125,1.318,200,1.38,204,2.816,205,2.318,224,1.41,228,2.398,234,1.388,295,1.171,428,1.171,456,2.054,663,3.005,668,1.896,670,1.41,746,5.93,792,4.96,955,4.059,997,4.494,998,5.599,1692,5.205,1857,5.599,1864,4.107,1909,4.107,1911,4.107,1912,6.314,1913,4.632,1914,4.632,1915,6.314,1916,4.632,1917,6.314,1918,4.632,1919,4.632,1920,6.314,1921,4.632,1922,4.632,1923,4.632,1924,4.632,1925,4.632,1926,4.632,1927,4.632]],["title/injectables/SignInProvider.html",[61,0.636,523,3.073]],["body/injectables/SignInProvider.html",[3,0.086,4,0.071,5,0.071,9,0.593,13,3.234,14,3.347,15,0.306,16,1.264,21,2.206,26,0.493,30,1.264,31,0.008,32,0.661,33,0.423,34,1.053,35,3.446,44,1.29,45,2.977,46,1.539,48,1.639,59,0.156,60,2.191,61,0.852,62,4.136,63,3.98,64,0.489,73,0.086,74,0.068,76,2.621,77,1.571,79,3.642,80,3.583,81,1.601,84,2.166,85,1.397,89,0.913,90,1.806,93,1.806,94,1.719,108,0.005,109,0.005,117,1.708,136,2.858,144,4.136,200,1.315,205,1.844,206,3.564,216,2.191,224,2.131,228,2.177,447,3.347,456,1.635,458,4.959,488,4.12,490,4.959,491,5.678,494,4.959,504,3.583,520,5.478,521,5.726,523,5.538,527,3.14,535,3.337,553,3.347,562,3.583,570,3.912,660,2.714,786,4.959,811,3.583,843,3.14,963,3.14,1318,3.583,1424,4.959,1460,4.347,1839,3.583,1846,3.912,1928,6.21,1929,3.912,1930,4.412,1931,4.412,1932,4.412,1933,4.412,1934,7.004,1935,4.412,1936,4.412,1937,4.412,1938,4.412,1939,4.412]],["title/classes/SigninDto.html",[74,0.07,491,3.073]],["body/classes/SigninDto.html",[3,0.109,4,0.09,5,0.09,9,0.618,12,5.403,15,0.387,26,0.577,31,0.008,33,0.495,53,2.221,59,0.14,73,0.109,74,0.11,108,0.006,109,0.006,117,1.867,118,1.701,119,4.835,131,2.175,134,2.717,135,3.784,136,3.344,144,5.271,145,1.365,151,3.315,165,5.802,188,5.802,190,3.487,191,1.564,192,3.395,195,2.229,491,4.821,579,3.768,583,3.662,774,6.335,1424,5.802,1517,5.109,1940,4.952,1941,5.585,1942,5.585,1943,5.585]],["title/entities/Species.html",[383,1.106,393,2.588]],["body/entities/Species.html",[3,0.088,4,0.072,5,0.072,9,0.354,15,0.313,26,0.646,31,0.008,32,0.826,33,0.629,48,2.834,53,2.141,59,0.139,73,0.088,74,0.109,108,0.005,109,0.005,118,1.477,125,1.3,127,3.284,145,1.528,181,4.506,326,1.788,383,1.854,384,5.314,385,1.801,387,4.69,389,1.621,393,5.191,394,2.672,395,3.288,398,3.911,399,4.041,400,6.766,402,4.906,403,6.196,405,2.664,406,3.662,423,3.054,427,2.672,428,1.141,599,5.036,889,3.524,893,4.027,1064,6.496,1095,2.564,1474,7.093,1493,4,1944,4,1945,7.086,1946,6.283,1947,6.201,1948,4.512,1949,7.631,1950,4.512,1951,5.499,1952,6.201,1953,4.512,1954,4.512,1955,7.631,1956,4.512]],["title/controllers/SpeciesController.html",[429,1.175,1957,3.444]],["body/controllers/SpeciesController.html",[3,0.131,4,0.107,5,0.107,9,0.525,31,0.008,36,4.23,59,0.157,64,0.742,73,0.131,74,0.131,108,0.007,109,0.007,191,1.873,393,5.139,429,2.204,431,1.761,433,2.808,450,4.094,506,2.96,1050,4.717,1957,6.041,1958,5.93,1959,6.688,1960,6.688]],["title/modules/SpeciesModule.html",[234,1.001,265,3.073]],["body/modules/SpeciesModule.html",[3,0.115,4,0.094,5,0.094,9,0.46,31,0.008,36,3.902,59,0.171,64,0.65,73,0.115,74,0.124,108,0.006,109,0.006,234,1.915,236,2.079,237,2.127,238,2.229,239,2.229,240,2.127,241,3.064,242,3.064,265,6.088,271,2.802,272,2.229,273,1.944,279,2.229,294,2.399,295,1.482,393,4.95,431,1.94,450,3.776,661,6.325,1050,4.35,1957,6.094,1961,5.197,1962,5.197,1963,5.197,1964,5.861,1965,5.861,1966,5.861,1967,5.197,1968,5.861]],["title/injectables/SpeciesService.html",[61,0.636,661,3.073]],["body/injectables/SpeciesService.html",[3,0.094,4,0.077,5,0.077,9,0.575,15,0.334,16,1.343,21,1.893,26,0.524,29,3.16,30,1.343,31,0.008,32,0.971,33,0.45,34,1.119,35,3.078,44,1.548,46,1.612,53,1.984,55,2.655,59,0.154,61,0.905,64,0.535,73,0.094,74,0.113,76,2.249,77,1.081,79,2.323,81,1.749,84,1.709,85,1.103,89,0.998,108,0.005,109,0.005,200,1.436,205,1.931,224,1.467,228,1.498,282,5.268,295,1.219,381,4.906,383,1.576,393,5.305,428,1.219,450,3.325,456,1.711,511,3.126,546,5.954,599,7.112,661,5.522,663,3.356,668,1.973,955,4.171,961,4.906,1580,5.219,1946,4.274,1967,4.274,1969,4.274,1970,6.487,1971,4.82,1972,4.82,1973,7.332,1974,6.487,1975,4.82,1976,7.843,1977,4.82,1978,4.82,1979,4.82]],["title/entities/Symbol.html",[383,1.106,702,2.334]],["body/entities/Symbol.html",[3,0.102,4,0.084,5,0.084,9,0.409,15,0.362,26,0.616,31,0.008,32,0.74,33,0.609,47,2.318,48,2.539,53,1.928,59,0.134,73,0.102,74,0.08,108,0.006,109,0.006,118,1.628,125,1.399,126,3.278,127,3.62,145,1.456,181,4.036,326,1.444,334,2.964,383,1.966,385,2.082,389,1.744,394,2.248,395,2.946,398,3.503,399,3.62,402,4.395,423,2.946,427,3.286,428,1.319,617,1.374,702,4.794,889,2.964,893,3.885,975,6.761,1007,4.992,1010,5.17,1037,2.964,1508,5.17,1515,6.571,1517,4.205,1518,5.551,1980,4.625,1981,6.836,1982,5.216,1983,5.216,1984,5.216]],["title/controllers/SymbolController.html",[429,1.175,1985,3.444]],["body/controllers/SymbolController.html",[3,0.074,4,0.061,5,0.061,9,0.67,15,0.263,16,1.135,26,0.443,28,1.822,29,1.633,30,1.334,31,0.008,32,0.697,33,0.38,34,0.946,35,1.591,44,1.582,46,1.813,47,1.859,53,1.786,55,1.551,59,0.158,64,0.42,73,0.074,74,0.058,76,2.449,77,0.85,79,1.826,85,1.787,89,1.135,108,0.004,109,0.004,125,1.295,134,2.085,145,1.047,191,1.061,204,1.23,217,1.513,218,1.591,219,1.591,223,2.81,389,1.787,429,0.978,431,0.998,433,1.591,456,1.823,464,3.116,475,2.566,479,1.535,484,3.016,485,3.016,496,2.637,499,2.495,506,1.677,507,1.826,511,3.105,512,1.826,514,2.566,637,1.882,670,1.153,702,4.858,713,3.871,751,5.871,803,2.077,830,3.662,831,3.805,901,2.724,902,3.619,903,3.619,904,2.437,909,3.526,912,2.331,914,3.526,915,3.105,916,3.238,924,4.54,1037,2.154,1059,3.526,1062,2.866,1065,4.147,1073,3.006,1345,2.866,1346,2.866,1357,4.818,1564,3.903,1655,2.866,1658,3.36,1659,3.077,1660,5.565,1661,4.453,1663,4.147,1664,4.862,1667,3.36,1668,2.866,1669,3.36,1985,4.873,1986,3.36,1987,6.444,1988,5.484,1989,3.79,1990,3.79,1991,3.79,1992,3.79,1993,3.79,1994,3.79,1995,3.077,1996,3.79,1997,3.79,1998,3.79,1999,3.79]],["title/modules/SymbolModule.html",[234,1.001,266,3.073]],["body/modules/SymbolModule.html",[3,0.116,4,0.095,5,0.095,31,0.008,59,0.175,64,0.654,73,0.116,74,0.091,108,0.006,109,0.006,234,1.777,236,2.093,237,2.141,238,2.244,239,2.244,240,2.141,241,3.074,242,3.074,264,4.168,266,6.22,271,2.814,272,2.244,273,1.957,279,2.814,294,2.415,295,1.492,431,1.948,702,3.024,1037,3.353,1137,3.234,1345,4.462,1353,5.232,1357,6.033,1985,6.112,2000,5.232,2001,5.901,2002,5.232,2003,5.232,2004,5.901,2005,5.901]],["title/injectables/SymbolService.html",[61,0.636,1357,2.928]],["body/injectables/SymbolService.html",[3,0.057,4,0.047,5,0.047,9,0.578,11,2.377,15,0.201,16,0.929,21,1.31,26,0.499,28,1.595,29,1.934,30,1.279,31,0.008,32,0.669,33,0.428,34,1.066,44,1.608,46,1.893,53,1.787,55,2.529,59,0.131,61,0.626,62,3.648,64,0.322,73,0.057,74,0.084,76,2.555,77,0.65,79,3.22,81,1.052,84,2.506,85,1.827,89,1.136,90,2.247,93,2.247,94,3.11,95,1.957,108,0.004,109,0.004,125,1.491,134,2.087,200,0.864,205,2.141,209,3.167,224,0.883,228,2.429,273,1.488,295,0.733,375,2.885,389,1.953,428,0.733,456,1.897,496,1.837,511,2.977,553,2.46,663,2.87,668,1.187,670,0.883,685,2.46,702,4.878,751,5.683,785,4.169,803,2.46,821,2.193,822,3.511,824,4.151,830,3.119,831,3.241,944,3.194,948,2.064,949,2.064,955,3.529,961,3.394,1010,3.394,1020,4.398,1037,1.648,1050,2.65,1087,2.355,1346,2.193,1357,4.543,1478,3.394,1517,3.377,1580,2.064,1594,3.028,1660,4.972,1682,3.644,1691,4.457,1692,4.509,1693,3.979,1701,2.193,1703,2.571,1704,3.979,1712,2.571,2006,2.571,2007,4.488,2008,4.488,2009,2.9,2010,2.9,2011,5.489,2012,4.488,2013,2.9,2014,4.488,2015,2.9,2016,7.369,2017,4.488,2018,2.9,2019,2.9,2020,2.9,2021,4.488,2022,4.488,2023,4.488,2024,6.179,2025,2.9,2026,2.9,2027,4.488,2028,2.9,2029,2.9,2030,2.9]],["title/entities/User.html",[117,0.924,383,1.106]],["body/entities/User.html",[3,0.044,4,0.036,5,0.036,9,0.178,15,0.157,26,0.668,31,0.008,32,0.724,33,0.603,34,0.928,45,3.631,47,2.153,48,2.679,53,1.876,59,0.137,73,0.044,74,0.083,108,0.003,109,0.003,117,1.848,118,0.879,119,3.545,120,4.303,124,2.999,125,0.677,126,2.046,140,4.117,141,3.792,142,3.792,143,3.792,144,3.497,145,1.581,160,2.793,167,2.374,171,2.491,181,4.379,182,4.571,204,2.264,223,3.801,326,1.71,334,1.289,336,1.289,339,1.289,343,1.34,375,2.374,383,1.307,385,0.906,389,1.355,394,2.736,395,3.336,396,1.834,398,3.801,399,4.494,404,3.83,405,1.34,406,2.181,409,1.716,411,3.631,412,2.012,423,2.884,424,3.274,425,2.793,427,1.591,428,0.574,479,1.034,496,2.598,617,1.417,808,2.012,829,2.272,889,4.1,893,4.214,973,4.14,990,5.63,994,4.313,997,2.628,999,4.313,1002,3.749,1007,4.313,1010,4.802,1037,1.289,1038,1.289,1040,1.289,1041,1.531,1045,6.316,1064,4.37,1078,6.286,1095,1.289,1129,5.526,1179,4.772,1336,4.772,1422,2.999,1464,2.999,1465,2.491,1466,1.716,1852,6.651,2031,2.012,2032,3.274,2033,4.67,2034,4.67,2035,4.67,2036,4.67,2037,4.67,2038,4.67,2039,4.67,2040,4.67,2041,3.693,2042,2.269,2043,2.269,2044,7.742,2045,2.269,2046,7.416,2047,7.416,2048,2.269,2049,4.772,2050,3.274,2051,2.269,2052,3.693,2053,2.269,2054,3.693,2055,2.269,2056,3.693,2057,2.269,2058,3.693,2059,2.269,2060,3.693,2061,2.269,2062,3.693,2063,2.269,2064,3.693,2065,2.269,2066,3.693,2067,2.269,2068,3.693,2069,2.269,2070,2.269,2071,2.269,2072,5.381,2073,2.269,2074,2.269,2075,3.693,2076,2.269,2077,2.269,2078,5.381,2079,5.381,2080,2.269]],["title/controllers/UserController.html",[429,1.175,2081,3.444]],["body/controllers/UserController.html",[3,0.062,4,0.051,5,0.051,9,0.652,15,0.22,16,0.994,26,0.523,28,0.818,29,1.365,30,1.339,31,0.008,32,0.753,33,0.507,34,1.116,38,2.543,44,1.778,46,1.608,48,1.783,59,0.16,64,0.351,73,0.062,74,0.049,76,1.098,77,0.71,85,1.791,89,1.339,108,0.004,109,0.004,111,2.891,113,1.33,116,4.605,117,1.902,125,1.064,130,4.365,139,5.035,140,3.98,145,1.236,191,0.887,196,3.631,202,4.32,204,2.467,206,2.846,212,3.821,217,1.265,218,1.33,219,1.33,223,2.461,226,3.24,229,2.255,389,1.791,429,0.818,431,0.834,433,1.33,447,2.632,448,3.418,450,3.316,451,4.258,452,4.258,453,3.631,455,4.258,456,1.988,464,3.677,475,2.247,479,1.812,481,2.809,483,4.605,484,3.254,485,3.254,496,2.648,499,2.184,506,1.402,507,1.527,511,3.864,512,1.527,514,3.028,561,3.24,670,0.964,672,1.33,713,2.632,788,3.899,799,2.572,804,2.572,805,2.255,829,4.817,901,3.214,915,3.118,916,2.835,923,2.396,927,2.137,1032,4.258,1055,2.809,1066,2.835,1067,1.871,1068,2.037,1073,1.736,1122,3.087,1594,3.24,1606,4.258,1660,2.137,1663,3.631,1692,4.691,1784,4.258,1885,2.572,2081,5.259,2082,2.809,2083,5.799,2084,4.258,2085,4.802,2086,3.168,2087,3.168,2088,5.737,2089,3.168,2090,3.168,2091,3.168,2092,5.737,2093,4.802,2094,4.258,2095,4.802,2096,3.168,2097,3.168,2098,2.809,2099,3.168,2100,3.168,2101,3.168,2102,3.168,2103,3.168,2104,4.802,2105,3.168,2106,3.168,2107,3.168,2108,3.168,2109,2.809,2110,3.168,2111,3.168,2112,3.168,2113,3.168,2114,6.47,2115,3.168,2116,3.168,2117,3.168,2118,3.168,2119,3.168,2120,3.168,2121,3.168,2122,3.168]],["title/modules/UserModule.html",[234,1.001,267,2.334]],["body/modules/UserModule.html",[3,0.104,4,0.085,5,0.085,31,0.008,59,0.18,64,0.588,65,2.633,73,0.104,74,0.081,108,0.006,109,0.006,117,1.402,182,3.13,206,3.784,234,1.689,236,1.88,237,1.923,238,2.016,239,2.016,240,1.923,241,2.923,242,2.923,247,4.661,264,4.052,267,4.763,271,2.627,272,2.016,273,1.758,279,2.627,286,4.304,294,2.169,295,1.341,431,1.819,527,4.917,782,5.842,805,3.773,952,5.842,1137,2.905,1160,4.009,2081,5.812,2109,4.7,2123,4.7,2124,5.301,2125,4.7,2126,4.7,2127,5.301,2128,5.301,2129,4.7,2130,4.7,2131,4.7,2132,5.301,2133,4.7,2134,4.7,2135,5.301,2136,5.301]],["title/injectables/UserRoleGuard.html",[61,0.636,270,3.073]],["body/injectables/UserRoleGuard.html",[0,3.139,1,4.365,3,0.075,4,0.062,5,0.062,7,2.462,9,0.508,10,3.552,11,4.279,13,2.028,14,4.124,15,0.265,16,1.144,17,3.727,18,3.932,21,2.196,22,2.462,23,5.318,24,5.076,25,4.628,26,0.446,28,1.426,29,2.793,30,1.144,31,0.008,32,0.598,33,0.383,34,0.953,35,3.159,36,3.984,37,4.365,38,3.984,39,3.262,40,3.727,41,4.628,43,4.19,44,1.589,46,1.425,47,2.198,55,2.904,58,3.727,59,0.165,60,1.902,61,0.771,63,4.455,64,0.425,65,1.902,67,2.176,68,2.261,69,2.725,70,2.355,71,2.462,72,2.583,73,0.075,74,0.059,76,2.46,77,1.453,78,2.462,79,3.986,81,2.844,82,2.725,83,2.725,84,1.959,85,1.264,86,2.725,87,2.725,88,2.583,89,0.793,108,0.005,109,0.005,117,1.819,125,0.702,138,4.613,200,1.141,204,2.812,205,1.707,206,3.546,209,2.831,210,3.932,211,3.932,212,3.262,213,3.932,214,3.727,215,3.398,216,1.902,217,2.205,218,1.607,219,1.607,220,2.725,221,2.462,222,4.613,223,3.322,224,1.165,225,2.896,226,2.583,227,2.896,228,1.19,229,2.725,230,2.725,270,5.289,478,3.109,2137,3.395,2138,3.829,2139,3.829,2140,3.829,2141,3.829]],["title/injectables/UserService.html",[61,0.636,206,1.864]],["body/injectables/UserService.html",[3,0.06,4,0.049,5,0.049,9,0.497,15,0.211,16,0.965,21,1.36,25,3.9,26,0.606,28,1.763,29,2.008,30,1.641,31,0.008,32,0.812,33,0.52,34,1.294,35,1.956,38,2.468,44,1.522,46,1.7,53,1.431,54,1.08,55,1.907,59,0.164,60,1.513,61,0.65,64,0.338,65,1.513,73,0.06,74,0.047,77,1.422,84,2.007,85,1.851,89,1.414,90,1.247,93,1.247,94,2.47,98,5.019,99,5.019,100,3.819,101,4.596,102,4.596,103,5.019,104,5.019,105,5.019,108,0.004,109,0.004,111,2.852,113,1.279,116,3.317,117,1.851,119,2.998,122,3.784,125,1.454,126,1.772,127,2.468,130,4.278,139,4.973,140,2.867,150,3.784,182,1.798,196,3.524,200,0.908,202,2.648,205,2.27,206,2.595,209,3.502,212,2.752,224,1.93,228,2.124,295,0.77,389,1.295,428,0.77,450,2.388,456,2.057,479,0.853,501,2.473,526,3.784,547,2.168,561,3.144,663,2.47,668,1.247,670,0.927,672,1.279,782,5.06,788,3.784,790,2.473,794,4.132,795,3.784,799,3.784,803,3.102,804,2.473,805,2.168,810,2.473,822,2.648,829,2.867,936,3.317,942,3.317,952,5.06,956,4.132,959,4.132,962,2.701,1160,2.303,1457,5.45,1663,5.45,1691,3.784,1769,4.596,1779,4.596,1995,3.784,2084,4.132,2098,4.132,2129,2.701,2130,2.701,2131,2.701,2133,2.701,2134,2.701,2142,2.701,2143,5.66,2144,5.66,2145,5.66,2146,3.046,2147,3.046,2148,3.046,2149,3.046,2150,3.046,2151,3.046,2152,3.046,2153,3.046,2154,3.046,2155,4.66,2156,3.046,2157,3.046,2158,3.046,2159,4.66,2160,4.66,2161,3.046,2162,3.046,2163,3.046,2164,3.046]],["title/entities/Xref.html",[383,1.106,710,2.412]],["body/entities/Xref.html",[3,0.107,4,0.088,5,0.088,15,0.378,26,0.665,31,0.008,33,0.591,47,2.792,48,2.614,53,1.78,59,0.153,73,0.107,74,0.084,108,0.006,109,0.006,118,1.676,125,1.291,126,2.677,145,1.573,330,3.222,341,3.508,383,1.71,385,2.178,389,1.783,394,2.351,395,3.033,398,3.607,399,3.728,411,4.749,418,2.99,423,3.033,426,3.858,427,3.358,428,1.38,576,3.222,617,1.437,710,3.728,847,6.328,884,5.592,889,3.1,893,4,920,3.883,1370,5.611,1395,3.508,1481,5.323,2165,4.838,2166,7.793,2167,5.456,2168,7.039,2169,5.456,2170,7.039,2171,5.456,2172,5.456]],["title/controllers/XrefController.html",[429,1.175,2173,3.444]],["body/controllers/XrefController.html",[3,0.091,4,0.075,5,0.075,9,0.681,15,0.322,16,1.309,26,0.511,28,1.631,30,1.309,31,0.008,32,0.778,33,0.535,34,1.091,44,1.335,46,1.697,59,0.167,64,0.515,73,0.091,74,0.071,77,1.04,85,1.446,89,1.309,108,0.005,109,0.005,125,1.416,145,1.207,191,1.299,204,1.506,205,2.195,217,1.852,218,1.948,219,1.948,389,1.907,429,1.197,431,1.222,433,1.948,464,3.592,475,2.959,479,1.77,484,3.365,485,3.365,496,2.943,499,2.111,506,2.054,507,2.236,514,2.959,670,1.412,710,4.415,713,3.465,845,5.933,901,3.14,902,4.45,903,3.957,904,2.983,907,3.302,908,3.302,909,4.064,910,3.509,911,3.509,912,4.423,914,4.623,915,3.465,916,3.733,924,4.064,926,3.13,927,3.13,1059,2.983,1073,2.543,1096,4.114,1393,3.509,1394,3.509,1395,2.983,1406,4.623,1562,5.605,1564,3.302,1655,3.509,2173,4.781,2174,4.114,2175,6.322,2176,4.64,2177,5.605,2178,6.322,2179,4.64,2180,6.322,2181,4.64,2182,4.64,2183,4.64,2184,4.64,2185,4.64,2186,4.64,2187,4.64]],["title/modules/XrefModule.html",[234,1.001,268,3.073]],["body/modules/XrefModule.html",[3,0.115,4,0.094,5,0.094,31,0.008,59,0.174,64,0.651,73,0.115,74,0.09,108,0.006,109,0.006,234,1.773,236,2.083,237,2.132,238,2.234,239,2.234,240,2.132,241,3.067,242,3.067,248,6.002,268,6.215,271,2.806,272,2.234,273,1.948,279,2.806,294,2.404,295,1.486,330,3.468,331,5.208,431,1.943,576,3.468,710,3.111,1393,4.442,1395,3.777,1402,5.208,1406,6.029,2173,6.1,2188,5.208,2189,5.874,2190,5.208,2191,5.208,2192,5.874,2193,5.874]],["title/injectables/XrefService.html",[61,0.636,1406,2.928]],["body/injectables/XrefService.html",[3,0.09,4,0.074,5,0.074,9,0.494,15,0.32,16,1.304,21,1.838,26,0.579,28,1.626,30,1.484,31,0.008,32,0.776,33,0.497,34,1.237,44,1.33,46,1.693,54,1.637,55,2.578,59,0.167,61,0.879,62,2.725,64,0.512,73,0.09,74,0.071,77,1.412,84,2.543,85,1.64,89,1.304,90,2.935,93,2.935,94,3.141,108,0.005,109,0.005,125,1.315,200,1.375,205,2.192,224,1.917,228,2.395,295,1.167,329,2.839,330,3.719,389,1.441,428,1.167,456,1.942,576,3.719,580,3.285,663,3.001,668,1.889,670,1.405,710,4.71,803,3.452,822,3.579,843,3.285,845,5.739,847,3.748,884,4.411,917,4.953,918,3.748,920,3.285,936,4.483,942,4.483,1394,3.49,1395,2.967,1406,4.05,1580,4.483,2194,4.092,2195,4.615,2196,7.171,2197,4.615,2198,6.299,2199,6.299,2200,4.615,2201,4.615,2202,4.615,2203,7.171,2204,4.615,2205,4.615,2206,4.615,2207,4.615,2208,4.615]],["title/coverage.html",[2209,4.72]],["body/coverage.html",[0,2.639,1,1.385,5,0.036,6,1.996,7,1.447,8,1.996,28,0.581,31,0.008,32,0.244,33,0.156,61,1.258,71,1.447,74,0.135,85,0.515,108,0.003,109,0.003,110,2.476,111,0.856,113,0.945,114,1.996,117,0.942,127,1.192,130,1.519,132,1.996,133,2.98,139,1.447,182,1.329,199,1.519,201,1.996,204,1.191,206,0.921,240,0.817,269,1.519,270,1.519,274,1.828,299,1.703,301,1.828,305,1.703,313,1.602,318,3.329,319,2.743,321,2.639,326,1.409,327,1.602,329,1.385,330,2.743,334,3.044,336,3.044,338,3.295,339,3.044,341,3.444,343,2.743,351,1.828,383,2.058,384,1.447,386,1.996,393,1.279,408,1.519,429,2.187,430,1.703,432,1.996,437,1.602,443,1.996,444,1.703,445,1.996,454,1.519,460,1.519,486,1.703,491,1.519,520,1.385,521,1.447,522,1.519,523,1.519,530,1.703,539,1.996,550,1.996,575,1.602,576,3.163,577,1.996,578,1.996,584,1.519,585,1.996,586,1.996,616,1.602,617,2.345,618,2.98,619,2.98,633,1.602,634,1.996,635,2.98,649,1.602,650,1.996,651,2.98,652,1.234,657,1.519,658,1.996,659,1.996,661,1.519,686,1.602,687,1.996,688,1.996,699,1.602,700,1.996,701,2.98,702,1.154,707,1.602,708,1.996,709,2.98,710,1.192,717,1.602,718,3.455,719,1.996,720,1.996,725,1.602,732,1.602,733,1.996,740,1.602,741,1.996,746,1.602,747,1.996,748,1.996,751,1.602,752,1.996,755,1.996,766,1.996,782,1.519,783,1.996,784,1.996,791,1.519,792,1.447,845,1.602,846,1.996,854,1.996,860,1.996,861,1.996,884,1.385,885,1.996,894,1.703,895,1.996,917,1.447,935,1.996,952,1.519,953,1.996,954,1.996,965,1.996,991,2.257,994,2.085,999,2.085,1002,1.329,1007,2.085,1035,1.602,1045,1.703,1048,1.703,1049,1.996,1066,1.329,1067,1.329,1069,1.154,1077,1.996,1099,3.772,1101,1.329,1118,1.703,1119,2.98,1126,1.519,1140,2.98,1141,1.447,1165,3.254,1181,1.703,1182,1.996,1188,1.519,1200,1.996,1201,1.447,1218,3.254,1233,1.703,1234,1.996,1237,1.385,1250,1.602,1256,1.996,1259,1.996,1278,1.703,1279,1.996,1285,1.519,1297,1.996,1308,1.996,1322,3.254,1337,1.703,1338,1.996,1344,1.519,1356,1.996,1357,1.447,1370,2.359,1371,3.254,1385,1.703,1386,1.996,1392,1.519,1405,1.996,1406,1.447,1419,1.996,1420,2.98,1457,1.703,1458,1.996,1459,1.996,1467,1.996,1473,1.996,1494,1.703,1495,1.996,1499,1.602,1505,1.996,1506,1.385,1507,1.996,1519,1.703,1520,1.996,1528,1.447,1540,1.996,1561,1.703,1625,1.996,1641,1.996,1644,1.996,1650,1.703,1651,1.996,1681,1.996,1713,1.996,1719,1.703,1720,1.996,1740,1.996,1762,1.703,1763,1.996,1775,1.703,1776,1.996,1794,1.602,1797,1.996,1831,1.996,1832,1.996,1836,1.996,1848,1.996,1854,1.703,1855,1.996,1870,1.996,1883,1.828,1911,1.996,1928,1.996,1929,1.996,1940,1.996,1944,1.996,1957,1.703,1958,1.996,1969,1.996,1980,1.996,1985,1.703,1986,1.996,2006,1.996,2031,1.996,2081,1.703,2082,1.996,2137,1.996,2142,1.996,2165,1.996,2173,1.703,2174,1.996,2194,1.996,2209,1.703,2210,2.251,2211,6.326,2212,9.348,2213,8.409,2214,9.272,2215,7.858,2216,8.339,2217,6.671,2218,4.118,2219,1.996,2220,1.996,2221,1.996,2222,5.357,2223,5.899,2224,6.956,2225,7.976,2226,6.326,2227,2.251,2228,4.645,2229,4.645,2230,4.645,2231,3.669,2232,2.251,2233,2.251,2234,1.996,2235,2.251,2236,3.669,2237,3.669,2238,2.251,2239,2.251,2240,2.251,2241,3.669,2242,2.251,2243,2.251]],["title/dependencies.html",[237,1.99,2244,3.361]],["body/dependencies.html",[31,0.008,64,0.684,65,3.062,67,3.504,70,3.793,74,0.117,108,0.006,109,0.006,191,1.726,195,2.461,237,2.237,295,1.559,309,4.663,428,1.923,473,4.16,551,5.467,879,5.467,1466,4.663,1509,4.663,1597,5.467,1604,5.007,1877,5.467,2245,6.166,2246,6.166,2247,6.166,2248,8.244,2249,6.166,2250,6.166,2251,6.166,2252,6.166,2253,6.166,2254,6.166,2255,6.166,2256,6.166,2257,6.166,2258,6.166,2259,6.166,2260,6.166,2261,6.166,2262,6.166,2263,6.166,2264,6.166,2265,6.166,2266,6.166,2267,6.166,2268,6.166,2269,6.166,2270,6.166,2271,6.166,2272,6.166,2273,6.166,2274,6.166]],["title/miscellaneous/enumerations.html",[2275,2.557,2276,4.863]],["body/miscellaneous/enumerations.html",[15,0.374,31,0.008,32,0.584,33,0.374,108,0.006,109,0.006,117,1.664,123,4.717,128,4.384,198,3.952,202,4.66,203,5.837,204,1.752,217,2.791,218,2.267,276,3.843,326,1.14,456,1.632,479,1.958,604,5.677,608,6.659,609,5.837,625,3.832,630,2.959,642,4.976,644,4.976,646,3.843,696,4.495,702,2.767,713,4.495,785,4.717,1027,6.787,1034,7.271,1509,4.083,2275,3.643,2276,4.788,2277,5.399,2278,8.201,2279,5.399,2280,5.399,2281,6.992,2282,6.992,2283,6.992,2284,6.992,2285,4.788,2286,5.399,2287,6.992,2288,6.992,2289,6.992,2290,5.399,2291,4.788,2292,6.992]],["title/miscellaneous/functions.html",[2275,2.557,2293,4.863]],["body/miscellaneous/functions.html",[15,0.485,31,0.007,108,0.007,109,0.007,240,3.258,276,6.194,368,5.678,473,4.718,486,5.289,511,3.37,787,6.201,981,6.201,1601,6.201,2234,6.201,2275,4.718,2293,6.201,2294,6.993,2295,6.993,2296,6.993,2297,6.201,2298,6.993,2299,6.993,2300,6.993]],["title/index.html",[15,0.263,1461,3.078,2301,3.361]],["body/index.html",[4,0.071,9,0.348,10,5.286,31,0.008,102,3.601,108,0.005,109,0.005,151,3.024,212,2.619,273,2.727,276,5.852,348,4.976,365,5.434,473,5.795,486,4.635,540,3.601,663,1.727,676,2.52,796,3.932,819,5.434,835,6.151,963,4.998,967,3.156,1465,2.992,1594,2.992,1596,3.354,1605,3.932,1701,3.354,1816,3.601,2209,3.354,2302,4.435,2303,4.435,2304,7.023,2305,6.129,2306,4.435,2307,4.435,2308,4.435,2309,6.129,2310,7.023,2311,4.435,2312,7.575,2313,4.435,2314,8.589,2315,4.435,2316,7.473,2317,4.435,2318,3.932,2319,4.435,2320,5.434,2321,4.435,2322,4.435,2323,7.023,2324,4.435,2325,4.435,2326,4.435,2327,4.435,2328,4.435,2329,4.435,2330,7.575,2331,5.434,2332,3.932,2333,3.932,2334,4.435,2335,3.932,2336,6.129,2337,6.129,2338,4.435,2339,6.129,2340,8.222,2341,6.717,2342,4.435,2343,6.129,2344,3.932,2345,4.435,2346,4.435,2347,3.932,2348,7.575,2349,4.435,2350,3.932,2351,4.435,2352,4.435,2353,6.129,2354,4.435,2355,4.435,2356,4.435,2357,4.435,2358,6.129,2359,3.932,2360,4.435,2361,3.932,2362,6.129,2363,4.435,2364,4.435,2365,6.151,2366,4.435,2367,4.435,2368,4.435,2369,4.435,2370,4.435,2371,4.435,2372,4.435,2373,4.435,2374,6.129,2375,4.435,2376,3.932,2377,4.435,2378,4.435,2379,3.932,2380,3.932,2381,3.932,2382,4.435,2383,6.129,2384,4.435,2385,3.932,2386,4.435,2387,4.435,2388,6.129,2389,3.932,2390,4.435,2391,4.435,2392,6.129,2393,5.434,2394,4.435,2395,4.435,2396,4.435,2397,4.435,2398,4.435,2399,4.435,2400,4.435,2401,4.435,2402,4.435,2403,4.435,2404,4.435,2405,4.435,2406,4.435,2407,4.435,2408,4.435,2409,4.435,2410,3.354]],["title/license.html",[1461,3.078,2301,3.361,2410,2.867]],["body/license.html",[4,0.13,5,0.023,12,1.927,13,2.147,16,0.163,26,0.064,31,0.003,35,0.614,43,0.466,55,0.323,59,0.015,70,0.899,74,0.012,85,0.927,89,0.163,100,0.532,101,0.641,108,0.002,109,0.001,110,2.522,112,1.544,117,1.136,122,0.641,125,0.268,134,0.776,135,0.418,136,2.992,144,0.466,147,4.076,150,1.187,151,2.094,159,0.641,160,1.544,167,0.507,182,2,186,1.187,212,2,215,2.083,221,0.507,223,1.306,224,0.24,273,0.262,276,0.561,381,2.561,383,0.355,387,1.105,447,0.432,453,1.544,456,1.67,479,0.221,480,6.74,482,0.699,483,1.813,487,1.81,488,0.532,494,0.641,499,0.359,526,0.641,540,0.641,546,1.658,561,3.54,563,1.187,590,0.641,595,1.81,637,1.486,676,0.831,692,1.296,696,0.507,697,2.43,730,5.669,734,3.003,742,0.699,765,1.81,785,3.406,820,2.653,822,0.831,829,2.973,830,0.448,835,2.75,955,0.94,963,1.813,967,2.885,978,0.466,997,1.04,1013,1.296,1019,5.232,1033,1.81,1043,1.81,1058,0.699,1059,1.313,1084,1.81,1085,0.699,1129,0.532,1216,3.246,1217,1.313,1309,0.699,1318,0.641,1319,0.699,1378,1.658,1422,0.641,1426,0.641,1439,3.314,1465,0.532,1469,0.699,1481,0.597,1485,2.653,1592,0.699,1594,1.719,1596,3.655,1623,0.699,1637,0.699,1649,0.699,1661,0.641,1701,0.597,1779,1.187,1788,1.296,1816,0.641,1839,0.641,1852,1.187,1859,0.699,1885,5.192,1951,0.699,1995,0.641,2032,0.699,2049,0.699,2050,2.259,2092,4.964,2094,4.076,2177,0.699,2209,1.105,2285,0.699,2291,1.296,2297,1.296,2316,3.314,2318,0.699,2320,0.699,2331,0.699,2332,2.259,2333,0.699,2335,0.699,2341,0.699,2344,0.699,2347,2.259,2350,1.81,2359,0.699,2361,0.699,2365,1.658,2379,2.259,2380,4.076,2381,0.699,2385,1.81,2389,4.076,2393,1.81,2410,6.748,2411,5.9,2412,5.755,2413,6.597,2414,6.608,2415,3.314,2416,0.789,2417,0.789,2418,2.042,2419,7.088,2420,2.992,2421,5.755,2422,6.691,2423,2.992,2424,0.789,2425,0.789,2426,1.462,2427,2.992,2428,6.779,2429,2.042,2430,2.042,2431,5.049,2432,2.042,2433,0.789,2434,0.789,2435,0.789,2436,1.462,2437,5.049,2438,2.992,2439,3.738,2440,1.462,2441,1.462,2442,2.548,2443,5.429,2444,4.054,2445,0.789,2446,0.789,2447,3.386,2448,1.462,2449,2.548,2450,0.789,2451,0.789,2452,0.789,2453,4.833,2454,7.814,2455,2.042,2456,0.789,2457,0.789,2458,2.548,2459,4.339,2460,0.789,2461,4.339,2462,1.462,2463,0.789,2464,2.992,2465,0.789,2466,0.789,2467,2.548,2468,0.789,2469,0.789,2470,2.042,2471,4.833,2472,4.597,2473,2.992,2474,5.049,2475,0.789,2476,1.462,2477,0.789,2478,0.789,2479,0.789,2480,0.789,2481,0.789,2482,4.285,2483,0.789,2484,0.789,2485,0.789,2486,2.548,2487,0.789,2488,1.462,2489,0.789,2490,2.042,2491,4.339,2492,0.789,2493,4.054,2494,0.789,2495,6.163,2496,2.042,2497,0.789,2498,0.789,2499,2.548,2500,2.042,2501,1.462,2502,0.789,2503,2.548,2504,2.548,2505,0.789,2506,2.042,2507,0.789,2508,3.386,2509,1.462,2510,1.462,2511,2.042,2512,7.851,2513,0.789,2514,7.221,2515,5.247,2516,2.992,2517,2.992,2518,3.386,2519,0.789,2520,2.042,2521,6.163,2522,1.462,2523,5.049,2524,0.789,2525,0.789,2526,0.789,2527,8.849,2528,0.789,2529,0.789,2530,1.462,2531,3.386,2532,0.789,2533,1.462,2534,0.789,2535,0.789,2536,0.789,2537,1.462,2538,7.774,2539,2.042,2540,4.339,2541,2.548,2542,1.462,2543,0.789,2544,1.462,2545,2.042,2546,4.339,2547,4.597,2548,2.548,2549,0.789,2550,2.548,2551,1.462,2552,2.548,2553,2.548,2554,0.789,2555,2.042,2556,0.789,2557,6.862,2558,1.462,2559,0.789,2560,4.054,2561,0.789,2562,2.042,2563,3.386,2564,5.598,2565,2.042,2566,1.462,2567,3.738,2568,4.833,2569,3.386,2570,0.789,2571,1.462,2572,0.789,2573,0.789,2574,3.738,2575,0.789,2576,5.247,2577,1.462,2578,0.789,2579,0.789,2580,0.789,2581,0.789,2582,2.042,2583,0.789,2584,0.789,2585,0.789,2586,4.833,2587,4.054,2588,2.548,2589,0.789,2590,0.789,2591,0.789,2592,1.462,2593,0.789,2594,2.042,2595,2.042,2596,2.042,2597,2.042,2598,0.789,2599,0.789,2600,2.992,2601,2.992,2602,0.789,2603,0.789,2604,0.789,2605,1.462,2606,2.042,2607,0.789,2608,0.789,2609,0.789,2610,0.789,2611,1.462,2612,0.789,2613,6.941,2614,4.054,2615,0.789,2616,3.386,2617,4.833,2618,1.462,2619,2.548,2620,0.789,2621,0.789,2622,1.462,2623,2.548,2624,0.789,2625,0.789,2626,0.789,2627,1.462,2628,2.992,2629,0.789,2630,1.462,2631,0.789,2632,0.789,2633,2.992,2634,0.789,2635,2.548,2636,4.597,2637,3.738,2638,2.548,2639,0.789,2640,2.992,2641,0.789,2642,1.462,2643,0.789,2644,0.789,2645,1.462,2646,0.789,2647,0.789,2648,0.789,2649,2.042,2650,0.789,2651,1.462,2652,0.789,2653,1.462,2654,1.462,2655,1.462,2656,0.789,2657,5.247,2658,1.462,2659,0.789,2660,0.789,2661,0.789,2662,0.789,2663,0.789,2664,0.789,2665,2.042,2666,0.789,2667,0.789,2668,5.598,2669,0.789,2670,0.789,2671,0.789,2672,2.992,2673,3.386,2674,0.789,2675,0.789,2676,2.042,2677,0.789,2678,0.789,2679,2.548,2680,0.789,2681,1.462,2682,0.789,2683,0.789,2684,0.789,2685,0.789,2686,0.789,2687,1.462,2688,0.789,2689,2.042,2690,0.789,2691,0.789,2692,1.462,2693,0.789,2694,0.789,2695,0.789,2696,0.789,2697,0.789,2698,1.462,2699,1.462,2700,4.339,2701,0.789,2702,3.386,2703,0.789,2704,0.789,2705,1.462,2706,2.042,2707,2.042,2708,2.548,2709,2.548,2710,2.042,2711,2.548,2712,2.042,2713,0.789,2714,2.992,2715,2.992,2716,0.789,2717,2.042,2718,2.042,2719,0.789,2720,1.462,2721,0.789,2722,1.462,2723,2.992,2724,1.462,2725,2.548,2726,2.548,2727,0.789,2728,2.042,2729,5.429,2730,2.992,2731,0.789,2732,3.738,2733,0.789,2734,2.042,2735,3.738,2736,2.042,2737,1.462,2738,0.789,2739,0.789,2740,0.789,2741,0.789,2742,2.042,2743,0.789,2744,0.789,2745,0.789,2746,2.042,2747,0.789,2748,0.789,2749,1.462,2750,0.789,2751,0.789,2752,0.789,2753,2.042,2754,0.789,2755,0.789,2756,0.789,2757,2.042,2758,1.462,2759,3.386,2760,2.042,2761,1.462,2762,1.462,2763,1.462,2764,1.462,2765,2.548,2766,1.462,2767,0.789,2768,0.789,2769,0.789,2770,0.789,2771,3.386,2772,1.462,2773,0.789,2774,0.789,2775,0.789,2776,0.789,2777,1.462,2778,0.789,2779,1.462,2780,0.789,2781,2.992,2782,0.789,2783,4.054,2784,0.789,2785,4.833,2786,1.462,2787,0.789,2788,0.789,2789,0.789,2790,0.789,2791,0.789,2792,1.462,2793,0.789,2794,2.042,2795,2.992,2796,1.462,2797,2.548,2798,1.462,2799,0.789,2800,0.789,2801,0.789,2802,0.789,2803,0.789,2804,1.462,2805,0.789,2806,0.789,2807,0.789,2808,2.548,2809,0.789,2810,1.462,2811,1.462,2812,0.789,2813,0.789,2814,0.789,2815,0.789,2816,0.789,2817,0.789,2818,2.548,2819,0.789,2820,0.789,2821,0.789,2822,0.789,2823,0.789,2824,0.789,2825,0.789,2826,0.789,2827,0.789,2828,0.789,2829,2.992,2830,0.789,2831,2.548,2832,0.789,2833,0.789,2834,0.789,2835,0.789,2836,0.789,2837,0.789,2838,0.789,2839,0.789,2840,0.789,2841,0.789,2842,3.738,2843,2.042,2844,0.789,2845,2.548,2846,0.789,2847,0.789,2848,2.042,2849,0.789,2850,0.789,2851,2.042,2852,0.789,2853,1.462,2854,0.789,2855,0.789,2856,0.789,2857,0.789,2858,0.789,2859,0.789,2860,0.789,2861,0.789,2862,0.789,2863,0.789,2864,0.789,2865,1.462,2866,1.462,2867,0.789,2868,0.789,2869,2.548,2870,0.789,2871,2.042,2872,1.462,2873,0.789,2874,1.462,2875,2.042,2876,2.042,2877,2.548,2878,1.462,2879,0.789,2880,2.042,2881,3.738,2882,0.789,2883,1.462,2884,0.789,2885,0.789,2886,0.789,2887,0.789,2888,0.789,2889,0.789,2890,1.462,2891,0.789,2892,2.548,2893,2.042,2894,0.789,2895,2.992,2896,0.789,2897,0.789,2898,0.789,2899,0.789,2900,0.789,2901,0.789,2902,1.462,2903,1.462,2904,1.462,2905,2.042,2906,0.789,2907,1.462,2908,1.462,2909,2.042,2910,0.789,2911,1.462,2912,0.789,2913,1.462,2914,0.789,2915,0.789,2916,1.462,2917,6.597,2918,2.042,2919,0.789,2920,2.992,2921,4.597,2922,2.042,2923,0.789,2924,0.789,2925,0.789,2926,0.789,2927,2.548,2928,0.789,2929,2.042,2930,0.789,2931,1.462,2932,0.789,2933,0.789,2934,0.789,2935,0.789,2936,0.789,2937,0.789,2938,0.789,2939,2.548,2940,1.462,2941,1.462,2942,0.789,2943,0.789,2944,2.042,2945,0.789,2946,1.462,2947,2.042,2948,0.789,2949,1.462,2950,0.789,2951,0.789,2952,0.789,2953,0.789,2954,1.462,2955,2.042,2956,0.789,2957,0.789,2958,1.462,2959,0.789,2960,0.789,2961,0.789,2962,0.789,2963,0.789,2964,0.789,2965,2.042,2966,1.462,2967,0.789,2968,0.789,2969,2.548,2970,0.789,2971,2.042,2972,0.789,2973,0.789,2974,1.462,2975,0.789,2976,0.789,2977,0.789,2978,2.042,2979,1.462,2980,1.462,2981,0.789,2982,1.462,2983,3.738,2984,1.462,2985,2.042,2986,2.548,2987,0.789,2988,0.789,2989,1.462,2990,0.789,2991,2.042,2992,0.789,2993,1.462,2994,0.789,2995,0.789,2996,0.789,2997,0.789,2998,2.548,2999,0.789,3000,2.042,3001,1.462,3002,0.789,3003,1.462,3004,0.789,3005,0.789,3006,0.789,3007,1.462,3008,1.462,3009,0.789,3010,1.462,3011,0.789,3012,0.789,3013,0.789,3014,0.789,3015,2.042,3016,0.789,3017,0.789,3018,0.789,3019,0.789,3020,1.462,3021,2.548,3022,1.462,3023,2.042,3024,0.789,3025,0.789,3026,0.789,3027,0.789,3028,1.462,3029,0.789,3030,0.789,3031,0.789,3032,0.789,3033,0.789,3034,0.789,3035,0.789,3036,0.789,3037,0.789,3038,0.789,3039,0.789,3040,0.789,3041,0.789,3042,0.789,3043,0.789,3044,2.548,3045,0.789,3046,0.789,3047,1.462,3048,0.789,3049,0.789,3050,0.789,3051,0.789,3052,0.789,3053,0.789,3054,0.789,3055,0.789,3056,0.789,3057,0.789,3058,0.789,3059,0.789,3060,1.462,3061,0.789,3062,0.789,3063,0.789,3064,0.789,3065,0.789,3066,1.462,3067,0.789,3068,1.462,3069,0.789,3070,0.789,3071,0.789,3072,0.789,3073,0.789,3074,0.789,3075,0.789,3076,1.462,3077,1.462,3078,0.789,3079,1.462,3080,0.789,3081,0.789,3082,0.789,3083,0.789,3084,0.789,3085,2.042,3086,1.462,3087,0.789,3088,1.462,3089,1.462,3090,1.462,3091,0.789,3092,0.789,3093,0.789,3094,0.789,3095,0.789,3096,0.789,3097,1.462,3098,0.789,3099,0.789,3100,0.789,3101,1.462,3102,0.789,3103,0.789,3104,2.042,3105,0.789,3106,0.789,3107,0.789,3108,0.789,3109,0.789,3110,0.789,3111,0.789,3112,0.789,3113,0.789,3114,0.789,3115,0.789,3116,1.462,3117,0.789,3118,0.789,3119,0.789,3120,1.462,3121,0.789,3122,0.789,3123,0.789,3124,0.789,3125,0.789,3126,0.789,3127,0.789,3128,0.789,3129,0.789,3130,0.789,3131,0.789,3132,0.789,3133,0.789,3134,0.789,3135,0.789,3136,0.789,3137,1.462,3138,1.462,3139,0.789,3140,0.789,3141,0.789,3142,0.789,3143,0.789,3144,0.789,3145,0.789,3146,0.789,3147,2.548,3148,0.789,3149,0.789,3150,0.789,3151,0.789,3152,0.789,3153,0.789,3154,0.789,3155,0.789,3156,0.789,3157,0.789,3158,0.789,3159,0.789,3160,0.789,3161,0.699,3162,0.789]],["title/modules.html",[236,2.214]],["body/modules.html",[31,0.006,108,0.006,109,0.006,235,4.214,236,1.976,246,3.966,247,3.76,248,3.76,249,3.966,250,3.966,251,3.054,252,3.966,253,3.966,254,3.966,255,3.966,256,3.966,257,3.966,258,3.76,259,3.76,260,3.966,261,3.76,262,3.76,263,3.76,264,2.608,265,3.76,266,3.76,267,2.856,268,3.76,2365,7.788,2376,4.941,2482,4.941,3163,9.591,3164,9.591,3165,9.604]],["title/overview.html",[3166,5.534]],["body/overview.html",[2,2.006,31,0.008,108,0.003,109,0.003,112,2.006,131,1.033,199,3.497,200,0.79,206,2.917,234,0.583,235,7.137,236,0.941,237,0.962,238,1.009,239,1.009,240,0.962,241,1.009,242,1.009,243,2.352,244,2.352,245,2.352,246,4.56,247,5.526,248,4.809,249,3.689,250,5.829,251,4.833,252,5.829,253,5.829,254,5.651,255,5.829,256,5.829,257,4.56,258,4.809,259,5.129,260,4.846,261,5.129,262,5.129,263,4.809,264,3.997,265,4.809,266,5.129,267,4.442,268,5.129,269,3.497,270,3.497,271,1.591,272,1.009,273,0.88,385,1.059,431,0.698,435,2.352,436,2.352,437,3.689,454,4.809,517,2.352,518,2.352,519,2.352,520,3.621,521,3.333,522,3.497,523,3.497,657,3.497,661,4.809,697,2.154,782,3.497,791,4.809,792,4.582,917,4.582,929,2.352,930,2.352,931,2.352,952,3.497,1069,3.653,1126,3.497,1132,2.352,1134,2.352,1141,4.582,1154,2.352,1155,2.352,1156,2.352,1188,3.497,1193,2.352,1195,2.352,1201,4.582,1237,4.384,1247,2.352,1249,2.352,1250,3.689,1285,3.497,1291,2.352,1292,2.352,1344,3.497,1349,2.352,1351,2.352,1357,4.582,1392,3.497,1398,2.352,1400,2.352,1406,4.582,1481,3.165,1497,2.352,1498,2.352,1499,3.689,1528,4.582,1534,2.352,1535,2.352,1536,2.352,1569,2.352,1570,2.352,1571,2.352,1588,2.352,1589,2.352,1590,2.352,1675,2.352,1677,2.352,1678,2.352,1734,2.352,1735,2.352,1736,2.352,1791,2.352,1792,2.352,1793,2.352,1794,5.073,1904,2.352,1905,2.352,1906,2.352,1961,2.352,1962,2.352,1963,2.352,2000,2.352,2002,2.352,2003,2.352,2123,2.352,2125,2.352,2126,2.352,2188,2.352,2190,2.352,2191,2.352,2415,2.352,3166,2.352,3167,2.652,3168,2.652,3169,2.652]],["title/properties.html",[118,1.306,2244,3.361]],["body/properties.html",[9,0.562,31,0.008,108,0.007,109,0.007,118,1.706,277,5.819,278,5.819,676,4.072,2410,5.419,2414,6.354,3161,6.354,3170,7.166,3171,7.166,3172,7.166,3173,7.166]],["title/miscellaneous/variables.html",[2275,2.557,3174,4.863]],["body/miscellaneous/variables.html",[11,3.748,15,0.381,31,0.008,33,0.592,39,3.249,41,3.385,51,4.878,53,2.089,54,2.51,71,4.55,81,2.568,88,3.712,89,1.139,108,0.006,109,0.006,111,2.691,116,3.916,117,1.734,120,3.537,123,3.712,204,2.539,217,2.825,274,4.468,345,4.878,346,6.275,347,4.878,348,4.468,349,4.468,350,4.878,351,5.747,352,4.878,396,4.344,449,4.161,785,5.278,1027,6.225,1066,4.179,1067,3.249,1078,5.747,1465,5.278,1883,5.747,1892,4.878,2088,4.878,2218,4.878,2219,6.275,2220,6.275,2221,4.878,2275,3.712,3174,4.878,3175,5.502,3176,7.824,3177,5.502,3178,5.502,3179,5.502,3180,5.502,3181,5.502,3182,5.502,3183,5.502,3184,7.077,3185,7.077,3186,5.502,3187,7.824,3188,5.502,3189,5.502]],["title/routes.html",[1050,3.686]],["body/routes.html",[31,0.007,108,0.007,109,0.007,1050,4.413]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":3170,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2269,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2271,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2215,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2227,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2240,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":637,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateXrefDto.html":{},"classes/GetUserParamsDto.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"controllers/SymbolController.html":{},"license.html":{}}}],["1.1.26",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2233,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2230,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1378,"title":{},"body":{"entities/GeneXref.html":{},"classes/PaginationDto.html":{},"license.html":{}}}],["10.0.0",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2681,"title":{},"body":{"license.html":{}}}],["128",{"_index":400,"title":{},"body":{"entities/Assembly.html":{},"entities/Species.html":{}}}],["13",{"_index":3157,"title":{},"body":{"license.html":{}}}],["15",{"_index":2883,"title":{},"body":{"license.html":{}}}],["16",{"_index":1013,"title":{},"body":{"entities/Gene.html":{},"license.html":{}}}],["16.4.5",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2416,"title":{},"body":{"license.html":{}}}],["1996",{"_index":2686,"title":{},"body":{"license.html":{}}}],["1:m",{"_index":1514,"title":{},"body":{"entities/LocusGroup.html":{}}}],["1})@isoptional()@isint()@type(undefined",{"_index":1462,"title":{},"body":{"classes/GetUserParamsDto.html":{}}}],["2",{"_index":697,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"license.html":{},"overview.html":{}}}],["2.0.2",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2237,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1481,"title":{},"body":{"entities/Location.html":{},"entities/Xref.html":{},"license.html":{},"overview.html":{}}}],["200",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["2007",{"_index":2418,"title":{},"body":{"license.html":{}}}],["201",{"_index":901,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["23505",{"_index":949,"title":{},"body":{"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["24",{"_index":3167,"title":{},"body":{"overview.html":{}}}],["2525",{"_index":1614,"title":{},"body":{"modules/MailModule.html":{}}}],["255",{"_index":404,"title":{},"body":{"entities/Assembly.html":{},"entities/GeneHistory.html":{},"entities/Location.html":{},"entities/Name.html":{},"entities/User.html":{}}}],["26",{"_index":3169,"title":{},"body":{"overview.html":{}}}],["28",{"_index":3040,"title":{},"body":{"license.html":{}}}],["3",{"_index":2415,"title":{},"body":{"license.html":{},"overview.html":{}}}],["3.0",{"_index":3171,"title":{},"body":{"properties.html":{}}}],["3.1.10",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2216,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1085,"title":{},"body":{"entities/GeneHistory.html":{},"license.html":{}}}],["34",{"_index":3168,"title":{},"body":{"overview.html":{}}}],["4",{"_index":2718,"title":{},"body":{"license.html":{}}}],["4.1.0",{"_index":2274,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2217,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1955,"title":{},"body":{"entities/Species.html":{}}}],["45",{"_index":1515,"title":{},"body":{"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Symbol.html":{}}}],["5",{"_index":2754,"title":{},"body":{"license.html":{}}}],["5.1.1",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["6.9.16",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2930,"title":{},"body":{"license.html":{}}}],["66",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["6b",{"_index":2778,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2802,"title":{},"body":{"license.html":{}}}],["7",{"_index":2712,"title":{},"body":{"license.html":{}}}],["7.8.1",{"_index":2270,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2242,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2072,"title":{},"body":{"entities/User.html":{}}}],["8.0.7",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":2267,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2241,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2238,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":755,"title":{},"body":{"classes/CreateSymbolDto.html":{},"coverage.html":{}}}],["96",{"_index":2044,"title":{},"body":{"entities/User.html":{}}}],["_",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["aapl",{"_index":760,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["ability",{"_index":2850,"title":{},"body":{"license.html":{}}}],["above",{"_index":1059,"title":{},"body":{"controllers/GeneController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{},"license.html":{}}}],["above'})@apiresponse({status",{"_index":1564,"title":{},"body":{"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["absence",{"_index":2713,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3127,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":1468,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["accept",{"_index":2940,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":2939,"title":{},"body":{"license.html":{}}}],["access",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserRoleGuard.html":{},"license.html":{}}}],["accessible",{"_index":2501,"title":{},"body":{"license.html":{}}}],["accession",{"_index":850,"title":{},"body":{"classes/CreateXrefDto.html":{},"entities/Location.html":{}}}],["accesstoken",{"_index":1449,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{},"coverage.html":{}}}],["accompanied",{"_index":2760,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3131,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":2505,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2711,"title":{},"body":{"license.html":{}}}],["according",{"_index":3122,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":3136,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":2647,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2989,"title":{},"body":{"license.html":{}}}],["act",{"_index":1470,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["actions",{"_index":2948,"title":{},"body":{"license.html":{}}}],["active",{"_index":116,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"injectables/GeneService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["activeuser",{"_index":1066,"title":{},"body":{"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserinterface",{"_index":111,"title":{"interfaces/ActiveUserInterface.html":{}},"body":{"interfaces/ActiveUserInterface.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activities",{"_index":2555,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3034,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1649,"title":{},"body":{"entities/Name.html":{},"license.html":{}}}],["actually",{"_index":2823,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":2534,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":1621,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2877,"title":{},"body":{"license.html":{}}}],["added",{"_index":2710,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2729,"title":{},"body":{"license.html":{}}}],["address",{"_index":122,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"injectables/UserService.html":{},"license.html":{}}}],["addressed",{"_index":2529,"title":{},"body":{"license.html":{}}}],["admin",{"_index":202,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"guards/RoleGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@apiresponse({status",{"_index":1055,"title":{},"body":{"controllers/GeneController.html":{},"controllers/UserController.html":{}}}],["admin.role.guard",{"_index":1879,"title":{},"body":{"guards/RoleGuard.html":{}}}],["admin.roles.some",{"_index":825,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["admincreateuser",{"_index":2083,"title":{},"body":{"controllers/UserController.html":{}}}],["admincreateuser(createuserdto",{"_index":2086,"title":{},"body":{"controllers/UserController.html":{}}}],["admincreateuserdto",{"_index":130,"title":{"classes/AdminCreateUserDto.html":{}},"body":{"classes/AdminCreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["adminroleguard",{"_index":199,"title":{"injectables/AdminRoleGuard.html":{}},"body":{"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"overview.html":{}}}],["admins",{"_index":828,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["adopted",{"_index":2684,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2856,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3117,"title":{},"body":{"license.html":{}}}],["affects",{"_index":2857,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2412,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2970,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2643,"title":{},"body":{"license.html":{}}}],["against",{"_index":563,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{},"license.html":{}}}],["aggregate",{"_index":2746,"title":{},"body":{"license.html":{}}}],["agpl",{"_index":3161,"title":{},"body":{"license.html":{},"properties.html":{}}}],["agree",{"_index":3053,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3103,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3000,"title":{},"body":{"license.html":{}}}],["alias",{"_index":644,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateSymbolDto.html":{},"miscellaneous/enumerations.html":{}}}],["alleging",{"_index":2977,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2093,"title":{},"body":{"controllers/UserController.html":{}}}],["allowed",{"_index":765,"title":{},"body":{"classes/CreateSymbolDto.html":{},"license.html":{}}}],["allowed'})@apiproperty({description",{"_index":758,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["allowing",{"_index":2354,"title":{},"body":{"index.html":{}}}],["along",{"_index":2715,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":756,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["already",{"_index":830,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"license.html":{}}}],["alternate",{"_index":2479,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":2774,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":2398,"title":{},"body":{"index.html":{}}}],["ancillary",{"_index":2942,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2473,"title":{},"body":{"license.html":{}}}],["anti",{"_index":2671,"title":{},"body":{"license.html":{}}}],["any).code",{"_index":948,"title":{},"body":{"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["anyone",{"_index":2726,"title":{},"body":{"license.html":{}}}],["anything",{"_index":2541,"title":{},"body":{"license.html":{}}}],["api",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"properties.html":{}}}],["api'})@apiresponse({status",{"_index":495,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibadrequestresponse",{"_index":914,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["apibearerauth",{"_index":915,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["apibearerauth()@role(roletypes.admin)@apioperation({summary",{"_index":2087,"title":{},"body":{"controllers/UserController.html":{}}}],["apinotfoundresponse",{"_index":1065,"title":{},"body":{"controllers/GeneController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{}}}],["apioperation",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["apioperation({summary",{"_index":1122,"title":{},"body":{"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apiparam",{"_index":916,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["apiproperty",{"_index":190,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{}}}],["apiproperty({description",{"_index":598,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["apiproperty({enum",{"_index":605,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["apipropertyoptional",{"_index":611,"title":{},"body":{"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamsDto.html":{}}}],["apipropertyoptional({description",{"_index":589,"title":{},"body":{"classes/CreateGeneDto.html":{},"classes/GetUserParamsDto.html":{}}}],["apiresponse",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["apitags",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SpeciesController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["apitags('auth",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('cross",{"_index":2183,"title":{},"body":{"controllers/XrefController.html":{}}}],["apitags('external",{"_index":922,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["apitags('gene",{"_index":1072,"title":{},"body":{"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{}}}],["apitags('locus",{"_index":1531,"title":{},"body":{"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{}}}],["apitags('name",{"_index":1666,"title":{},"body":{"controllers/NameController.html":{}}}],["apitags('note",{"_index":1729,"title":{},"body":{"controllers/NoteController.html":{}}}],["apitags('role",{"_index":1866,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('species",{"_index":1960,"title":{},"body":{"controllers/SpeciesController.html":{}}}],["apitags('symbol",{"_index":1994,"title":{},"body":{"controllers/SymbolController.html":{}}}],["apitags('user",{"_index":2111,"title":{},"body":{"controllers/UserController.html":{}}}],["apiversion",{"_index":882,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["app_guard",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["applicable",{"_index":2546,"title":{},"body":{"license.html":{}}}],["application",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["applications",{"_index":2309,"title":{},"body":{"index.html":{}}}],["applies",{"_index":3078,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2523,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":235,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":2567,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2704,"title":{},"body":{"license.html":{}}}],["approved",{"_index":609,"title":{},"body":{"classes/CreateGeneDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateSymbolDto.html":{},"entities/Gene.html":{},"miscellaneous/enumerations.html":{}}}],["approximates",{"_index":3126,"title":{},"body":{"license.html":{}}}],["archive",{"_index":3154,"title":{},"body":{"license.html":{}}}],["arising",{"_index":3107,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":3010,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3023,"title":{},"body":{"license.html":{}}}],["article",{"_index":2680,"title":{},"body":{"license.html":{}}}],["assemblies",{"_index":1474,"title":{},"body":{"entities/Location.html":{},"entities/Species.html":{}}}],["assembly",{"_index":384,"title":{"entities/Assembly.html":{}},"body":{"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"entities/Location.html":{},"entities/Species.html":{},"coverage.html":{}}}],["assembly.controller",{"_index":439,"title":{},"body":{"modules/AssemblyModule.html":{}}}],["assembly.entity",{"_index":441,"title":{},"body":{"modules/AssemblyModule.html":{}}}],["assembly.locations",{"_index":1476,"title":{},"body":{"entities/Location.html":{}}}],["assembly.service",{"_index":440,"title":{},"body":{"modules/AssemblyModule.html":{}}}],["assembly.species",{"_index":1947,"title":{},"body":{"entities/Species.html":{}}}],["assembly/assembly.module",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["assembly_has_location",{"_index":413,"title":{},"body":{"entities/Assembly.html":{}}}],["assemblycontroller",{"_index":430,"title":{"controllers/AssemblyController.html":{}},"body":{"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"coverage.html":{}}}],["assemblymodule",{"_index":246,"title":{"modules/AssemblyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules.html":{},"overview.html":{}}}],["assemblyservice",{"_index":437,"title":{"injectables/AssemblyService.html":{}},"body":{"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"coverage.html":{},"overview.html":{}}}],["assert",{"_index":2469,"title":{},"body":{"license.html":{}}}],["assets",{"_index":2960,"title":{},"body":{"license.html":{}}}],["assign",{"_index":2088,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["assigned",{"_index":124,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"entities/User.html":{}}}],["associated",{"_index":742,"title":{},"body":{"classes/CreateNoteDto.html":{},"license.html":{}}}],["assume",{"_index":3096,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":3130,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2904,"title":{},"body":{"license.html":{}}}],["async",{"_index":205,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["attach",{"_index":3138,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2915,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2885,"title":{},"body":{"license.html":{}}}],["audience",{"_index":1443,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["auth",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/access",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/role/admin.role.guard",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/role/curator.role.guard",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/role/master.role.guard",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/role/role.guard",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/role/user.role.guard",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":2219,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":444,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":247,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":676,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["authorization",{"_index":2833,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1319,"title":{},"body":{"injectables/GeneService.html":{},"license.html":{}}}],["authorizes",{"_index":2984,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3027,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2893,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":454,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":982,"title":{},"body":{"entities/Gene.html":{}}}],["autoloadentities",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["automatic",{"_index":2952,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":2635,"title":{},"body":{"license.html":{}}}],["available",{"_index":2482,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":228,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["away",{"_index":2446,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2343,"title":{},"body":{"index.html":{}}}],["b",{"_index":734,"title":{},"body":{"classes/CreateNameDto.html":{},"license.html":{}}}],["backers",{"_index":2399,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":803,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["badrequestexception('admin",{"_index":823,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["badrequestexception('external",{"_index":950,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["badrequestexception('locus",{"_index":1550,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["badrequestexception('name",{"_index":1700,"title":{},"body":{"injectables/NameService.html":{}}}],["badrequestexception('note",{"_index":1757,"title":{},"body":{"injectables/NoteService.html":{}}}],["badrequestexception('one",{"_index":834,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["badrequestexception('symbol",{"_index":2022,"title":{},"body":{"injectables/SymbolService.html":{}}}],["based",{"_index":212,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["baseurl",{"_index":1817,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["basic",{"_index":2285,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["basicstatus",{"_index":625,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"miscellaneous/enumerations.html":{}}}],["basicstatus.internal",{"_index":1117,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["bcrypt",{"_index":551,"title":{},"body":{"injectables/BcryptProvider.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.tostring",{"_index":574,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.gensalt",{"_index":572,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.hash(data.tostring",{"_index":573,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcryptprovider",{"_index":530,"title":{"injectables/BcryptProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["become",{"_index":2481,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":2497,"title":{},"body":{"license.html":{}}}],["before",{"_index":1025,"title":{},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{}}}],["behalf",{"_index":2659,"title":{},"body":{"license.html":{}}}],["being",{"_index":692,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"license.html":{}}}],["believe",{"_index":3019,"title":{},"body":{"license.html":{}}}],["belong",{"_index":1949,"title":{},"body":{"entities/Species.html":{}}}],["belongs",{"_index":728,"title":{},"body":{"classes/CreateLocusTypeDto.html":{},"classes/CreateXrefDto.html":{}}}],["below",{"_index":2666,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":2476,"title":{},"body":{"license.html":{}}}],["best",{"_index":3135,"title":{},"body":{"license.html":{}}}],["better",{"_index":3156,"title":{},"body":{"license.html":{}}}],["between",{"_index":2632,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":2748,"title":{},"body":{"license.html":{}}}],["biotype",{"_index":1554,"title":{},"body":{"entities/LocusType.html":{}}}],["bleow",{"_index":1787,"title":{},"body":{"classes/PaginationDto.html":{}}}],["blog",{"_index":1618,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["board",{"_index":2391,"title":{},"body":{"index.html":{}}}],["body",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{},"license.html":{}}}],["bool",{"_index":2041,"title":{},"body":{"entities/User.html":{}}}],["boolean",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"entities/Assembly.html":{},"classes/CreateUserDto.html":{},"injectables/SignInProvider.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1426,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{},"license.html":{}}}],["browse",{"_index":3165,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3163,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":557,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["building",{"_index":2305,"title":{},"body":{"index.html":{}}}],["business",{"_index":1309,"title":{},"body":{"injectables/GeneService.html":{},"license.html":{}}}],["c",{"_index":2420,"title":{},"body":{"license.html":{}}}],["call",{"_index":873,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"entities/LocusType.html":{}}}],["called",{"_index":2503,"title":{},"body":{"license.html":{}}}],["callhandler",{"_index":869,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["canactivate",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["canactivate(context",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["carry",{"_index":2720,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":1478,"title":{},"body":{"entities/Location.html":{},"injectables/NameService.html":{},"entities/Role.html":{},"injectables/SymbolService.html":{}}}],["case",{"_index":2442,"title":{},"body":{"license.html":{}}}],["cases",{"_index":2496,"title":{},"body":{"license.html":{}}}],["catch",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["catch((err",{"_index":1902,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cause",{"_index":822,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["cease",{"_index":2919,"title":{},"body":{"license.html":{}}}],["certain",{"_index":2874,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":2932,"title":{},"body":{"license.html":{}}}],["change",{"_index":2449,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1024,"title":{},"body":{"entities/Gene.html":{}}}],["changing",{"_index":2433,"title":{},"body":{"license.html":{}}}],["channel",{"_index":2367,"title":{},"body":{"index.html":{}}}],["character",{"_index":781,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["character'})@apiproperty({description",{"_index":187,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["characterized",{"_index":2847,"title":{},"body":{"license.html":{}}}],["characters",{"_index":181,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"entities/Assembly.html":{},"classes/CreateUserDto.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/Name.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{}}}],["charge",{"_index":2459,"title":{},"body":{"license.html":{}}}],["check",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CreateUserProvider.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"index.html":{}}}],["checking",{"_index":855,"title":{},"body":{"injectables/CuratorRoleGuard.html":{}}}],["choose",{"_index":3079,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":3084,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":2664,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":2672,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3129,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2974,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2986,"title":{},"body":{"license.html":{}}}],["class",{"_index":74,"title":{"classes/AdminCreateUserDto.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":131,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"classes/PaginationDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":2107,"title":{},"body":{"controllers/UserController.html":{}}}],["clear",{"_index":2788,"title":{},"body":{"license.html":{}}}],["clicks",{"_index":2353,"title":{},"body":{"index.html":{}}}],["closely",{"_index":3125,"title":{},"body":{"license.html":{}}}],["cloud",{"_index":2338,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_assemblymodule",{"_index":435,"title":{},"body":{"modules/AssemblyModule.html":{},"overview.html":{}}}],["cluster_assemblymodule_providers",{"_index":436,"title":{},"body":{"modules/AssemblyModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_externalresourcemodule",{"_index":929,"title":{},"body":{"modules/ExternalResourceModule.html":{},"overview.html":{}}}],["cluster_externalresourcemodule_exports",{"_index":930,"title":{},"body":{"modules/ExternalResourceModule.html":{},"overview.html":{}}}],["cluster_externalresourcemodule_providers",{"_index":931,"title":{},"body":{"modules/ExternalResourceModule.html":{},"overview.html":{}}}],["cluster_genelocustypemodule",{"_index":1132,"title":{},"body":{"modules/GeneLocusTypeModule.html":{},"overview.html":{}}}],["cluster_genelocustypemodule_imports",{"_index":1133,"title":{},"body":{"modules/GeneLocusTypeModule.html":{}}}],["cluster_genelocustypemodule_providers",{"_index":1134,"title":{},"body":{"modules/GeneLocusTypeModule.html":{},"overview.html":{}}}],["cluster_genemodule",{"_index":1154,"title":{},"body":{"modules/GeneModule.html":{},"overview.html":{}}}],["cluster_genemodule_exports",{"_index":1155,"title":{},"body":{"modules/GeneModule.html":{},"overview.html":{}}}],["cluster_genemodule_imports",{"_index":1157,"title":{},"body":{"modules/GeneModule.html":{}}}],["cluster_genemodule_providers",{"_index":1156,"title":{},"body":{"modules/GeneModule.html":{},"overview.html":{}}}],["cluster_genenamemodule",{"_index":1193,"title":{},"body":{"modules/GeneNameModule.html":{},"overview.html":{}}}],["cluster_genenamemodule_imports",{"_index":1194,"title":{},"body":{"modules/GeneNameModule.html":{}}}],["cluster_genenamemodule_providers",{"_index":1195,"title":{},"body":{"modules/GeneNameModule.html":{},"overview.html":{}}}],["cluster_genenotemodule",{"_index":1247,"title":{},"body":{"modules/GeneNoteModule.html":{},"overview.html":{}}}],["cluster_genenotemodule_imports",{"_index":1248,"title":{},"body":{"modules/GeneNoteModule.html":{}}}],["cluster_genenotemodule_providers",{"_index":1249,"title":{},"body":{"modules/GeneNoteModule.html":{},"overview.html":{}}}],["cluster_genereplacementmodule",{"_index":1291,"title":{},"body":{"modules/GeneReplacementModule.html":{},"overview.html":{}}}],["cluster_genereplacementmodule_imports",{"_index":1293,"title":{},"body":{"modules/GeneReplacementModule.html":{}}}],["cluster_genereplacementmodule_providers",{"_index":1292,"title":{},"body":{"modules/GeneReplacementModule.html":{},"overview.html":{}}}],["cluster_genesymbolmodule",{"_index":1349,"title":{},"body":{"modules/GeneSymbolModule.html":{},"overview.html":{}}}],["cluster_genesymbolmodule_imports",{"_index":1350,"title":{},"body":{"modules/GeneSymbolModule.html":{}}}],["cluster_genesymbolmodule_providers",{"_index":1351,"title":{},"body":{"modules/GeneSymbolModule.html":{},"overview.html":{}}}],["cluster_genexrefmodule",{"_index":1398,"title":{},"body":{"modules/GeneXrefModule.html":{},"overview.html":{}}}],["cluster_genexrefmodule_imports",{"_index":1399,"title":{},"body":{"modules/GeneXrefModule.html":{}}}],["cluster_genexrefmodule_providers",{"_index":1400,"title":{},"body":{"modules/GeneXrefModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":1497,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_providers",{"_index":1498,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locusgroupmodule",{"_index":1534,"title":{},"body":{"modules/LocusGroupModule.html":{},"overview.html":{}}}],["cluster_locusgroupmodule_exports",{"_index":1535,"title":{},"body":{"modules/LocusGroupModule.html":{},"overview.html":{}}}],["cluster_locusgroupmodule_providers",{"_index":1536,"title":{},"body":{"modules/LocusGroupModule.html":{},"overview.html":{}}}],["cluster_locustypemodule",{"_index":1569,"title":{},"body":{"modules/LocusTypeModule.html":{},"overview.html":{}}}],["cluster_locustypemodule_exports",{"_index":1570,"title":{},"body":{"modules/LocusTypeModule.html":{},"overview.html":{}}}],["cluster_locustypemodule_imports",{"_index":1572,"title":{},"body":{"modules/LocusTypeModule.html":{}}}],["cluster_locustypemodule_providers",{"_index":1571,"title":{},"body":{"modules/LocusTypeModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1588,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":1589,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1590,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_namemodule",{"_index":1675,"title":{},"body":{"modules/NameModule.html":{},"overview.html":{}}}],["cluster_namemodule_exports",{"_index":1677,"title":{},"body":{"modules/NameModule.html":{},"overview.html":{}}}],["cluster_namemodule_imports",{"_index":1676,"title":{},"body":{"modules/NameModule.html":{}}}],["cluster_namemodule_providers",{"_index":1678,"title":{},"body":{"modules/NameModule.html":{},"overview.html":{}}}],["cluster_notemodule",{"_index":1734,"title":{},"body":{"modules/NoteModule.html":{},"overview.html":{}}}],["cluster_notemodule_exports",{"_index":1735,"title":{},"body":{"modules/NoteModule.html":{},"overview.html":{}}}],["cluster_notemodule_imports",{"_index":1737,"title":{},"body":{"modules/NoteModule.html":{}}}],["cluster_notemodule_providers",{"_index":1736,"title":{},"body":{"modules/NoteModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":1791,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":1793,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_providers",{"_index":1792,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1904,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1905,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1906,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_speciesmodule",{"_index":1961,"title":{},"body":{"modules/SpeciesModule.html":{},"overview.html":{}}}],["cluster_speciesmodule_exports",{"_index":1963,"title":{},"body":{"modules/SpeciesModule.html":{},"overview.html":{}}}],["cluster_speciesmodule_providers",{"_index":1962,"title":{},"body":{"modules/SpeciesModule.html":{},"overview.html":{}}}],["cluster_symbolmodule",{"_index":2000,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_exports",{"_index":2002,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_imports",{"_index":2001,"title":{},"body":{"modules/SymbolModule.html":{}}}],["cluster_symbolmodule_providers",{"_index":2003,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2123,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2125,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2124,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2126,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_xrefmodule",{"_index":2188,"title":{},"body":{"modules/XrefModule.html":{},"overview.html":{}}}],["cluster_xrefmodule_exports",{"_index":2190,"title":{},"body":{"modules/XrefModule.html":{},"overview.html":{}}}],["cluster_xrefmodule_imports",{"_index":2189,"title":{},"body":{"modules/XrefModule.html":{}}}],["cluster_xrefmodule_providers",{"_index":2191,"title":{},"body":{"modules/XrefModule.html":{},"overview.html":{}}}],["code",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["coding",{"_index":723,"title":{},"body":{"classes/CreateLocusGroupDto.html":{}}}],["collect",{"_index":3055,"title":{},"body":{"license.html":{}}}],["column",{"_index":423,"title":{},"body":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["column({type",{"_index":394,"title":{},"body":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["combine",{"_index":3067,"title":{},"body":{"license.html":{}}}],["combined",{"_index":2742,"title":{},"body":{"license.html":{}}}],["come",{"_index":2359,"title":{},"body":{"index.html":{},"license.html":{}}}],["comes",{"_index":2727,"title":{},"body":{"license.html":{}}}],["commands",{"_index":2580,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2827,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3001,"title":{},"body":{"license.html":{}}}],["common",{"_index":1951,"title":{},"body":{"entities/Species.html":{},"license.html":{}}}],["common/interceptor/data",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pagination/pagination.module",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["commonname",{"_index":1945,"title":{},"body":{"entities/Species.html":{}}}],["communication",{"_index":2630,"title":{},"body":{"license.html":{}}}],["community",{"_index":2441,"title":{},"body":{"license.html":{}}}],["compare",{"_index":562,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{}}}],["comparepassword",{"_index":554,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparepassword(data",{"_index":556,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["compares",{"_index":560,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparison",{"_index":1932,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["compilation",{"_index":2737,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2747,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3037,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":2610,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":2956,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2656,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":2601,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2550,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":3074,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":3031,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2515,"title":{},"body":{"license.html":{}}}],["config",{"_index":1610,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.mailhost",{"_index":1612,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtppassword",{"_index":1617,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtpusername",{"_index":1615,"title":{},"body":{"modules/MailModule.html":{}}}],["config/app.config",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["config/environment.validation",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":538,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["config/profile.config",{"_index":2134,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["configmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(profileconfig",{"_index":2136,"title":{},"body":{"modules/UserModule.html":{}}}],["configmodule.forroot",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"modules/MailModule.html":{}}}],["configservice.get('database.autoloadentities",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.namingstrategy",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.synchronize",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.user",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{}}}],["configuration",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{},"miscellaneous/variables.html":{}}}],["configures",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":667,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{}}}],["conflictexception(error",{"_index":680,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{}}}],["connected",{"_index":1480,"title":{},"body":{"entities/Location.html":{}}}],["connection",{"_index":3021,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":2944,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3106,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2906,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2993,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":2703,"title":{},"body":{"license.html":{}}}],["const",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2646,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["constructor(configservice",{"_index":866,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["constructor(externalresourcerepository",{"_index":937,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["constructor(extresservice",{"_index":2195,"title":{},"body":{"injectables/XrefService.html":{}}}],["constructor(generepository",{"_index":1312,"title":{},"body":{"injectables/GeneService.html":{}}}],["constructor(jwtservice",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["constructor(locusgrouprepository",{"_index":1541,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["constructor(locusgroupservice",{"_index":1574,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["constructor(mailerservice",{"_index":1627,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(namerepository",{"_index":1684,"title":{},"body":{"injectables/NameService.html":{}}}],["constructor(noterepository",{"_index":1741,"title":{},"body":{"injectables/NoteService.html":{}}}],["constructor(private",{"_index":512,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"injectables/MailService.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{}}}],["constructor(public",{"_index":2184,"title":{},"body":{"controllers/XrefController.html":{}}}],["constructor(reflector",{"_index":1874,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(request",{"_index":1800,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["constructor(rolerepository",{"_index":1913,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(signinprovider",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(speciesrepository",{"_index":1971,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["constructor(symbolrepository",{"_index":2009,"title":{},"body":{"injectables/SymbolService.html":{}}}],["constructor(userrepository",{"_index":790,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":660,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/SignInProvider.html":{}}}],["constructs",{"_index":794,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["construed",{"_index":3042,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2808,"title":{},"body":{"license.html":{}}}],["contact",{"_index":3149,"title":{},"body":{"license.html":{}}}],["contain",{"_index":3038,"title":{},"body":{"license.html":{}}}],["containing",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"license.html":{}}}],["contains",{"_index":2908,"title":{},"body":{"license.html":{}}}],["content",{"_index":1859,"title":{},"body":{"controllers/RoleController.html":{},"license.html":{}}}],["contents",{"_index":2997,"title":{},"body":{"license.html":{}}}],["context",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"license.html":{}}}],["context.getclass",{"_index":1895,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":1894,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["continue",{"_index":2853,"title":{},"body":{"license.html":{}}}],["continued",{"_index":2837,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":2903,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3049,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2450,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2983,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2985,"title":{},"body":{"license.html":{}}}],["control",{"_index":2616,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2988,"title":{},"body":{"license.html":{}}}],["controller",{"_index":429,"title":{"controllers/AssemblyController.html":{},"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocationController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SpeciesController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}},"body":{"controllers/AssemblyController.html":{},"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocationController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SpeciesController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{},"coverage.html":{}}}],["controller('assembly",{"_index":434,"title":{},"body":{"controllers/AssemblyController.html":{}}}],["controller('auth",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('external",{"_index":921,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["controller('gene",{"_index":1071,"title":{},"body":{"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{}}}],["controller('location",{"_index":1496,"title":{},"body":{"controllers/LocationController.html":{}}}],["controller('locus",{"_index":1530,"title":{},"body":{"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{}}}],["controller('name",{"_index":1665,"title":{},"body":{"controllers/NameController.html":{}}}],["controller('note",{"_index":1728,"title":{},"body":{"controllers/NoteController.html":{}}}],["controller('role",{"_index":1865,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('species",{"_index":1959,"title":{},"body":{"controllers/SpeciesController.html":{}}}],["controller('symbol",{"_index":1993,"title":{},"body":{"controllers/SymbolController.html":{}}}],["controller('user",{"_index":2110,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('xref",{"_index":2182,"title":{},"body":{"controllers/XrefController.html":{}}}],["controllers",{"_index":431,"title":{},"body":{"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["convenient",{"_index":2570,"title":{},"body":{"license.html":{}}}],["converts",{"_index":1790,"title":{},"body":{"classes/PaginationDto.html":{}}}],["convey",{"_index":2557,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3025,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2848,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":2564,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2902,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":2440,"title":{},"body":{"license.html":{}}}],["coordinate",{"_index":1484,"title":{},"body":{"entities/Location.html":{}}}],["coordsystem",{"_index":1475,"title":{},"body":{"entities/Location.html":{}}}],["copies",{"_index":2431,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2428,"title":{},"body":{"license.html":{}}}],["copying",{"_index":2516,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2435,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2419,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":2526,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":2662,"title":{},"body":{"license.html":{}}}],["correction",{"_index":3100,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":2613,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2772,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":2975,"title":{},"body":{"license.html":{}}}],["countries",{"_index":2554,"title":{},"body":{"license.html":{}}}],["country",{"_index":3015,"title":{},"body":{"license.html":{}}}],["courses",{"_index":2373,"title":{},"body":{"index.html":{}}}],["court",{"_index":3048,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3124,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3005,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2209,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["covered",{"_index":2538,"title":{},"body":{"license.html":{}}}],["create",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["create(@body",{"_index":1868,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(createexternalresourcedto",{"_index":940,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["create(creategenedto",{"_index":665,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneService.html":{}}}],["create(creategenelocustypedto",{"_index":1144,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["create(creategenenamedto",{"_index":1204,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["create(creategenenotedto",{"_index":1235,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["create(creategenereplacementdto",{"_index":1300,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["create(creategenesymboldto",{"_index":1360,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["create(creategenexrefdto",{"_index":1409,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["create(createlocusgroupdto",{"_index":1544,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["create(createlocustypedto",{"_index":1577,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["create(createnamedto",{"_index":1687,"title":{},"body":{"injectables/NameService.html":{}}}],["create(createnotedto",{"_index":1744,"title":{},"body":{"injectables/NoteService.html":{}}}],["create(createroledto",{"_index":1857,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["create(createsymboldto",{"_index":2012,"title":{},"body":{"injectables/SymbolService.html":{}}}],["create(createxrefdto",{"_index":2199,"title":{},"body":{"injectables/XrefService.html":{}}}],["created",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateGeneProvider.html":{},"controllers/ExternalResourceController.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["created.'})@apibadrequestresponse({description",{"_index":904,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["created.'})@apibearerauth",{"_index":1056,"title":{},"body":{"controllers/GeneController.html":{}}}],["created.'})@role(roletypes.curator)@apibearerauth()@post('locus",{"_index":1124,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["created.'})@role(roletypes.curator)@apibearerauth()@post('name",{"_index":1186,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["created.'})@role(roletypes.curator)@apibearerauth()@post('replace",{"_index":1283,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["created.'})@role(roletypes.curator)@apibearerauth()@post('symbol",{"_index":1342,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["created.'})@role(roletypes.curator)@post('xref')@apibearerauth",{"_index":1390,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["createdate",{"_index":968,"title":{},"body":{"entities/Gene.html":{}}}],["createdatecolumn",{"_index":979,"title":{},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["createexternalresourcedto",{"_index":575,"title":{"classes/CreateExternalResourceDto.html":{}},"body":{"classes/CreateExternalResourceDto.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"coverage.html":{}}}],["creategene",{"_index":1051,"title":{},"body":{"controllers/GeneController.html":{}}}],["creategene(creategenedto",{"_index":1053,"title":{},"body":{"controllers/GeneController.html":{}}}],["creategenedto",{"_index":584,"title":{"classes/CreateGeneDto.html":{}},"body":{"classes/CreateGeneDto.html":{},"injectables/CreateGeneProvider.html":{},"controllers/GeneController.html":{},"injectables/GeneService.html":{},"coverage.html":{}}}],["creategenedto.speciesscientificname",{"_index":679,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["creategenelocustype",{"_index":1120,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["creategenelocustype(creategenelocustypedto",{"_index":1121,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["creategenelocustypedto",{"_index":616,"title":{"classes/CreateGeneLocusTypeDto.html":{}},"body":{"classes/CreateGeneLocusTypeDto.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"coverage.html":{}}}],["creategenelocustypedto.locustypeid",{"_index":1150,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["creategenelocustypedto.status",{"_index":1152,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["creategenename",{"_index":1183,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["creategenename(creategenenamedto",{"_index":1184,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["creategenenamedto",{"_index":633,"title":{"classes/CreateGeneNameDto.html":{}},"body":{"classes/CreateGeneNameDto.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"coverage.html":{}}}],["creategenenamedto.gene",{"_index":1208,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["creategenenamedto.name",{"_index":1210,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["creategenenamedto.status",{"_index":1214,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["creategenenamedto.type",{"_index":1213,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["creategenenotedto",{"_index":649,"title":{"classes/CreateGeneNoteDto.html":{}},"body":{"classes/CreateGeneNoteDto.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"coverage.html":{}}}],["creategenenotedto.status",{"_index":1245,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["creategeneprovider",{"_index":657,"title":{"injectables/CreateGeneProvider.html":{}},"body":{"injectables/CreateGeneProvider.html":{},"modules/GeneModule.html":{},"injectables/GeneService.html":{},"coverage.html":{},"overview.html":{}}}],["creategenereplacement",{"_index":1280,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["creategenereplacement(creategenereplacementdto",{"_index":1281,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["creategenereplacementdto",{"_index":686,"title":{"classes/CreateGeneReplacementDto.html":{}},"body":{"classes/CreateGeneReplacementDto.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"coverage.html":{}}}],["creategenereplacementdto.previousid",{"_index":1304,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["creategenereplacementdto.replacementid",{"_index":1305,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["creategenesymbol",{"_index":1339,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["creategenesymbol(creategenesymboldto",{"_index":1340,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["creategenesymboldto",{"_index":699,"title":{"classes/CreateGeneSymbolDto.html":{}},"body":{"classes/CreateGeneSymbolDto.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"coverage.html":{}}}],["creategenesymboldto.status",{"_index":1368,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["creategenesymboldto.type",{"_index":1367,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["creategenexref",{"_index":1387,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["creategenexref(creategenexrefdto",{"_index":1388,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["creategenexrefdto",{"_index":707,"title":{"classes/CreateGeneXrefDto.html":{}},"body":{"classes/CreateGeneXrefDto.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"coverage.html":{}}}],["creategenexrefdto.source",{"_index":1416,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["creategenexrefdto.status",{"_index":1417,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["createlocusgroup",{"_index":896,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{}}}],["createlocusgroup(createexternalresourcedto",{"_index":898,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["createlocusgroup(createlocusgroupdto",{"_index":1522,"title":{},"body":{"controllers/LocusGroupController.html":{}}}],["createlocusgroupdto",{"_index":717,"title":{"classes/CreateLocusGroupDto.html":{}},"body":{"classes/CreateLocusGroupDto.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"coverage.html":{}}}],["createlocustype",{"_index":1562,"title":{},"body":{"controllers/LocusTypeController.html":{},"controllers/XrefController.html":{}}}],["createlocustype(@body",{"_index":2185,"title":{},"body":{"controllers/XrefController.html":{}}}],["createlocustype(createlocustypedto",{"_index":1563,"title":{},"body":{"controllers/LocusTypeController.html":{}}}],["createlocustype(createxrefdto",{"_index":2176,"title":{},"body":{"controllers/XrefController.html":{}}}],["createlocustypedto",{"_index":725,"title":{"classes/CreateLocusTypeDto.html":{}},"body":{"classes/CreateLocusTypeDto.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["createlocustypedto.groupid",{"_index":1583,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["createlocustypedto.name",{"_index":1585,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["createname",{"_index":1652,"title":{},"body":{"controllers/NameController.html":{}}}],["createname(@body",{"_index":1673,"title":{},"body":{"controllers/NameController.html":{}}}],["createname(createnamedto",{"_index":1654,"title":{},"body":{"controllers/NameController.html":{}}}],["createnamedto",{"_index":732,"title":{"classes/CreateNameDto.html":{}},"body":{"classes/CreateNameDto.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"coverage.html":{}}}],["createnote",{"_index":1721,"title":{},"body":{"controllers/NoteController.html":{}}}],["createnote(@body",{"_index":1732,"title":{},"body":{"controllers/NoteController.html":{}}}],["createnote(createnotedto",{"_index":1723,"title":{},"body":{"controllers/NoteController.html":{}}}],["createnotedto",{"_index":740,"title":{"classes/CreateNoteDto.html":{}},"body":{"classes/CreateNoteDto.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createroledto",{"_index":746,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["creates",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneNameController.html":{},"controllers/LocusGroupController.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/RoleController.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["createsymbol",{"_index":1987,"title":{},"body":{"controllers/SymbolController.html":{}}}],["createsymbol(createsymboldto",{"_index":1989,"title":{},"body":{"controllers/SymbolController.html":{}}}],["createsymboldto",{"_index":751,"title":{"classes/CreateSymbolDto.html":{}},"body":{"classes/CreateSymbolDto.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"coverage.html":{}}}],["createuser",{"_index":788,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":2118,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":799,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserasadmin",{"_index":2143,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserasadmin(createuserdto",{"_index":2148,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":139,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":814,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["createuserdto.roles.length",{"_index":832,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["createuserdto:28",{"_index":163,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["createuserdto:41",{"_index":169,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["createuserdto:54",{"_index":172,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["createuserdto:66",{"_index":166,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["createuserdto:86",{"_index":189,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["createuserdto:97",{"_index":157,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["createuserprovider",{"_index":782,"title":{"injectables/CreateUserProvider.html":{}},"body":{"injectables/CreateUserProvider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["createuserwithrole",{"_index":789,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["createuserwithrole(createuserdto",{"_index":801,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["createxrefdto",{"_index":845,"title":{"classes/CreateXrefDto.html":{}},"body":{"classes/CreateXrefDto.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["createxrefdto.displayid",{"_index":2206,"title":{},"body":{"injectables/XrefService.html":{}}}],["creating",{"_index":137,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateGeneDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/RoleController.html":{}}}],["creation",{"_index":684,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"controllers/RoleController.html":{}}}],["creation'})@post",{"_index":1861,"title":{},"body":{"controllers/RoleController.html":{}}}],["creationdate",{"_index":1100,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["creator",{"_index":682,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneSymbol.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"injectables/GeneXrefService.html":{}}}],["credentials",{"_index":498,"title":{},"body":{"controllers/AuthController.html":{}}}],["criterion",{"_index":2585,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2177,"title":{},"body":{"controllers/XrefController.html":{},"license.html":{}}}],["ctx",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curator",{"_index":713,"title":{},"body":{"classes/CreateGeneXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/GeneController.html":{},"entities/GeneXref.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"guards/RoleGuard.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{},"miscellaneous/enumerations.html":{}}}],["curator.role.guard",{"_index":1880,"title":{},"body":{"guards/RoleGuard.html":{}}}],["curatorroleguard",{"_index":269,"title":{"injectables/CuratorRoleGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/CuratorRoleGuard.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"overview.html":{}}}],["cure",{"_index":2935,"title":{},"body":{"license.html":{}}}],["current",{"_index":140,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"entities/Assembly.html":{},"classes/CreateUserDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["currentpage",{"_index":1772,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["custom",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customarily",{"_index":2763,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3063,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2769,"title":{},"body":{"license.html":{}}}],["d",{"_index":2736,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3104,"title":{},"body":{"license.html":{}}}],["data",{"_index":134,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateGeneDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateNameDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GeneService.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"license.html":{}}}],["database",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateGeneProvider.html":{},"entities/Gene.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{},"entities/User.html":{}}}],["databaseconfig",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["dataresponseinterceptor",{"_index":299,"title":{"injectables/DataResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["date",{"_index":978,"title":{},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"license.html":{}}}],["days",{"_index":2931,"title":{},"body":{"license.html":{}}}],["db",{"_index":592,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["december",{"_index":2685,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3081,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["declining",{"_index":2894,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorator",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":145,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"entities/Assembly.html":{},"controllers/AuthController.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"classes/GetUserParamsDto.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"classes/PaginationDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{}}}],["deemed",{"_index":2674,"title":{},"body":{"license.html":{}}}],["deeper",{"_index":2369,"title":{},"body":{"index.html":{}}}],["default",{"_index":396,"title":{},"body":{"entities/Assembly.html":{},"injectables/CreateUserProvider.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"modules/MailModule.html":{},"classes/PaginationDto.html":{},"entities/Role.html":{},"guards/RoleGuard.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaultroletype",{"_index":1872,"title":{},"body":{"guards/RoleGuard.html":{}}}],["defective",{"_index":3095,"title":{},"body":{"license.html":{}}}],["defending",{"_index":2477,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3045,"title":{},"body":{"license.html":{}}}],["defined",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"entities/Assembly.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["defines",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"classes/PaginationDto.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":387,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{},"entities/Species.html":{},"license.html":{}}}],["definitions",{"_index":2519,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1692,"title":{},"body":{"injectables/NameService.html":{},"injectables/NoteService.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{}}}],["delete('forget",{"_index":2120,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(roleid",{"_index":1917,"title":{},"body":{"injectables/RoleService.html":{}}}],["deletebyid",{"_index":1682,"title":{},"body":{"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["deletebyid(nameid",{"_index":1689,"title":{},"body":{"injectables/NameService.html":{}}}],["deletebyid(noteid",{"_index":1746,"title":{},"body":{"injectables/NoteService.html":{}}}],["deletebyid(symbolid",{"_index":2014,"title":{},"body":{"injectables/SymbolService.html":{}}}],["deletebyname(name",{"_index":1710,"title":{},"body":{"injectables/NameService.html":{}}}],["deletebysymbol(symbol",{"_index":2029,"title":{},"body":{"injectables/SymbolService.html":{}}}],["deleted",{"_index":1032,"title":{},"body":{"entities/Gene.html":{},"controllers/UserController.html":{}}}],["deletedatecolumn",{"_index":1029,"title":{},"body":{"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["deletes",{"_index":1691,"title":{},"body":{"injectables/NameService.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{}}}],["deleteself",{"_index":2084,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteself(@activeuser",{"_index":2121,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteself(user",{"_index":2098,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleting",{"_index":1856,"title":{},"body":{"controllers/RoleController.html":{}}}],["denied",{"_index":2854,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3002,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":237,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2330,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2342,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2336,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":2352,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":3011,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":1483,"title":{},"body":{"entities/Location.html":{}}}],["designated",{"_index":2780,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2439,"title":{},"body":{"license.html":{}}}],["detail",{"_index":3072,"title":{},"body":{"license.html":{}}}],["details",{"_index":3148,"title":{},"body":{"license.html":{}}}],["determine",{"_index":210,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["determining",{"_index":2817,"title":{},"body":{"license.html":{}}}],["dev",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["develop",{"_index":3133,"title":{},"body":{"license.html":{}}}],["developers",{"_index":2467,"title":{},"body":{"license.html":{}}}],["development",{"_index":2317,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2378,"title":{},"body":{"index.html":{}}}],["differ",{"_index":3071,"title":{},"body":{"license.html":{}}}],["different",{"_index":2508,"title":{},"body":{"license.html":{}}}],["differently",{"_index":2882,"title":{},"body":{"license.html":{}}}],["dir",{"_index":1619,"title":{},"body":{"modules/MailModule.html":{}}}],["direction",{"_index":2660,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2789,"title":{},"body":{"license.html":{}}}],["directly",{"_index":2542,"title":{},"body":{"license.html":{}}}],["disable",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{}}}],["disclaim",{"_index":2696,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3085,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2879,"title":{},"body":{"license.html":{}}}],["discord",{"_index":2366,"title":{},"body":{"index.html":{}}}],["discriminatory",{"_index":3028,"title":{},"body":{"license.html":{}}}],["disease",{"_index":744,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["display",{"_index":160,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"license.html":{}}}],["displayed",{"_index":2886,"title":{},"body":{"license.html":{}}}],["displayid",{"_index":847,"title":{},"body":{"classes/CreateXrefDto.html":{},"entities/Xref.html":{},"injectables/XrefService.html":{}}}],["displayname",{"_index":141,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["displays",{"_index":2566,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":3075,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2429,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3144,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3032,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2517,"title":{},"body":{"license.html":{}}}],["dive",{"_index":2368,"title":{},"body":{"index.html":{}}}],["document",{"_index":2432,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["documented",{"_index":2862,"title":{},"body":{"license.html":{}}}],["doe",{"_index":162,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["dotenv",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["doubtful",{"_index":2819,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":2954,"title":{},"body":{"license.html":{}}}],["dto",{"_index":1460,"title":{},"body":{"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{}}}],["dto/admin",{"_index":804,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/create",{"_index":670,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["dto/get",{"_index":2156,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/pagination.dto",{"_index":1808,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["dto/refresh",{"_index":502,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{}}}],["dto/signin.dto",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["durable",{"_index":2762,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":2816,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":2625,"title":{},"body":{"license.html":{}}}],["e",{"_index":2796,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":596,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["e2e",{"_index":2325,"title":{},"body":{"index.html":{}}}],["each",{"_index":147,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"license.html":{}}}],["eager",{"_index":411,"title":{},"body":{"entities/Assembly.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/LocusType.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["earlier",{"_index":2537,"title":{},"body":{"license.html":{}}}],["edited",{"_index":990,"title":{},"body":{"entities/Gene.html":{},"entities/User.html":{}}}],["editor",{"_index":969,"title":{},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"injectables/GeneReplacementService.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["effect",{"_index":3121,"title":{},"body":{"license.html":{}}}],["effected",{"_index":2693,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2675,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3140,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2306,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":2334,"title":{},"body":{"index.html":{}}}],["efforts",{"_index":2968,"title":{},"body":{"license.html":{}}}],["eight",{"_index":180,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["ejs",{"_index":1597,"title":{},"body":{"modules/MailModule.html":{},"dependencies.html":{}}}],["ejsadapter",{"_index":1607,"title":{},"body":{"modules/MailModule.html":{}}}],["electronic",{"_index":3150,"title":{},"body":{"license.html":{}}}],["email",{"_index":119,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/SigninDto.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["email.provider",{"_index":2131,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["email.provider.ts",{"_index":954,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["email.provider.ts:14",{"_index":957,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["email.provider.ts:34",{"_index":960,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["emails",{"_index":798,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["embodied",{"_index":2758,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3158,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1517,"title":{},"body":{"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"injectables/NameService.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{},"entities/Symbol.html":{},"injectables/SymbolService.html":{}}}],["enable",{"_index":2603,"title":{},"body":{"license.html":{}}}],["enableimplicitconversion",{"_index":1786,"title":{},"body":{"classes/PaginationDto.html":{}}}],["enables",{"_index":2559,"title":{},"body":{"license.html":{}}}],["encouraged",{"_index":2485,"title":{},"body":{"license.html":{}}}],["encrypted",{"_index":558,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["end",{"_index":3132,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{}}}],["enforce",{"_index":3003,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":2699,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1599,"title":{},"body":{"modules/MailModule.html":{}}}],["ensure",{"_index":2332,"title":{},"body":{"index.html":{},"license.html":{}}}],["entered",{"_index":3039,"title":{},"body":{"license.html":{}}}],["enterprise",{"_index":2382,"title":{},"body":{"index.html":{}}}],["entire",{"_index":2725,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3057,"title":{},"body":{"license.html":{}}}],["entities",{"_index":385,"title":{},"body":{"entities/Assembly.html":{},"injectables/CreateUserProvider.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{},"overview.html":{}}}],["entity",{"_index":383,"title":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}},"body":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"injectables/GenerateTokensProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{},"coverage.html":{},"license.html":{}}}],["entry",{"_index":981,"title":{},"body":{"entities/Gene.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":198,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateRoleDto.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Role.html":{},"miscellaneous/enumerations.html":{}}}],["enum/gene",{"_index":612,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Gene.html":{}}}],["enum/role",{"_index":508,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateRoleDto.html":{},"entities/Role.html":{}}}],["enumerations",{"_index":2276,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environmentvalidation",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalent",{"_index":595,"title":{},"body":{"classes/CreateGeneDto.html":{},"license.html":{}}}],["err",{"_index":1903,"title":{},"body":{"guards/RoleGuard.html":{}}}],["error",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["eslint",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{}}}],["eslint/no",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{}}}],["essential",{"_index":2606,"title":{},"body":{"license.html":{}}}],["etc",{"_index":610,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["even",{"_index":3116,"title":{},"body":{"license.html":{}}}],["event",{"_index":3102,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":2426,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2536,"title":{},"body":{"license.html":{}}}],["example",{"_index":151,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/GetUserParamsDto.html":{},"controllers/NoteController.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":2548,"title":{},"body":{"license.html":{}}}],["exception",{"_index":222,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["exceptions",{"_index":2866,"title":{},"body":{"license.html":{}}}],["exclude",{"_index":2079,"title":{},"body":{"entities/User.html":{}}}],["excluded",{"_index":2806,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3043,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":3142,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2994,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":2654,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3050,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2595,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2835,"title":{},"body":{"license.html":{}}}],["executing",{"_index":2549,"title":{},"body":{"license.html":{}}}],["execution",{"_index":214,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["executioncontext",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":2969,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2694,"title":{},"body":{"license.html":{}}}],["exist",{"_index":824,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["existinguser",{"_index":812,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["exists",{"_index":831,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{}}}],["expected",{"_index":2825,"title":{},"body":{"license.html":{}}}],["expects",{"_index":2824,"title":{},"body":{"license.html":{}}}],["experience",{"_index":2371,"title":{},"body":{"index.html":{}}}],["expiration",{"_index":1436,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["expiresin",{"_index":1433,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["explicitly",{"_index":2642,"title":{},"body":{"license.html":{}}}],["export",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{}}}],["exports",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["express",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/PaginationProvider.html":{},"injectables/UserRoleGuard.html":{},"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":3087,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2914,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3013,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1469,"title":{},"body":{"injectables/HashingProvider.html":{},"license.html":{}}}],["extends",{"_index":138,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["extensions",{"_index":2741,"title":{},"body":{"license.html":{}}}],["extent",{"_index":2569,"title":{},"body":{"license.html":{}}}],["external",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateXrefDto.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["externalresource",{"_index":884,"title":{"entities/ExternalResource.html":{}},"body":{"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"entities/Xref.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["externalresource.xrefs",{"_index":2168,"title":{},"body":{"entities/Xref.html":{}}}],["externalresourcecontroller",{"_index":894,"title":{"controllers/ExternalResourceController.html":{}},"body":{"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"coverage.html":{}}}],["externalresourcemodule",{"_index":248,"title":{"modules/ExternalResourceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExternalResourceModule.html":{},"modules/XrefModule.html":{},"modules.html":{},"overview.html":{}}}],["externalresourcerepository",{"_index":939,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["externalresourceservice",{"_index":917,"title":{"injectables/ExternalResourceService.html":{}},"body":{"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/XrefService.html":{},"coverage.html":{},"overview.html":{}}}],["extract",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["extractrequestfromheader",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extres",{"_index":2203,"title":{},"body":{"injectables/XrefService.html":{}}}],["extresourceid",{"_index":848,"title":{},"body":{"classes/CreateXrefDto.html":{}}}],["extresservice",{"_index":2198,"title":{},"body":{"injectables/XrefService.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1834,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["f",{"_index":2900,"title":{},"body":{"license.html":{}}}],["facilitating",{"_index":3064,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":2655,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2489,"title":{},"body":{"license.html":{}}}],["failed",{"_index":685,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["fails",{"_index":1318,"title":{},"body":{"injectables/GeneService.html":{},"injectables/SignInProvider.html":{},"license.html":{}}}],["failure",{"_index":3114,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2648,"title":{},"body":{"license.html":{}}}],["false",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"entities/Assembly.html":{},"injectables/BcryptProvider.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"modules/MailModule.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"injectables/SignInProvider.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/Xref.html":{}}}],["false})@exclude",{"_index":2073,"title":{},"body":{"entities/User.html":{}}}],["family",{"_index":2812,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":2535,"title":{},"body":{"license.html":{}}}],["fast",{"_index":2346,"title":{},"body":{"index.html":{}}}],["favor",{"_index":2821,"title":{},"body":{"license.html":{}}}],["feature",{"_index":2573,"title":{},"body":{"license.html":{}}}],["features",{"_index":2356,"title":{},"body":{"index.html":{}}}],["fee",{"_index":2717,"title":{},"body":{"license.html":{}}}],["fetches",{"_index":2104,"title":{},"body":{"controllers/UserController.html":{}}}],["few",{"_index":2348,"title":{},"body":{"index.html":{}}}],["field",{"_index":1078,"title":{},"body":{"entities/GeneHistory.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":2623,"title":{},"body":{"license.html":{}}}],["finally",{"_index":2925,"title":{},"body":{"license.html":{}}}],["finalresponse",{"_index":1825,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["find",{"_index":955,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/RoleService.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"license.html":{}}}],["findall",{"_index":2144,"title":{},"body":{"injectables/UserService.html":{}}}],["findall(getuserparamsdto",{"_index":2151,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":936,"title":{},"body":{"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["findbyid(id",{"_index":942,"title":{},"body":{"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["findbysciname",{"_index":1970,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["findbysciname(sciname",{"_index":1974,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["findmultiple",{"_index":1912,"title":{},"body":{"injectables/RoleService.html":{}}}],["findmultiple(roles",{"_index":1920,"title":{},"body":{"injectables/RoleService.html":{}}}],["findname",{"_index":1683,"title":{},"body":{"injectables/NameService.html":{}}}],["findname(query",{"_index":1695,"title":{},"body":{"injectables/NameService.html":{}}}],["findonebyemail",{"_index":956,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UserService.html":{}}}],["findonebyemail(email",{"_index":959,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UserService.html":{}}}],["findoneuserbyemailprovider",{"_index":952,"title":{"injectables/FindOneUserByEmailProvider.html":{}},"body":{"injectables/FindOneUserByEmailProvider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["finds",{"_index":961,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/NameService.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{}}}],["findsymbol",{"_index":2008,"title":{},"body":{"injectables/SymbolService.html":{}}}],["findsymbol(query",{"_index":2017,"title":{},"body":{"injectables/SymbolService.html":{}}}],["first",{"_index":167,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"entities/Gene.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"entities/User.html":{},"license.html":{}}}],["firstname",{"_index":142,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["fitness",{"_index":3090,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2761,"title":{},"body":{"license.html":{}}}],["flow",{"_index":2631,"title":{},"body":{"license.html":{}}}],["focus",{"_index":2355,"title":{},"body":{"index.html":{}}}],["follow",{"_index":2385,"title":{},"body":{"index.html":{},"license.html":{}}}],["following",{"_index":2998,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":2692,"title":{},"body":{"license.html":{}}}],["force",{"_index":2650,"title":{},"body":{"license.html":{}}}],["form",{"_index":2586,"title":{},"body":{"license.html":{}}}],["format",{"_index":2861,"title":{},"body":{"license.html":{}}}],["formats",{"_index":872,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatted",{"_index":876,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatting",{"_index":863,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["forms",{"_index":2752,"title":{},"body":{"license.html":{}}}],["forwardref",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CreateUserProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"modules/UserModule.html":{}}}],["found",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"injectables/GeneService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"guards/RoleGuard.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["found.'})@apiparam({name",{"_index":1659,"title":{},"body":{"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{}}}],["foundation",{"_index":2423,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2304,"title":{},"body":{"index.html":{}}}],["free",{"_index":2421,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":2447,"title":{},"body":{"license.html":{}}}],["fulfilling",{"_index":2678,"title":{},"body":{"license.html":{}}}],["full",{"_index":2381,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["functioning",{"_index":2838,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2293,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2783,"title":{},"body":{"license.html":{}}}],["future",{"_index":3082,"title":{},"body":{"license.html":{}}}],["g",{"_index":2351,"title":{},"body":{"index.html":{}}}],["genbank",{"_index":1487,"title":{},"body":{"entities/Location.html":{}}}],["genbankaccession",{"_index":388,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{}}}],["gene",{"_index":326,"title":{"entities/Gene.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateSymbolDto.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"entities/Name.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gene.controller",{"_index":1159,"title":{},"body":{"modules/GeneModule.html":{}}}],["gene.creator",{"_index":2062,"title":{},"body":{"entities/User.html":{}}}],["gene.dto",{"_index":671,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"controllers/GeneController.html":{},"injectables/GeneService.html":{}}}],["gene.dto.ts",{"_index":586,"title":{},"body":{"classes/CreateGeneDto.html":{},"coverage.html":{}}}],["gene.dto.ts:19",{"_index":607,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["gene.dto.ts:31",{"_index":594,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["gene.dto.ts:43",{"_index":602,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["gene.editor",{"_index":2064,"title":{},"body":{"entities/User.html":{}}}],["gene.entity",{"_index":669,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"controllers/GeneController.html":{},"modules/GeneModule.html":{},"injectables/GeneService.html":{}}}],["gene.genelocustypes",{"_index":1107,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["gene.genenames",{"_index":1169,"title":{},"body":{"entities/GeneName.html":{}}}],["gene.genenotes",{"_index":1224,"title":{},"body":{"entities/GeneNote.html":{}}}],["gene.genereplacements",{"_index":1276,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["gene.genereplacements)@joincolumn({name",{"_index":1265,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["gene.genesreplaced",{"_index":1277,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["gene.genesreplaced)@joincolumn({name",{"_index":1270,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["gene.genesymbols",{"_index":1326,"title":{},"body":{"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["gene.id",{"_index":1088,"title":{},"body":{"entities/GeneHistory.html":{}}}],["gene.provider",{"_index":1161,"title":{},"body":{"modules/GeneModule.html":{},"injectables/GeneService.html":{}}}],["gene.provider.ts",{"_index":659,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"coverage.html":{}}}],["gene.provider.ts:16",{"_index":664,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["gene.provider.ts:36",{"_index":666,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["gene.service",{"_index":1070,"title":{},"body":{"controllers/GeneController.html":{},"modules/GeneModule.html":{}}}],["gene.species",{"_index":1952,"title":{},"body":{"entities/Species.html":{}}}],["gene/gene.module",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["gene_has_locus_type",{"_index":1115,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["gene_has_name",{"_index":1179,"title":{},"body":{"entities/GeneName.html":{},"entities/User.html":{}}}],["gene_has_note",{"_index":1232,"title":{},"body":{"entities/GeneNote.html":{}}}],["gene_has_symbol",{"_index":1336,"title":{},"body":{"entities/GeneSymbol.html":{},"entities/User.html":{}}}],["gene_has_xref",{"_index":1384,"title":{},"body":{"entities/GeneXref.html":{}}}],["gene_replacement",{"_index":1275,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["genecontroller",{"_index":1048,"title":{"controllers/GeneController.html":{}},"body":{"controllers/GeneController.html":{},"modules/GeneModule.html":{},"coverage.html":{}}}],["genehistories",{"_index":1047,"title":{},"body":{"entities/Gene.html":{}}}],["genehistory",{"_index":1035,"title":{"entities/GeneHistory.html":{}},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"coverage.html":{}}}],["genehistory.gene",{"_index":1046,"title":{},"body":{"entities/Gene.html":{}}}],["genehistorymodule",{"_index":249,"title":{"modules/GeneHistoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneHistoryModule.html":{},"modules.html":{},"overview.html":{}}}],["geneid",{"_index":620,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["genelocustype",{"_index":991,"title":{"entities/GeneLocusType.html":{}},"body":{"entities/Gene.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusType.html":{},"coverage.html":{}}}],["genelocustype.gene",{"_index":992,"title":{},"body":{"entities/Gene.html":{}}}],["genelocustype.locustype",{"_index":1555,"title":{},"body":{"entities/LocusType.html":{}}}],["genelocustypecontroller",{"_index":1118,"title":{"controllers/GeneLocusTypeController.html":{}},"body":{"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"coverage.html":{}}}],["genelocustypemodule",{"_index":250,"title":{"modules/GeneLocusTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["genelocustyperepository",{"_index":1142,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["genelocustypes",{"_index":970,"title":{},"body":{"entities/Gene.html":{},"entities/LocusType.html":{}}}],["genelocustypeservice",{"_index":1126,"title":{"injectables/GeneLocusTypeService.html":{}},"body":{"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["genemodule",{"_index":251,"title":{"modules/GeneModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules.html":{},"overview.html":{}}}],["genename",{"_index":994,"title":{"entities/GeneName.html":{}},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/Name.html":{},"entities/User.html":{},"coverage.html":{}}}],["genename.creator",{"_index":2052,"title":{},"body":{"entities/User.html":{}}}],["genename.editor",{"_index":2054,"title":{},"body":{"entities/User.html":{}}}],["genename.gene",{"_index":995,"title":{},"body":{"entities/Gene.html":{}}}],["genename.name",{"_index":1645,"title":{},"body":{"entities/Name.html":{}}}],["genenamecontroller",{"_index":1181,"title":{"controllers/GeneNameController.html":{}},"body":{"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"coverage.html":{}}}],["genenamemodule",{"_index":252,"title":{"modules/GeneNameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneNameModule.html":{},"modules.html":{},"overview.html":{}}}],["genenamerepository",{"_index":1202,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["genenames",{"_index":971,"title":{},"body":{"entities/Gene.html":{},"entities/Name.html":{}}}],["genenamescreated",{"_index":2033,"title":{},"body":{"entities/User.html":{}}}],["genenamesedited",{"_index":2034,"title":{},"body":{"entities/User.html":{}}}],["genenameservice",{"_index":1188,"title":{"injectables/GeneNameService.html":{}},"body":{"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"coverage.html":{},"overview.html":{}}}],["genenote",{"_index":999,"title":{"entities/GeneNote.html":{}},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/Note.html":{},"entities/User.html":{},"coverage.html":{}}}],["genenote.creator",{"_index":2056,"title":{},"body":{"entities/User.html":{}}}],["genenote.editor",{"_index":2058,"title":{},"body":{"entities/User.html":{}}}],["genenote.gene",{"_index":1000,"title":{},"body":{"entities/Gene.html":{}}}],["genenote.note",{"_index":1714,"title":{},"body":{"entities/Note.html":{}}}],["genenotecontroller",{"_index":1233,"title":{"controllers/GeneNoteController.html":{}},"body":{"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"coverage.html":{}}}],["genenotemodule",{"_index":253,"title":{"modules/GeneNoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneNoteModule.html":{},"modules.html":{},"overview.html":{}}}],["genenoterepository",{"_index":1241,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["genenotes",{"_index":972,"title":{},"body":{"entities/Gene.html":{},"entities/Note.html":{}}}],["genenotescreated",{"_index":2035,"title":{},"body":{"entities/User.html":{}}}],["genenotesedited",{"_index":2036,"title":{},"body":{"entities/User.html":{}}}],["genenoteservice",{"_index":1250,"title":{"injectables/GeneNoteService.html":{}},"body":{"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"coverage.html":{},"overview.html":{}}}],["general",{"_index":2413,"title":{},"body":{"license.html":{}}}],["generally",{"_index":2621,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1839,"title":{},"body":{"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"license.html":{}}}],["generated",{"_index":983,"title":{},"body":{"entities/Gene.html":{}}}],["generates",{"_index":1431,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens",{"_index":1425,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens(user",{"_index":1429,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokensprovider",{"_index":521,"title":{"injectables/GenerateTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["generating",{"_index":1421,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["genereplacement",{"_index":1002,"title":{"entities/GeneReplacement.html":{}},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"entities/User.html":{},"coverage.html":{}}}],["genereplacement.editor",{"_index":2060,"title":{},"body":{"entities/User.html":{}}}],["genereplacement.previousgene",{"_index":1003,"title":{},"body":{"entities/Gene.html":{}}}],["genereplacement.replacementgene",{"_index":1005,"title":{},"body":{"entities/Gene.html":{}}}],["genereplacementcontroller",{"_index":1278,"title":{"controllers/GeneReplacementController.html":{}},"body":{"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"coverage.html":{}}}],["genereplacementmodule",{"_index":254,"title":{"modules/GeneReplacementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneReplacementModule.html":{},"modules.html":{},"overview.html":{}}}],["genereplacementrepository",{"_index":1298,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["genereplacements",{"_index":973,"title":{},"body":{"entities/Gene.html":{},"entities/User.html":{}}}],["genereplacementservice",{"_index":1285,"title":{"injectables/GeneReplacementService.html":{}},"body":{"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"coverage.html":{},"overview.html":{}}}],["generepository",{"_index":662,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneService.html":{}}}],["genes",{"_index":1064,"title":{},"body":{"controllers/GeneController.html":{},"entities/Species.html":{},"entities/User.html":{}}}],["genescreated",{"_index":2037,"title":{},"body":{"entities/User.html":{}}}],["genesedited",{"_index":2038,"title":{},"body":{"entities/User.html":{}}}],["geneservice",{"_index":1069,"title":{"injectables/GeneService.html":{}},"body":{"controllers/GeneController.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"coverage.html":{},"overview.html":{}}}],["genesreplaced",{"_index":974,"title":{},"body":{"entities/Gene.html":{}}}],["genestatus",{"_index":604,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Gene.html":{},"miscellaneous/enumerations.html":{}}}],["genestatus.internal",{"_index":1042,"title":{},"body":{"entities/Gene.html":{}}}],["genesymbol",{"_index":1007,"title":{"entities/GeneSymbol.html":{}},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/Symbol.html":{},"entities/User.html":{},"coverage.html":{}}}],["genesymbol.creator",{"_index":2066,"title":{},"body":{"entities/User.html":{}}}],["genesymbol.editor",{"_index":2068,"title":{},"body":{"entities/User.html":{}}}],["genesymbol.gene",{"_index":1008,"title":{},"body":{"entities/Gene.html":{}}}],["genesymbol.symbol",{"_index":1981,"title":{},"body":{"entities/Symbol.html":{}}}],["genesymbolcontroller",{"_index":1337,"title":{"controllers/GeneSymbolController.html":{}},"body":{"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"coverage.html":{}}}],["genesymbolmodule",{"_index":255,"title":{"modules/GeneSymbolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneSymbolModule.html":{},"modules.html":{},"overview.html":{}}}],["genesymbolrepository",{"_index":1358,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["genesymbols",{"_index":975,"title":{},"body":{"entities/Gene.html":{},"entities/Symbol.html":{}}}],["genesymbolscreated",{"_index":2039,"title":{},"body":{"entities/User.html":{}}}],["genesymbolsedited",{"_index":2040,"title":{},"body":{"entities/User.html":{}}}],["genesymbolservice",{"_index":1344,"title":{"injectables/GeneSymbolService.html":{}},"body":{"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"coverage.html":{},"overview.html":{}}}],["genexref",{"_index":1370,"title":{"entities/GeneXref.html":{}},"body":{"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"entities/Xref.html":{},"coverage.html":{}}}],["genexref.xref",{"_index":2170,"title":{},"body":{"entities/Xref.html":{}}}],["genexrefcontroller",{"_index":1385,"title":{"controllers/GeneXrefController.html":{}},"body":{"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"coverage.html":{}}}],["genexrefmodule",{"_index":256,"title":{"modules/GeneXrefModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneXrefModule.html":{},"modules.html":{},"overview.html":{}}}],["genexrefrepository",{"_index":1407,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["genexrefs",{"_index":2166,"title":{},"body":{"entities/Xref.html":{}}}],["genexrefservice",{"_index":1392,"title":{"injectables/GeneXrefService.html":{}},"body":{"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"coverage.html":{},"overview.html":{}}}],["get('/:id",{"_index":2112,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:id')@apiparam({name",{"_index":2102,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":926,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NoteController.html":{},"controllers/XrefController.html":{}}}],["get(':id')@role(roletypes.curator)@apibearerauth()@apioperation({summary",{"_index":1726,"title":{},"body":{"controllers/NoteController.html":{}}}],["get(':id')@role(roletypes.user)@apibearerauth()@apioperation({summary",{"_index":907,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/XrefController.html":{}}}],["get(':query",{"_index":1667,"title":{},"body":{"controllers/NameController.html":{},"controllers/SymbolController.html":{}}}],["get(':query')@role(roletypes.curator)@apibearerauth()@apioperation({summary",{"_index":1658,"title":{},"body":{"controllers/NameController.html":{},"controllers/SymbolController.html":{}}}],["getbyid",{"_index":1311,"title":{},"body":{"injectables/GeneService.html":{},"injectables/NoteService.html":{}}}],["getbyid(id",{"_index":1316,"title":{},"body":{"injectables/GeneService.html":{}}}],["getbyid(noteid",{"_index":1749,"title":{},"body":{"injectables/NoteService.html":{}}}],["getexternalresource",{"_index":897,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["getexternalresource(id",{"_index":906,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["getgenebyid",{"_index":1052,"title":{},"body":{"controllers/GeneController.html":{}}}],["getgenebyid(@param('id",{"_index":1075,"title":{},"body":{"controllers/GeneController.html":{}}}],["getgenebyid(id",{"_index":1060,"title":{},"body":{"controllers/GeneController.html":{}}}],["getlocusgroup",{"_index":1521,"title":{},"body":{"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{}}}],["getlocusgroup(id",{"_index":1524,"title":{},"body":{"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{}}}],["getname",{"_index":1653,"title":{},"body":{"controllers/NameController.html":{}}}],["getname(@param('query",{"_index":1671,"title":{},"body":{"controllers/NameController.html":{}}}],["getname(query",{"_index":1657,"title":{},"body":{"controllers/NameController.html":{}}}],["getnotebyid",{"_index":1722,"title":{},"body":{"controllers/NoteController.html":{}}}],["getnotebyid(@param('id",{"_index":1730,"title":{},"body":{"controllers/NoteController.html":{}}}],["getnotebyid(id",{"_index":1725,"title":{},"body":{"controllers/NoteController.html":{}}}],["getpayloadfromcontext",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["getpayloadfromcontext(context",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["getsymbols",{"_index":1988,"title":{},"body":{"controllers/SymbolController.html":{}}}],["getsymbols(@param('query",{"_index":1997,"title":{},"body":{"controllers/SymbolController.html":{}}}],["getsymbols(query",{"_index":1991,"title":{},"body":{"controllers/SymbolController.html":{}}}],["getting",{"_index":1461,"title":{"index.html":{},"license.html":{}},"body":{"classes/GetUserParamsDto.html":{}}}],["getuserparamsdto",{"_index":1457,"title":{"classes/GetUserParamsDto.html":{}},"body":{"classes/GetUserParamsDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getusers",{"_index":2085,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(@param('id",{"_index":2115,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(userid",{"_index":2101,"title":{},"body":{"controllers/UserController.html":{}}}],["getxrefbyinternalid",{"_index":2175,"title":{},"body":{"controllers/XrefController.html":{}}}],["getxrefbyinternalid(id",{"_index":2180,"title":{},"body":{"controllers/XrefController.html":{}}}],["give",{"_index":2714,"title":{},"body":{"license.html":{}}}],["given",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SpeciesService.html":{},"license.html":{}}}],["gives",{"_index":2470,"title":{},"body":{"license.html":{}}}],["giving",{"_index":2721,"title":{},"body":{"license.html":{}}}],["global",{"_index":1601,"title":{},"body":{"modules/MailModule.html":{},"miscellaneous/functions.html":{}}}],["gnu",{"_index":2411,"title":{},"body":{"license.html":{}}}],["goals",{"_index":2507,"title":{},"body":{"license.html":{}}}],["governed",{"_index":2869,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2509,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2895,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2637,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2947,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2376,"title":{},"body":{"index.html":{},"modules.html":{}}}],["gratis",{"_index":2782,"title":{},"body":{"license.html":{}}}],["gray",{"_index":3173,"title":{},"body":{"properties.html":{}}}],["greater",{"_index":403,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{},"entities/Species.html":{}}}],["greatest",{"_index":3134,"title":{},"body":{"license.html":{}}}],["group",{"_index":721,"title":{},"body":{"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"controllers/ExternalResourceController.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{}}}],["group.controller",{"_index":1538,"title":{},"body":{"modules/LocusGroupModule.html":{}}}],["group.controller.ts",{"_index":1520,"title":{},"body":{"controllers/LocusGroupController.html":{},"coverage.html":{}}}],["group.controller.ts:38",{"_index":1523,"title":{},"body":{"controllers/LocusGroupController.html":{}}}],["group.controller.ts:62",{"_index":1525,"title":{},"body":{"controllers/LocusGroupController.html":{}}}],["group.dto",{"_index":1527,"title":{},"body":{"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{}}}],["group.dto.ts",{"_index":720,"title":{},"body":{"classes/CreateLocusGroupDto.html":{},"coverage.html":{}}}],["group.dto.ts:11",{"_index":724,"title":{},"body":{"classes/CreateLocusGroupDto.html":{}}}],["group.entity",{"_index":1526,"title":{},"body":{"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"injectables/LocusTypeService.html":{}}}],["group.entity.ts",{"_index":1507,"title":{},"body":{"entities/LocusGroup.html":{},"coverage.html":{}}}],["group.entity.ts:14",{"_index":1511,"title":{},"body":{"entities/LocusGroup.html":{}}}],["group.entity.ts:27",{"_index":1516,"title":{},"body":{"entities/LocusGroup.html":{}}}],["group.entity.ts:34",{"_index":1513,"title":{},"body":{"entities/LocusGroup.html":{}}}],["group.module",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/LocusTypeModule.html":{}}}],["group.module.ts",{"_index":1537,"title":{},"body":{"modules/LocusGroupModule.html":{}}}],["group.service",{"_index":1529,"title":{},"body":{"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusTypeService.html":{}}}],["group.service.ts",{"_index":1540,"title":{},"body":{"injectables/LocusGroupService.html":{},"coverage.html":{}}}],["group.service.ts:14",{"_index":1545,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["group.service.ts:34",{"_index":1546,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["group.service.ts:8",{"_index":1542,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["group/dto/create",{"_index":719,"title":{},"body":{"classes/CreateLocusGroupDto.html":{},"coverage.html":{}}}],["group/locus",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["groupid",{"_index":726,"title":{},"body":{"classes/CreateLocusTypeDto.html":{}}}],["grow",{"_index":2395,"title":{},"body":{"index.html":{}}}],["guarantee",{"_index":2452,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["handle",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/GeneController.html":{},"modules/GeneModule.html":{},"injectables/GeneService.html":{},"guards/MasterRoleGuard.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/UserRoleGuard.html":{}}}],["handler",{"_index":874,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["handles",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{}}}],["handling",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RoleModule.html":{},"controllers/UserController.html":{}}}],["hands",{"_index":2370,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2360,"title":{},"body":{"index.html":{}}}],["hash",{"_index":568,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashed",{"_index":569,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashes",{"_index":567,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashing",{"_index":552,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{}}}],["hashing.provider",{"_index":570,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":520,"title":{"injectables/HashingProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["hashpassword",{"_index":555,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashpassword(data",{"_index":565,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["having",{"_index":2653,"title":{},"body":{"license.html":{}}}],["header",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["heartened",{"_index":2484,"title":{},"body":{"license.html":{}}}],["help",{"_index":2374,"title":{},"body":{"index.html":{}}}],["here",{"_index":2402,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":2990,"title":{},"body":{"license.html":{}}}],["history",{"_index":1091,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity",{"_index":1036,"title":{},"body":{"entities/Gene.html":{},"modules/GeneHistoryModule.html":{}}}],["history.entity.ts",{"_index":1077,"title":{},"body":{"entities/GeneHistory.html":{},"coverage.html":{}}}],["history.entity.ts:17",{"_index":1090,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity.ts:28",{"_index":1093,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity.ts:39",{"_index":1092,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity.ts:50",{"_index":1086,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity.ts:57",{"_index":1094,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity.ts:65",{"_index":1083,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.entity.ts:73",{"_index":1089,"title":{},"body":{"entities/GeneHistory.html":{}}}],["history.module",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["history.module.ts",{"_index":1097,"title":{},"body":{"modules/GeneHistoryModule.html":{}}}],["history/gene",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"coverage.html":{}}}],["holder",{"_index":2921,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2878,"title":{},"body":{"license.html":{}}}],["hope",{"_index":3145,"title":{},"body":{"license.html":{}}}],["host",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["hosts",{"_index":2791,"title":{},"body":{"license.html":{}}}],["household",{"_index":2813,"title":{},"body":{"license.html":{}}}],["http",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["http://localhost:3000/login",{"_index":1640,"title":{},"body":{"injectables/MailService.html":{}}}],["httpcode",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@role(roletypes.na)@apioperation({summary",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":2155,"title":{},"body":{"injectables/UserService.html":{}}}],["https://fsf.org",{"_index":2425,"title":{},"body":{"license.html":{}}}],["https://nestjs.com",{"_index":2407,"title":{},"body":{"index.html":{}}}],["https://www.gnu.org/licenses",{"_index":3162,"title":{},"body":{"license.html":{}}}],["httpstatus",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"injectables/UserService.html":{}}}],["httpstatus.created",{"_index":1867,"title":{},"body":{"controllers/RoleController.html":{}}}],["httpstatus.not_implemented",{"_index":2159,"title":{},"body":{"injectables/UserService.html":{}}}],["hyphens",{"_index":757,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["id",{"_index":389,"title":{},"body":{"entities/Assembly.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusTypeDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["id'})@apiparam({name",{"_index":908,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/XrefController.html":{}}}],["identifiable",{"_index":3017,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":127,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"entities/Assembly.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identify",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignore",{"_index":1704,"title":{},"body":{"injectables/NameService.html":{},"injectables/SymbolService.html":{}}}],["implement",{"_index":2604,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":2605,"title":{},"body":{"license.html":{}}}],["implemented",{"_index":2160,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/DataResponseInterceptor.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{}}}],["implied",{"_index":3044,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["importing",{"_index":2981,"title":{},"body":{"license.html":{}}}],["imports",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneHistoryModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{}}}],["impose",{"_index":2905,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3047,"title":{},"body":{"license.html":{}}}],["improvements",{"_index":2478,"title":{},"body":{"license.html":{}}}],["in')@httpcode(httpstatus.ok)@role(roletypes.na)@apioperation({summary",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["in(roles",{"_index":1926,"title":{},"body":{"injectables/RoleService.html":{}}}],["in.provider",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["in.provider.ts",{"_index":1929,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["in.provider.ts:17",{"_index":1930,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["in.provider.ts:38",{"_index":1931,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["inability",{"_index":3108,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3111,"title":{},"body":{"license.html":{}}}],["inc",{"_index":2424,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3105,"title":{},"body":{"license.html":{}}}],["include",{"_index":1439,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"license.html":{}}}],["included",{"_index":2597,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2553,"title":{},"body":{"license.html":{}}}],["including",{"_index":2614,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2751,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":2483,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3065,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2815,"title":{},"body":{"license.html":{}}}],["incremented",{"_index":1012,"title":{},"body":{"entities/Gene.html":{}}}],["indemnification",{"_index":2901,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2739,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"entities/Assembly.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":2951,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":2912,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2749,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":2532,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2828,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{}}}],["inform",{"_index":2799,"title":{},"body":{"license.html":{}}}],["information",{"_index":967,"title":{},"body":{"entities/Gene.html":{},"interfaces/Paginated.html":{},"entities/Role.html":{},"index.html":{},"license.html":{}}}],["infrastructure",{"_index":2357,"title":{},"body":{"index.html":{}}}],["infringe",{"_index":2949,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2978,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2545,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":156,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["initialize",{"_index":1314,"title":{},"body":{"injectables/GeneService.html":{}}}],["initializes",{"_index":958,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["initiate",{"_index":2972,"title":{},"body":{"license.html":{}}}],["inject",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{}}}],["inject(forwardref",{"_index":811,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(jwtconfig.key",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["inject(profileconfig.key",{"_index":2158,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(request",{"_index":1811,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AdminRoleGuard.html":{},"injectables/AssemblyService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"injectables/LocationService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/AssemblyService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"injectables/LocationService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["injectables",{"_index":200,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/AssemblyService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"injectables/LocationService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"overview.html":{}}}],["injectrepository",{"_index":668,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/RoleService.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["injectrepository(externalresource",{"_index":945,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["injectrepository(gene",{"_index":675,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneService.html":{}}}],["injectrepository(genelocustype",{"_index":1147,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["injectrepository(genename",{"_index":1207,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["injectrepository(genenote",{"_index":1240,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["injectrepository(genereplacement",{"_index":1302,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["injectrepository(genesymbol",{"_index":1363,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["injectrepository(genexref",{"_index":1412,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["injectrepository(locusgroup",{"_index":1547,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["injectrepository(locustype",{"_index":1581,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["injectrepository(name",{"_index":1697,"title":{},"body":{"injectables/NameService.html":{}}}],["injectrepository(note",{"_index":1754,"title":{},"body":{"injectables/NoteService.html":{}}}],["injectrepository(role",{"_index":1922,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(species",{"_index":1977,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["injectrepository(symbol",{"_index":2019,"title":{},"body":{"injectables/SymbolService.html":{}}}],["injectrepository(user",{"_index":810,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/UserService.html":{}}}],["injectrepository(xref",{"_index":2202,"title":{},"body":{"injectables/XrefService.html":{}}}],["inlinecssenabled",{"_index":1622,"title":{},"body":{"modules/MailModule.html":{}}}],["insert",{"_index":984,"title":{},"body":{"entities/Gene.html":{}}}],["inst",{"_index":1899,"title":{},"body":{"guards/RoleGuard.html":{}}}],["inst.canactivate(context",{"_index":1901,"title":{},"body":{"guards/RoleGuard.html":{}}}],["install",{"_index":2350,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":2831,"title":{},"body":{"license.html":{}}}],["installcompile",{"_index":2315,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2851,"title":{},"body":{"license.html":{}}}],["instance",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{}}}],["instanceof",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["int",{"_index":406,"title":{},"body":{"entities/Assembly.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/User.html":{}}}],["intact",{"_index":2707,"title":{},"body":{"license.html":{}}}],["integer",{"_index":2113,"title":{},"body":{"controllers/UserController.html":{}}}],["integer'})@apioperation({summary",{"_index":2103,"title":{},"body":{"controllers/UserController.html":{}}}],["intended",{"_index":2451,"title":{},"body":{"license.html":{}}}],["intention",{"_index":2697,"title":{},"body":{"license.html":{}}}],["interact",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"license.html":{}}}],["interacting",{"_index":3059,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":2562,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":2565,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":865,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercept(context",{"_index":868,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interceptor",{"_index":862,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercepts",{"_index":871,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interchange",{"_index":2764,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2966,"title":{},"body":{"license.html":{}}}],["interface",{"_index":110,"title":{"interfaces/ActiveUserInterface.html":{},"interfaces/Paginated.html":{}},"body":{"interfaces/ActiveUserInterface.html":{},"interfaces/Paginated.html":{},"coverage.html":{},"license.html":{}}}],["interface/active",{"_index":1441,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["interface/paginated.interface",{"_index":1810,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["interfaces",{"_index":112,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"interfaces/Paginated.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":2840,"title":{},"body":{"license.html":{}}}],["internal",{"_index":608,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Gene.html":{},"miscellaneous/enumerations.html":{}}}],["internal'})@isenum(genestatus)@isnotempty",{"_index":606,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["interpretation",{"_index":3119,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":2612,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":2629,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{}}}],["invalidate",{"_index":2733,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":2639,"title":{},"body":{"license.html":{}}}],["isarray",{"_index":193,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["isarray()@isenum(rolename",{"_index":146,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["isboolean",{"_index":775,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isboolean()@isoptional()@apipropertyoptional({description",{"_index":153,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["isemail",{"_index":774,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SigninDto.html":{}}}],["isemail()@isnotempty()@apiproperty({description",{"_index":1941,"title":{},"body":{"classes/SigninDto.html":{}}}],["isenum",{"_index":194,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{}}}],["isenum(basicstatus",{"_index":632,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{}}}],["isenum(basicstatus)@isnotempty()@apiproperty({enum",{"_index":640,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{}}}],["isenum(genestatus",{"_index":615,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["isenum(nomenclaturetype",{"_index":648,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{}}}],["isenum(nomenclaturetype)@isnotempty()@apiproperty({enum",{"_index":643,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{}}}],["isenum(rolename",{"_index":197,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["isequal",{"_index":1934,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["isglobal",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":628,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateXrefDto.html":{},"classes/GetUserParamsDto.html":{}}}],["isint()@isnotempty()@apiproperty({description",{"_index":691,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{}}}],["isint()@isnotempty()@min(1)@apiproperty({description",{"_index":727,"title":{},"body":{"classes/CreateLocusTypeDto.html":{},"classes/CreateXrefDto.html":{}}}],["isint()@min(1)@isnotempty",{"_index":622,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["isnotempty",{"_index":192,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{}}}],["isnotempty()@isemail()@maxlength(255)@apiproperty({description",{"_index":164,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@isenum(basicstatus",{"_index":626,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["isnotempty()@isint()@apiproperty({description",{"_index":653,"title":{},"body":{"classes/CreateGeneNoteDto.html":{}}}],["isnotempty()@isint()@apipropertyoptional({description",{"_index":636,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{}}}],["isnotempty()@isstring()@apiproperty({description",{"_index":712,"title":{},"body":{"classes/CreateGeneXrefDto.html":{},"classes/RefreshTokenDto.html":{}}}],["isoptional",{"_index":614,"title":{},"body":{"classes/CreateGeneDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{}}}],["isoptional()@ispositive()@type(undefined",{"_index":1780,"title":{},"body":{"classes/PaginationDto.html":{}}}],["isoptional()@isstring()@minlength(3)@maxlength(96)@apipropertyoptional({description",{"_index":170,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":1783,"title":{},"body":{"classes/PaginationDto.html":{}}}],["isstring",{"_index":583,"title":{},"body":{"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":579,"title":{},"body":{"classes/CreateExternalResourceDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/SigninDto.html":{}}}],["isstring()@isnotempty()@apiproperty({enum",{"_index":749,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isstring()@isnotempty()@maxlength(20)@apiproperty({description",{"_index":849,"title":{},"body":{"classes/CreateXrefDto.html":{}}}],["isstring()@isnotempty()@minlength(2)@matches(/^[a",{"_index":753,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96)@apiproperty({description",{"_index":158,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@maxlength(16)@matches(/^(?=.*[a",{"_index":173,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["issuer",{"_index":1445,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["issues",{"_index":1693,"title":{},"body":{"injectables/NameService.html":{},"injectables/SymbolService.html":{}}}],["item",{"_index":2583,"title":{},"body":{"license.html":{}}}],["items",{"_index":1767,"title":{},"body":{"interfaces/Paginated.html":{},"classes/PaginationDto.html":{}}}],["itemsperpage",{"_index":1766,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["itself",{"_index":1661,"title":{},"body":{"controllers/NameController.html":{},"controllers/SymbolController.html":{},"license.html":{}}}],["job",{"_index":2388,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2390,"title":{},"body":{"index.html":{}}}],["john",{"_index":168,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["john.doe@email.com",{"_index":165,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"classes/SigninDto.html":{}}}],["joi",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1605,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1620,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":1274,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["jointable",{"_index":424,"title":{},"body":{"entities/Assembly.html":{},"entities/User.html":{}}}],["jonny",{"_index":161,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["jwt",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["jwtconf",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["jwtconfig",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["jwtconfiguration",{"_index":1427,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["jwtmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["kamil",{"_index":2404,"title":{},"body":{"index.html":{}}}],["keep",{"_index":2706,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":2607,"title":{},"body":{"license.html":{}}}],["key",{"_index":1465,"title":{},"body":{"classes/GetUserParamsDto.html":{},"entities/Role.html":{},"entities/User.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":2834,"title":{},"body":{"license.html":{}}}],["kinase",{"_index":739,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["kind",{"_index":2558,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2436,"title":{},"body":{"license.html":{}}}],["know",{"_index":2465,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":3007,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3014,"title":{},"body":{"license.html":{}}}],["kristian",{"_index":3172,"title":{},"body":{"properties.html":{}}}],["language",{"_index":2592,"title":{},"body":{"license.html":{}}}],["larger",{"_index":2743,"title":{},"body":{"license.html":{}}}],["last",{"_index":171,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"entities/Gene.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"entities/User.html":{}}}],["lastname",{"_index":143,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["later",{"_index":820,"title":{},"body":{"injectables/CreateUserProvider.html":{},"license.html":{}}}],["law",{"_index":2547,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2522,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2976,"title":{},"body":{"license.html":{}}}],["leads",{"_index":3153,"title":{},"body":{"license.html":{}}}],["learn",{"_index":2363,"title":{},"body":{"index.html":{}}}],["legal",{"_index":2471,"title":{},"body":{"license.html":{}}}],["legend",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["length",{"_index":399,"title":{},"body":{"entities/Assembly.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["less",{"_index":1518,"title":{},"body":{"entities/LocusGroup.html":{},"entities/Name.html":{},"entities/Symbol.html":{}}}],["letter",{"_index":184,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["letting",{"_index":2492,"title":{},"body":{"license.html":{}}}],["level",{"_index":924,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["level'})@apiresponse({status",{"_index":900,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{}}}],["liability",{"_index":2881,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2544,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2594,"title":{},"body":{"license.html":{}}}],["library",{"_index":2807,"title":{},"body":{"license.html":{}}}],["license",{"_index":2410,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2393,"title":{},"body":{"index.html":{},"license.html":{}}}],["licensee",{"_index":2528,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2530,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2444,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2953,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2892,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":2945,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1779,"title":{},"body":{"classes/PaginationDto.html":{},"injectables/UserService.html":{},"license.html":{}}}],["limitation",{"_index":3101,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3088,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":2880,"title":{},"body":{"license.html":{}}}],["line",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{},"license.html":{}}}],["link",{"_index":3066,"title":{},"body":{"license.html":{}}}],["linked",{"_index":2626,"title":{},"body":{"license.html":{}}}],["linkedin",{"_index":2387,"title":{},"body":{"index.html":{}}}],["links",{"_index":1668,"title":{},"body":{"controllers/NameController.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/SymbolController.html":{}}}],["list",{"_index":150,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"injectables/UserService.html":{},"license.html":{}}}],["listens",{"_index":2296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":1765,"title":{},"body":{"interfaces/Paginated.html":{}}}],["litigation",{"_index":2973,"title":{},"body":{"license.html":{}}}],["live",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":2078,"title":{},"body":{"entities/User.html":{}}}],["local",{"_index":3120,"title":{},"body":{"license.html":{}}}],["location",{"_index":408,"title":{"entities/Location.html":{}},"body":{"entities/Assembly.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["location.assemblies",{"_index":410,"title":{},"body":{"entities/Assembly.html":{}}}],["location.controller",{"_index":1501,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.entity",{"_index":1503,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.service",{"_index":1502,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.module",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["locationcontroller",{"_index":1494,"title":{"controllers/LocationController.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmodule",{"_index":257,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locations",{"_index":390,"title":{},"body":{"entities/Assembly.html":{}}}],["locationservice",{"_index":1499,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"coverage.html":{},"overview.html":{}}}],["locus",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"controllers/ExternalResourceController.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["locus/genetic",{"_index":1552,"title":{},"body":{"entities/LocusType.html":{}}}],["locusgroup",{"_index":1506,"title":{"entities/LocusGroup.html":{}},"body":{"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["locusgroup.locustypes",{"_index":1557,"title":{},"body":{"entities/LocusType.html":{}}}],["locusgroupcontroller",{"_index":1519,"title":{"controllers/LocusGroupController.html":{}},"body":{"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"coverage.html":{}}}],["locusgroupmodule",{"_index":258,"title":{"modules/LocusGroupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["locusgrouprepository",{"_index":1543,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["locusgroupservice",{"_index":1528,"title":{"injectables/LocusGroupService.html":{}},"body":{"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["locustype",{"_index":1101,"title":{"entities/LocusType.html":{}},"body":{"entities/GeneLocusType.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["locustype.genelocustypes",{"_index":1110,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["locustype.locusgroup",{"_index":1512,"title":{},"body":{"entities/LocusGroup.html":{}}}],["locustypecontroller",{"_index":1561,"title":{"controllers/LocusTypeController.html":{}},"body":{"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"coverage.html":{}}}],["locustypeid",{"_index":621,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["locustypemodule",{"_index":259,"title":{"modules/LocusTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/LocusTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["locustyperepository",{"_index":1575,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["locustypes",{"_index":1510,"title":{},"body":{"entities/LocusGroup.html":{}}}],["locustypeservice",{"_index":1141,"title":{"injectables/LocusTypeService.html":{}},"body":{"injectables/GeneLocusTypeService.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":155,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["logic",{"_index":1310,"title":{},"body":{"injectables/GeneService.html":{}}}],["loginurl",{"_index":1639,"title":{},"body":{"injectables/MailService.html":{}}}],["logs",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2649,"title":{},"body":{"license.html":{}}}],["looking",{"_index":2337,"title":{},"body":{"index.html":{}}}],["loop",{"_index":2384,"title":{},"body":{"index.html":{}}}],["loss",{"_index":3109,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3112,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":185,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["m:1",{"_index":1559,"title":{},"body":{"entities/LocusType.html":{}}}],["machine",{"_index":2755,"title":{},"body":{"license.html":{}}}],["made",{"_index":1084,"title":{},"body":{"entities/GeneHistory.html":{},"license.html":{}}}],["mail",{"_index":1592,"title":{},"body":{"modules/MailModule.html":{},"license.html":{}}}],["mail.service",{"_index":1602,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["mailer",{"_index":1630,"title":{},"body":{"injectables/MailService.html":{}}}],["mailermodule",{"_index":1603,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1609,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1628,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":260,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":791,"title":{"injectables/MailService.html":{}},"body":{"injectables/CreateUserProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["main.ts",{"_index":1789,"title":{},"body":{"classes/PaginationDto.html":{}}}],["maintain",{"_index":2787,"title":{},"body":{"license.html":{}}}],["major",{"_index":2600,"title":{},"body":{"license.html":{}}}],["make",{"_index":1216,"title":{},"body":{"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"license.html":{}}}],["makes",{"_index":2344,"title":{},"body":{"index.html":{},"license.html":{}}}],["making",{"_index":2491,"title":{},"body":{"license.html":{}}}],["manages",{"_index":2007,"title":{},"body":{"injectables/SymbolService.html":{}}}],["managing",{"_index":796,"title":{},"body":{"injectables/CreateUserProvider.html":{},"index.html":{}}}],["manner",{"_index":2991,"title":{},"body":{"license.html":{}}}],["many",{"_index":1852,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{},"license.html":{}}}],["manytomany",{"_index":425,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined",{"_index":409,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytoone",{"_index":426,"title":{},"body":{"entities/Assembly.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/LocusType.html":{},"entities/Xref.html":{}}}],["manytoone(undefined",{"_index":418,"title":{},"body":{"entities/Assembly.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/LocusType.html":{},"entities/Xref.html":{}}}],["map",{"_index":878,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"guards/RoleGuard.html":{}}}],["map((data",{"_index":881,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["march",{"_index":3041,"title":{},"body":{"license.html":{}}}],["marked",{"_index":2889,"title":{},"body":{"license.html":{}}}],["marker",{"_index":1553,"title":{},"body":{"entities/LocusType.html":{}}}],["marks",{"_index":2899,"title":{},"body":{"license.html":{}}}],["masks",{"_index":2525,"title":{},"body":{"license.html":{}}}],["master",{"_index":203,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CreateUserProvider.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"miscellaneous/enumerations.html":{}}}],["master.role.guard",{"_index":1881,"title":{},"body":{"guards/RoleGuard.html":{}}}],["masterroleguard",{"_index":313,"title":{"guards/MasterRoleGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["matches",{"_index":564,"title":{},"body":{"injectables/BcryptProvider.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/HashingProvider.html":{}}}],["matches(/^[a",{"_index":764,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["matching",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["material",{"_index":2657,"title":{},"body":{"license.html":{}}}],["materially",{"_index":2855,"title":{},"body":{"license.html":{}}}],["math.ceil(totalitems",{"_index":1822,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["mau",{"_index":2340,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":2047,"title":{},"body":{"entities/User.html":{}}}],["maxlength",{"_index":773,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{}}}],["maxlength(16",{"_index":780,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":853,"title":{},"body":{"classes/CreateXrefDto.html":{}}}],["maxlength(255",{"_index":778,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":777,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["meaning",{"_index":2049,"title":{},"body":{"entities/User.html":{},"license.html":{}}}],["means",{"_index":2521,"title":{},"body":{"license.html":{}}}],["measure",{"_index":2677,"title":{},"body":{"license.html":{}}}],["measures",{"_index":2689,"title":{},"body":{"license.html":{}}}],["medium",{"_index":2702,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2719,"title":{},"body":{"license.html":{}}}],["meets",{"_index":2584,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2581,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3089,"title":{},"body":{"license.html":{}}}],["mere",{"_index":2561,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merging",{"_index":2962,"title":{},"body":{"license.html":{}}}],["message",{"_index":178,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{}}}],["met",{"_index":2641,"title":{},"body":{"license.html":{}}}],["meta",{"_index":1764,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["metadata",{"_index":1877,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["method",{"_index":209,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GeneService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/PaginationProvider.html":{},"guards/RoleGuard.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["min",{"_index":629,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateXrefDto.html":{}}}],["min(1",{"_index":631,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateXrefDto.html":{}}}],["minimum",{"_index":179,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength",{"_index":762,"title":{},"body":{"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(2",{"_index":763,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["minlength(3",{"_index":776,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":779,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":2275,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":2887,"title":{},"body":{"license.html":{}}}],["mit",{"_index":2392,"title":{},"body":{"index.html":{}}}],["mod",{"_index":1015,"title":{},"body":{"entities/Gene.html":{}}}],["mod_id",{"_index":587,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Gene.html":{}}}],["moddate",{"_index":976,"title":{},"body":{"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["mode",{"_index":2320,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":590,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Gene.html":{},"license.html":{}}}],["modification",{"_index":2518,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1043,"title":{},"body":{"entities/Gene.html":{},"license.html":{}}}],["modified",{"_index":1019,"title":{},"body":{"entities/Gene.html":{},"license.html":{}}}],["modifies",{"_index":2724,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2474,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2551,"title":{},"body":{"license.html":{}}}],["module",{"_index":234,"title":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneHistoryModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneHistoryModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["modules",{"_index":236,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneHistoryModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1604,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":1608,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":818,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["more",{"_index":835,"title":{},"body":{"injectables/CreateUserProvider.html":{},"index.html":{},"license.html":{}}}],["moreover",{"_index":2933,"title":{},"body":{"license.html":{}}}],["multiple",{"_index":998,"title":{},"body":{"entities/Gene.html":{},"injectables/RoleService.html":{}}}],["myśliwiec",{"_index":2405,"title":{},"body":{"index.html":{}}}],["na",{"_index":2292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":32,"title":{"entities/Name.html":{}},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"entities/Assembly.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["name'})@apiresponse({status",{"_index":1185,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["name.controller",{"_index":1197,"title":{},"body":{"modules/GeneNameModule.html":{},"modules/NameModule.html":{}}}],["name.controller.ts",{"_index":1182,"title":{},"body":{"controllers/GeneNameController.html":{},"coverage.html":{}}}],["name.controller.ts:31",{"_index":1187,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["name.dto",{"_index":1190,"title":{},"body":{"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{}}}],["name.dto.ts",{"_index":635,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:14",{"_index":645,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateNameDto.html":{}}}],["name.dto.ts:23",{"_index":641,"title":{},"body":{"classes/CreateGeneNameDto.html":{}}}],["name.dto.ts:31",{"_index":638,"title":{},"body":{"classes/CreateGeneNameDto.html":{}}}],["name.dto.ts:39",{"_index":639,"title":{},"body":{"classes/CreateGeneNameDto.html":{}}}],["name.entity",{"_index":1038,"title":{},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/User.html":{}}}],["name.entity.ts",{"_index":1165,"title":{},"body":{"entities/GeneName.html":{},"coverage.html":{}}}],["name.entity.ts:21",{"_index":1171,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:29",{"_index":1176,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:37",{"_index":1175,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:40",{"_index":1170,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:43",{"_index":1174,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:46",{"_index":1166,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:49",{"_index":1172,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:52",{"_index":1177,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:55",{"_index":1167,"title":{},"body":{"entities/GeneName.html":{}}}],["name.entity.ts:58",{"_index":1168,"title":{},"body":{"entities/GeneName.html":{}}}],["name.enum",{"_index":129,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"classes/CreateRoleDto.html":{},"entities/Role.html":{}}}],["name.enum.ts",{"_index":2283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name.genenames",{"_index":1173,"title":{},"body":{"entities/GeneName.html":{}}}],["name.module",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["name.module.ts",{"_index":1196,"title":{},"body":{"modules/GeneNameModule.html":{}}}],["name.name",{"_index":1706,"title":{},"body":{"injectables/NameService.html":{}}}],["name.service",{"_index":1189,"title":{},"body":{"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{}}}],["name.service.ts",{"_index":1200,"title":{},"body":{"injectables/GeneNameService.html":{},"coverage.html":{}}}],["name.service.ts:15",{"_index":1203,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["name.service.ts:24",{"_index":1205,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["name/dto/create",{"_index":634,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"coverage.html":{}}}],["name/gene",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/Name.html":{},"entities/User.html":{},"coverage.html":{}}}],["name/name.module",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["name/{query",{"_index":1670,"title":{},"body":{"controllers/NameController.html":{}}}],["namecontroller",{"_index":1650,"title":{"controllers/NameController.html":{}},"body":{"controllers/NameController.html":{},"modules/NameModule.html":{},"coverage.html":{}}}],["nameid",{"_index":1694,"title":{},"body":{"injectables/NameService.html":{}}}],["namemodule",{"_index":261,"title":{"modules/NameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneNameModule.html":{},"modules/NameModule.html":{},"modules.html":{},"overview.html":{}}}],["namerepository",{"_index":1686,"title":{},"body":{"injectables/NameService.html":{}}}],["names",{"_index":997,"title":{},"body":{"entities/Gene.html":{},"entities/Name.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"license.html":{}}}],["nameservice",{"_index":1201,"title":{"injectables/NameService.html":{}},"body":{"injectables/GeneNameService.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"coverage.html":{},"overview.html":{}}}],["naming",{"_index":2272,"title":{},"body":{"dependencies.html":{}}}],["namingstrategy",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["nature",{"_index":2740,"title":{},"body":{"license.html":{}}}],["ncbi",{"_index":581,"title":{},"body":{"classes/CreateExternalResourceDto.html":{}}}],["necessary",{"_index":3097,"title":{},"body":{"license.html":{}}}],["need",{"_index":2379,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":1788,"title":{},"body":{"classes/PaginationDto.html":{},"license.html":{}}}],["nest",{"_index":2310,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2409,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":877,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nestjs",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs/common",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"modules/GeneHistoryModule.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"injectables/PaginationProvider.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/UserRoleGuard.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":191,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"classes/GetUserParamsDto.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"classes/RefreshTokenDto.html":{},"controllers/RoleController.html":{},"classes/SigninDto.html":{},"controllers/SpeciesController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"modules/GeneHistoryModule.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"dependencies.html":{}}}],["network",{"_index":2443,"title":{},"body":{"license.html":{}}}],["new",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"coverage.html":{},"license.html":{}}}],["newurl",{"_index":1819,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?page=${nextpage}&limit=${paginationquery.limit",{"_index":1830,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?page=${paginationquery.page}&limit=${paginationquery.limit",{"_index":1828,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?page=${previouspage}&limit=${paginationquery.limit",{"_index":1829,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?page=${totalpages}&limit=${paginationquery.limit",{"_index":1827,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?page=1&limit=${paginationquery.limit",{"_index":1826,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newuser",{"_index":836,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["next",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/UserService.html":{},"license.html":{}}}],["next.handle().pipe",{"_index":880,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nextpage",{"_index":1823,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["nm_004333",{"_index":851,"title":{},"body":{"classes/CreateXrefDto.html":{}}}],["node.js",{"_index":2303,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":2264,"title":{},"body":{"dependencies.html":{}}}],["nomenclature",{"_index":2290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nomenclaturetype",{"_index":642,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"miscellaneous/enumerations.html":{}}}],["nomenclaturetype.alias",{"_index":1180,"title":{},"body":{"entities/GeneName.html":{},"entities/GeneSymbol.html":{}}}],["non",{"_index":2587,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":2776,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2598,"title":{},"body":{"license.html":{}}}],["normally",{"_index":2811,"title":{},"body":{"license.html":{}}}],["note",{"_index":652,"title":{"entities/Note.html":{}},"body":{"classes/CreateGeneNoteDto.html":{},"classes/CreateNoteDto.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"coverage.html":{}}}],["note.controller",{"_index":1252,"title":{},"body":{"modules/GeneNoteModule.html":{},"modules/NoteModule.html":{}}}],["note.controller.ts",{"_index":1234,"title":{},"body":{"controllers/GeneNoteController.html":{},"coverage.html":{}}}],["note.controller.ts:23",{"_index":1236,"title":{},"body":{"controllers/GeneNoteController.html":{}}}],["note.dto",{"_index":1239,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["note.dto.ts",{"_index":651,"title":{},"body":{"classes/CreateGeneNoteDto.html":{},"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["note.dto.ts:11",{"_index":745,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:13",{"_index":656,"title":{},"body":{"classes/CreateGeneNoteDto.html":{}}}],["note.dto.ts:21",{"_index":654,"title":{},"body":{"classes/CreateGeneNoteDto.html":{}}}],["note.dto.ts:29",{"_index":655,"title":{},"body":{"classes/CreateGeneNoteDto.html":{}}}],["note.entity",{"_index":1040,"title":{},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/User.html":{}}}],["note.entity.ts",{"_index":1218,"title":{},"body":{"entities/GeneNote.html":{},"coverage.html":{}}}],["note.entity.ts:19",{"_index":1226,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:26",{"_index":1229,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:29",{"_index":1225,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:32",{"_index":1228,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:35",{"_index":1221,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:38",{"_index":1219,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:41",{"_index":1223,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.entity.ts:44",{"_index":1230,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.genenotes",{"_index":1227,"title":{},"body":{"entities/GeneNote.html":{}}}],["note.module",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["note.module.ts",{"_index":1251,"title":{},"body":{"modules/GeneNoteModule.html":{}}}],["note.note",{"_index":1759,"title":{},"body":{"injectables/NoteService.html":{}}}],["note.service",{"_index":1253,"title":{},"body":{"modules/GeneNoteModule.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{}}}],["note.service.ts",{"_index":1256,"title":{},"body":{"injectables/GeneNoteService.html":{},"coverage.html":{}}}],["note.service.ts:12",{"_index":1257,"title":{},"body":{"injectables/GeneNoteService.html":{}}}],["note.service.ts:21",{"_index":1258,"title":{},"body":{"injectables/GeneNoteService.html":{}}}],["note/dto/create",{"_index":650,"title":{},"body":{"classes/CreateGeneNoteDto.html":{},"coverage.html":{}}}],["note/gene",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/Note.html":{},"entities/User.html":{},"coverage.html":{}}}],["note/note.module",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["notecontroller",{"_index":1719,"title":{"controllers/NoteController.html":{}},"body":{"controllers/NoteController.html":{},"modules/NoteModule.html":{},"coverage.html":{}}}],["noteid",{"_index":1748,"title":{},"body":{"injectables/NoteService.html":{}}}],["notemodule",{"_index":262,"title":{"modules/NoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneNoteModule.html":{},"modules/NoteModule.html":{},"modules.html":{},"overview.html":{}}}],["noterepository",{"_index":1743,"title":{},"body":{"injectables/NoteService.html":{}}}],["noteservice",{"_index":1237,"title":{"injectables/NoteService.html":{}},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"coverage.html":{},"overview.html":{}}}],["notfoundexception",{"_index":1580,"title":{},"body":{"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/XrefService.html":{}}}],["notfoundexception(`name",{"_index":1708,"title":{},"body":{"injectables/NameService.html":{}}}],["notfoundexception(`symbol",{"_index":2027,"title":{},"body":{"injectables/SymbolService.html":{}}}],["nothing",{"_index":2946,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2574,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2568,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2934,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2928,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2875,"title":{},"body":{"license.html":{}}}],["november",{"_index":2417,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2314,"title":{},"body":{"index.html":{}}}],["null",{"_index":402,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Species.html":{},"entities/Symbol.html":{}}}],["nullable",{"_index":395,"title":{},"body":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["number",{"_index":125,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"entities/Assembly.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["number'})@apiresponse({status",{"_index":910,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/XrefController.html":{}}}],["numbered",{"_index":3077,"title":{},"body":{"license.html":{}}}],["object",{"_index":136,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateGeneDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"license.html":{}}}],["object.values(roletypes).includes(role.name",{"_index":2140,"title":{},"body":{"injectables/UserRoleGuard.html":{}}}],["objectliteral",{"_index":1809,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["obligate",{"_index":3054,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":2793,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2679,"title":{},"body":{"license.html":{}}}],["observable",{"_index":875,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["occasionally",{"_index":2775,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":2943,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2841,"title":{},"body":{"license.html":{}}}],["offer",{"_index":2389,"title":{},"body":{"index.html":{},"license.html":{}}}],["offered",{"_index":2801,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2779,"title":{},"body":{"license.html":{}}}],["official",{"_index":2341,"title":{},"body":{"index.html":{},"license.html":{}}}],["older",{"_index":2502,"title":{},"body":{"license.html":{}}}],["onboarding",{"_index":1635,"title":{},"body":{"injectables/MailService.html":{}}}],["oncogene",{"_index":737,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["ondelete",{"_index":1477,"title":{},"body":{"entities/Location.html":{},"entities/Role.html":{}}}],["one",{"_index":182,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["onetomany",{"_index":893,"title":{},"body":{"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["onetomany(undefined",{"_index":889,"title":{},"body":{"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["open",{"_index":2394,"title":{},"body":{"index.html":{}}}],["operate",{"_index":3115,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2784,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2609,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2698,"title":{},"body":{"license.html":{}}}],["operationref",{"_index":1669,"title":{},"body":{"controllers/NameController.html":{},"controllers/SymbolController.html":{}}}],["operations",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GeneService.html":{},"guards/MasterRoleGuard.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{}}}],["operator",{"_index":2498,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3061,"title":{},"body":{"license.html":{}}}],["option",{"_index":2871,"title":{},"body":{"license.html":{}}}],["optional",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["options",{"_index":1623,"title":{},"body":{"modules/MailModule.html":{},"license.html":{}}}],["order",{"_index":2941,"title":{},"body":{"license.html":{}}}],["organism",{"_index":591,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Gene.html":{}}}],["organization",{"_index":2958,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":2533,"title":{},"body":{"license.html":{}}}],["origin",{"_index":2888,"title":{},"body":{"license.html":{}}}],["original",{"_index":2890,"title":{},"body":{"license.html":{}}}],["others",{"_index":2651,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":215,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/HashingProvider.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"license.html":{}}}],["out",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"injectables/CreateUserProvider.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":2645,"title":{},"body":{"license.html":{}}}],["outside",{"_index":2663,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3166,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":2987,"title":{},"body":{"license.html":{}}}],["package",{"_index":2244,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":2731,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2599,"title":{},"body":{"license.html":{}}}],["page",{"_index":1769,"title":{},"body":{"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"injectables/UserService.html":{}}}],["pages",{"_index":1774,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginate",{"_index":1807,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginated",{"_index":1762,"title":{"interfaces/Paginated.html":{}},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["paginatequery",{"_index":1799,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginatequery(paginationquery",{"_index":1802,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginates",{"_index":1804,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginating",{"_index":1798,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["pagination",{"_index":1806,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationdto",{"_index":1775,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["paginationmodule",{"_index":263,"title":{"modules/PaginationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneModule.html":{},"modules/PaginationModule.html":{},"modules.html":{},"overview.html":{}}}],["paginationprovider",{"_index":1794,"title":{"injectables/PaginationProvider.html":{}},"body":{"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"coverage.html":{},"overview.html":{}}}],["paginationquery",{"_index":1805,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.limit",{"_index":1815,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.page",{"_index":1814,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paper",{"_index":3151,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2918,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2999,"title":{},"body":{"license.html":{}}}],["param",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"injectables/GeneService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["params.dto",{"_index":2157,"title":{},"body":{"injectables/UserService.html":{}}}],["params.dto.ts",{"_index":1459,"title":{},"body":{"classes/GetUserParamsDto.html":{},"coverage.html":{}}}],["params.dto.ts:20",{"_index":1463,"title":{},"body":{"classes/GetUserParamsDto.html":{}}}],["part",{"_index":2380,"title":{},"body":{"index.html":{},"license.html":{}}}],["particular",{"_index":2094,"title":{},"body":{"controllers/UserController.html":{},"license.html":{}}}],["parties",{"_index":2560,"title":{},"body":{"license.html":{}}}],["parts",{"_index":2633,"title":{},"body":{"license.html":{}}}],["party",{"_index":2785,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2964,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1616,"title":{},"body":{"modules/MailModule.html":{}}}],["password",{"_index":144,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/User.html":{},"license.html":{}}}],["password1",{"_index":188,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"classes/SigninDto.html":{}}}],["passwords",{"_index":1938,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["patent",{"_index":2917,"title":{},"body":{"license.html":{}}}],["patents",{"_index":2982,"title":{},"body":{"license.html":{}}}],["path",{"_index":1606,"title":{},"body":{"modules/MailModule.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["payment",{"_index":3033,"title":{},"body":{"license.html":{}}}],["peer",{"_index":2797,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2800,"title":{},"body":{"license.html":{}}}],["per",{"_index":1768,"title":{},"body":{"interfaces/Paginated.html":{}}}],["perform",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["performance",{"_index":3093,"title":{},"body":{"license.html":{}}}],["performing",{"_index":2622,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":2927,"title":{},"body":{"license.html":{}}}],["permission",{"_index":2472,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2636,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":2709,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2750,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2490,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2427,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2846,"title":{},"body":{"license.html":{}}}],["person",{"_index":987,"title":{},"body":{"entities/Gene.html":{}}}],["personal",{"_index":2810,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":3052,"title":{},"body":{"license.html":{}}}],["pg",{"_index":2266,"title":{},"body":{"dependencies.html":{}}}],["pgnc",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"entities/Assembly.html":{},"properties.html":{}}}],["pgncdefault",{"_index":391,"title":{},"body":{"entities/Assembly.html":{}}}],["physical",{"_index":2759,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2773,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":2463,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":2299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":2781,"title":{},"body":{"license.html":{}}}],["platform",{"_index":2339,"title":{},"body":{"index.html":{}}}],["please",{"_index":819,"title":{},"body":{"injectables/CreateUserProvider.html":{},"index.html":{}}}],["plus",{"_index":2967,"title":{},"body":{"license.html":{}}}],["point",{"_index":2295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pointer",{"_index":3143,"title":{},"body":{"license.html":{}}}],["populus",{"_index":600,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["port",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"miscellaneous/functions.html":{}}}],["portion",{"_index":2804,"title":{},"body":{"license.html":{}}}],["positive",{"_index":1784,"title":{},"body":{"classes/PaginationDto.html":{},"controllers/UserController.html":{}}}],["possesses",{"_index":2770,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2728,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3118,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2335,"title":{},"body":{"index.html":{},"license.html":{}}}],["post",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["post('admin",{"_index":2116,"title":{},"body":{"controllers/UserController.html":{}}}],["post('locus",{"_index":1130,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["post('name",{"_index":1191,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["post('refresh",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('replace",{"_index":1289,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["post('sign",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('symbol",{"_index":1347,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["post('xref",{"_index":1396,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["post()@role(roletypes.admin)@apibearerauth()@apioperation({summary",{"_index":899,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{}}}],["post()@role(roletypes.curator)@apibearerauth()@apioperation({summary",{"_index":1655,"title":{},"body":{"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["post()@role(roletypes.curator)@apioperation({summary",{"_index":1054,"title":{},"body":{"controllers/GeneController.html":{}}}],["post_update_value",{"_index":1079,"title":{},"body":{"entities/GeneHistory.html":{}}}],["postgres",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["potri.001g000100",{"_index":597,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["potri.001g000100'})@isoptional()@isstring",{"_index":593,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["power",{"_index":2691,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2445,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3004,"title":{},"body":{"license.html":{}}}],["pre_update_value",{"_index":1080,"title":{},"body":{"entities/GeneHistory.html":{}}}],["preamble",{"_index":2434,"title":{},"body":{"license.html":{}}}],["precise",{"_index":2513,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2965,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":159,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"license.html":{}}}],["prefix",{"_index":433,"title":{},"body":{"controllers/AssemblyController.html":{},"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneNoteController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocationController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SpeciesController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["present",{"_index":3070,"title":{},"body":{"license.html":{}}}],["presents",{"_index":2579,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2884,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":2839,"title":{},"body":{"license.html":{}}}],["previous",{"_index":696,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateSymbolDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["previous_id",{"_index":1266,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["previousgene",{"_index":1260,"title":{},"body":{"entities/GeneReplacement.html":{},"injectables/GeneReplacementService.html":{}}}],["previousid",{"_index":689,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"entities/GeneReplacement.html":{}}}],["previouspage",{"_index":1824,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["price",{"_index":2458,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3035,"title":{},"body":{"license.html":{}}}],["primary",{"_index":1464,"title":{},"body":{"classes/GetUserParamsDto.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["primarycolumn",{"_index":1268,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["primarygeneratedcolumn",{"_index":427,"title":{},"body":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["primarygeneratedcolumn({type",{"_index":405,"title":{},"body":{"entities/Assembly.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/Role.html":{},"entities/Species.html":{},"entities/User.html":{}}}],["prior",{"_index":2929,"title":{},"body":{"license.html":{}}}],["private",{"_index":224,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"license.html":{}}}],["problems",{"_index":3073,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2832,"title":{},"body":{"license.html":{}}}],["proceed",{"_index":211,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["process",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{}}}],["process.env.node_env",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["procuring",{"_index":3024,"title":{},"body":{"license.html":{}}}],["produce",{"_index":2611,"title":{},"body":{"license.html":{}}}],["product",{"_index":730,"title":{},"body":{"classes/CreateLocusTypeDto.html":{},"license.html":{}}}],["production",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["products",{"_index":3036,"title":{},"body":{"license.html":{}}}],["profileconfig",{"_index":2133,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["profileconfiguration",{"_index":2145,"title":{},"body":{"injectables/UserService.html":{}}}],["program",{"_index":2454,"title":{},"body":{"license.html":{}}}],["program's",{"_index":2701,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3159,"title":{},"body":{"license.html":{}}}],["programming",{"_index":2591,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2464,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2302,"title":{},"body":{"index.html":{}}}],["prohibit",{"_index":2661,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":2687,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3030,"title":{},"body":{"license.html":{}}}],["project",{"_index":2312,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":2582,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":2571,"title":{},"body":{"license.html":{}}}],["promise",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["promise.all",{"_index":1451,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["promise.resolve",{"_index":1900,"title":{},"body":{"guards/RoleGuard.html":{}}}],["propagate",{"_index":2540,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2950,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2552,"title":{},"body":{"license.html":{}}}],["properties",{"_index":118,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"entities/Assembly.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"classes/GetUserParamsDto.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"guards/RoleGuard.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{},"properties.html":{}}}],["property",{"_index":221,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"interfaces/Paginated.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"license.html":{}}}],["protect",{"_index":2468,"title":{},"body":{"license.html":{}}}],["protected",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["protecting",{"_index":2670,"title":{},"body":{"license.html":{}}}],["protection",{"_index":2716,"title":{},"body":{"license.html":{}}}],["protein",{"_index":722,"title":{},"body":{"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{}}}],["proto",{"_index":736,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["protocols",{"_index":2860,"title":{},"body":{"license.html":{}}}],["prove",{"_index":3094,"title":{},"body":{"license.html":{}}}],["provide",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SpeciesService.html":{},"license.html":{}}}],["provided",{"_index":561,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["provider",{"_index":553,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"injectables/SymbolService.html":{}}}],["provider/bcrypt.provider",{"_index":531,"title":{},"body":{"modules/AuthModule.html":{}}}],["provider/create",{"_index":1160,"title":{},"body":{"modules/GeneModule.html":{},"injectables/GeneService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["provider/find",{"_index":2130,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["provider/generate",{"_index":534,"title":{},"body":{"modules/AuthModule.html":{}}}],["provider/hashing.provider",{"_index":529,"title":{},"body":{"modules/AuthModule.html":{}}}],["provider/pagination.provider",{"_index":1796,"title":{},"body":{"modules/PaginationModule.html":{}}}],["provider/refresh",{"_index":536,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["provider/role.service",{"_index":1863,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["provider/sign",{"_index":532,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["provider/species.service",{"_index":1966,"title":{},"body":{"modules/SpeciesModule.html":{}}}],["providers",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["provides",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["providing",{"_index":3062,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2876,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2923,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3080,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3083,"title":{},"body":{"license.html":{}}}],["public",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["publicity",{"_index":2891,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":2500,"title":{},"body":{"license.html":{}}}],["publish",{"_index":2705,"title":{},"body":{"license.html":{}}}],["published",{"_index":2504,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2619,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":487,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["pursuant",{"_index":3020,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":2938,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3092,"title":{},"body":{"license.html":{}}}],["query",{"_index":1660,"title":{},"body":{"controllers/NameController.html":{},"injectables/NameService.html":{},"injectables/PaginationProvider.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{}}}],["query'})@apibearerauth()@useinterceptors(classserializerinterceptor)@role(roletypes.curator",{"_index":2105,"title":{},"body":{"controllers/UserController.html":{}}}],["queryfailederror",{"_index":944,"title":{},"body":{"injectables/ExternalResourceService.html":{},"injectables/LocusGroupService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["questions",{"_index":2364,"title":{},"body":{"index.html":{}}}],["raf",{"_index":735,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["rare",{"_index":743,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["read",{"_index":2401,"title":{},"body":{"index.html":{}}}],["readable",{"_index":2756,"title":{},"body":{"license.html":{}}}],["readily",{"_index":3009,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2864,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["ready",{"_index":2329,"title":{},"body":{"index.html":{}}}],["real",{"_index":2377,"title":{},"body":{"index.html":{}}}],["reason",{"_index":3018,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2771,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":2936,"title":{},"body":{"license.html":{}}}],["receive",{"_index":2461,"title":{},"body":{"license.html":{}}}],["received",{"_index":2735,"title":{},"body":{"license.html":{}}}],["receives",{"_index":2955,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3026,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2845,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3016,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2531,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":2589,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":902,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"guards/RoleGuard.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["recorded",{"_index":1044,"title":{},"body":{"entities/Gene.html":{}}}],["redistribute",{"_index":3137,"title":{},"body":{"license.html":{}}}],["reference",{"_index":2178,"title":{},"body":{"controllers/XrefController.html":{}}}],["references",{"_index":1096,"title":{},"body":{"entities/GeneHistory.html":{},"controllers/XrefController.html":{}}}],["referring",{"_index":2457,"title":{},"body":{"license.html":{}}}],["refers",{"_index":2520,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2268,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1875,"title":{},"body":{"guards/RoleGuard.html":{}}}],["refrain",{"_index":3056,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{}}}],["refreshes",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{}}}],["refreshing",{"_index":1833,"title":{},"body":{"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{}}}],["refreshtoken",{"_index":1450,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"classes/RefreshTokenDto.html":{}}}],["refreshtokendto",{"_index":460,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"coverage.html":{}}}],["refreshtokendto.refreshtoken",{"_index":1841,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["refreshtokens",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{}}}],["refreshtokens(refreshtokendto",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{}}}],["refreshtokensprovider",{"_index":522,"title":{"injectables/RefreshTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{},"coverage.html":{},"overview.html":{}}}],["refseq",{"_index":1491,"title":{},"body":{"entities/Location.html":{}}}],["refseqaccession",{"_index":392,"title":{},"body":{"entities/Assembly.html":{},"entities/Location.html":{}}}],["regard",{"_index":2870,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2730,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":2634,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2922,"title":{},"body":{"license.html":{}}}],["related",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"modules/GeneModule.html":{},"injectables/GeneService.html":{},"modules/RoleModule.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["relationship",{"_index":1129,"title":{},"body":{"controllers/GeneLocusTypeController.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Role.html":{},"entities/User.html":{},"license.html":{}}}],["relationship'})@apiresponse({status",{"_index":1123,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["released",{"_index":2510,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":2494,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2722,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":2511,"title":{},"body":{"license.html":{}}}],["relying",{"_index":3008,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2792,"title":{},"body":{"license.html":{}}}],["remains",{"_index":2455,"title":{},"body":{"license.html":{}}}],["remarks",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{}}}],["remote",{"_index":3058,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3060,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2873,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2872,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":3110,"title":{},"body":{"license.html":{}}}],["rendering",{"_index":1600,"title":{},"body":{"modules/MailModule.html":{}}}],["repair",{"_index":3099,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":693,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{}}}],["replacement",{"_index":1288,"title":{},"body":{"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{}}}],["replacement'})@apiresponse({status",{"_index":1282,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["replacement.controller",{"_index":1295,"title":{},"body":{"modules/GeneReplacementModule.html":{}}}],["replacement.controller.ts",{"_index":1279,"title":{},"body":{"controllers/GeneReplacementController.html":{},"coverage.html":{}}}],["replacement.controller.ts:31",{"_index":1284,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["replacement.dto",{"_index":1287,"title":{},"body":{"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{}}}],["replacement.dto.ts",{"_index":688,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"coverage.html":{}}}],["replacement.dto.ts:11",{"_index":694,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{}}}],["replacement.dto.ts:19",{"_index":698,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{}}}],["replacement.entity",{"_index":1041,"title":{},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"entities/User.html":{}}}],["replacement.entity.ts",{"_index":1259,"title":{},"body":{"entities/GeneReplacement.html":{},"coverage.html":{}}}],["replacement.entity.ts:14",{"_index":1269,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacement.entity.ts:17",{"_index":1273,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacement.entity.ts:20",{"_index":1262,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacement.entity.ts:23",{"_index":1264,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacement.entity.ts:27",{"_index":1267,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacement.entity.ts:31",{"_index":1272,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacement.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["replacement.module.ts",{"_index":1294,"title":{},"body":{"modules/GeneReplacementModule.html":{}}}],["replacement.service",{"_index":1286,"title":{},"body":{"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{}}}],["replacement.service.ts",{"_index":1297,"title":{},"body":{"injectables/GeneReplacementService.html":{},"coverage.html":{}}}],["replacement.service.ts:11",{"_index":1299,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["replacement.service.ts:19",{"_index":1301,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["replacement/dto/create",{"_index":687,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"coverage.html":{}}}],["replacement/gene",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"entities/User.html":{},"coverage.html":{}}}],["replacement_id",{"_index":1271,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["replacementgene",{"_index":1261,"title":{},"body":{"entities/GeneReplacement.html":{},"injectables/GeneReplacementService.html":{}}}],["replacementid",{"_index":690,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{},"entities/GeneReplacement.html":{}}}],["replacing",{"_index":695,"title":{},"body":{"classes/CreateGeneReplacementDto.html":{}}}],["repository",{"_index":663,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RoleService.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"index.html":{}}}],["repository.count",{"_index":1821,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["repository.find",{"_index":1812,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["represent",{"_index":2032,"title":{},"body":{"entities/User.html":{},"license.html":{}}}],["representing",{"_index":115,"title":{},"body":{"interfaces/ActiveUserInterface.html":{}}}],["represents",{"_index":1508,"title":{},"body":{"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Symbol.html":{}}}],["request",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"guards/RoleGuard.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{},"miscellaneous/variables.html":{}}}],["request[request_user_key].sub",{"_index":227,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["request_user_key",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["requesttimeoutexception",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SignInProvider.html":{},"injectables/SymbolService.html":{},"injectables/XrefService.html":{}}}],["requesttimeoutexception(error",{"_index":843,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/LocusTypeService.html":{},"injectables/SignInProvider.html":{},"injectables/XrefService.html":{}}}],["requesttimeoutexception(error.message",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["require",{"_index":2628,"title":{},"body":{"license.html":{}}}],["required",{"_index":223,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/GeneController.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"guards/RoleGuard.html":{},"controllers/SymbolController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"license.html":{}}}],["requirement",{"_index":2723,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":2795,"title":{},"body":{"license.html":{}}}],["requires",{"_index":1058,"title":{},"body":{"controllers/GeneController.html":{},"license.html":{}}}],["requiring",{"_index":2347,"title":{},"body":{"index.html":{},"license.html":{}}}],["reset",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}],["resolved",{"_index":2820,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{},"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{},"injectables/PaginationProvider.html":{}}}],["resource",{"_index":580,"title":{},"body":{"classes/CreateExternalResourceDto.html":{},"classes/CreateXrefDto.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/XrefService.html":{}}}],["resource.controller",{"_index":933,"title":{},"body":{"modules/ExternalResourceModule.html":{}}}],["resource.controller.ts",{"_index":895,"title":{},"body":{"controllers/ExternalResourceController.html":{},"coverage.html":{}}}],["resource.controller.ts:36",{"_index":905,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["resource.controller.ts:60",{"_index":913,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["resource.dto",{"_index":919,"title":{},"body":{"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{}}}],["resource.dto.ts",{"_index":578,"title":{},"body":{"classes/CreateExternalResourceDto.html":{},"coverage.html":{}}}],["resource.dto.ts:11",{"_index":582,"title":{},"body":{"classes/CreateExternalResourceDto.html":{}}}],["resource.entity",{"_index":920,"title":{},"body":{"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"entities/Xref.html":{},"injectables/XrefService.html":{}}}],["resource.entity.ts",{"_index":885,"title":{},"body":{"entities/ExternalResource.html":{},"coverage.html":{}}}],["resource.entity.ts:14",{"_index":888,"title":{},"body":{"entities/ExternalResource.html":{}}}],["resource.entity.ts:17",{"_index":891,"title":{},"body":{"entities/ExternalResource.html":{}}}],["resource.entity.ts:7",{"_index":887,"title":{},"body":{"entities/ExternalResource.html":{}}}],["resource.module",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/XrefModule.html":{}}}],["resource.module.ts",{"_index":932,"title":{},"body":{"modules/ExternalResourceModule.html":{}}}],["resource.service",{"_index":918,"title":{},"body":{"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/XrefService.html":{}}}],["resource.service.ts",{"_index":935,"title":{},"body":{"injectables/ExternalResourceService.html":{},"coverage.html":{}}}],["resource.service.ts:14",{"_index":941,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["resource.service.ts:35",{"_index":943,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["resource.service.ts:8",{"_index":938,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["resource/dto/create",{"_index":577,"title":{},"body":{"classes/CreateExternalResourceDto.html":{},"coverage.html":{}}}],["resource/external",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"entities/Xref.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["resources",{"_index":2358,"title":{},"body":{"index.html":{}}}],["respect",{"_index":2695,"title":{},"body":{"license.html":{}}}],["respective",{"_index":1884,"title":{},"body":{"guards/RoleGuard.html":{}}}],["response",{"_index":864,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{}}}],["response.interceptor",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.ts",{"_index":861,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:16",{"_index":867,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response.interceptor.ts:29",{"_index":870,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response/data",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["responsible",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"modules/RoleModule.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"license.html":{}}}],["restricting",{"_index":2688,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2909,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2907,"title":{},"body":{"license.html":{}}}],["result",{"_index":2488,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":2486,"title":{},"body":{"license.html":{}}}],["results",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["retains",{"_index":2849,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":909,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["retrieved",{"_index":912,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["retrieved.'})@apibadrequestresponse({description",{"_index":911,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/XrefController.html":{}}}],["retrieved.'})@apinotfoundresponse({description",{"_index":1062,"title":{},"body":{"controllers/GeneController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{}}}],["retrieves",{"_index":1663,"title":{},"body":{"controllers/NameController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["return",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/HashingProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["review",{"_index":2287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reviewing",{"_index":3123,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3068,"title":{},"body":{"license.html":{}}}],["right",{"_index":2843,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2092,"title":{},"body":{"controllers/UserController.html":{},"license.html":{}}}],["risk",{"_index":3091,"title":{},"body":{"license.html":{}}}],["role",{"_index":204,"title":{"entities/Role.html":{}},"body":{"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"classes/CreateRoleDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SymbolController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"controllers/XrefController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiresponse({status",{"_index":1858,"title":{},"body":{"controllers/RoleController.html":{}}}],["role(roletypes.admin",{"_index":923,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/UserController.html":{}}}],["role(roletypes.curator",{"_index":1073,"title":{},"body":{"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["role(roletypes.na",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["role(roletypes.user",{"_index":927,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["role.controller",{"_index":1908,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.dto",{"_index":1864,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.dto.ts",{"_index":748,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:19",{"_index":750,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.entity",{"_index":1909,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["role.name",{"_index":826,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{}}}],["role.users",{"_index":2075,"title":{},"body":{"entities/User.html":{}}}],["role/role.module",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["role_type_key",{"_index":1883,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolecontroller",{"_index":1854,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roleguard",{"_index":305,"title":{"guards/RoleGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["roleguard.defaultroletype",{"_index":1896,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roleguardmap",{"_index":1873,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roleid",{"_index":1919,"title":{},"body":{"injectables/RoleService.html":{}}}],["rolemodule",{"_index":264,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/RoleModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolename",{"_index":123,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"classes/CreateRoleDto.html":{},"entities/Role.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rolename.user",{"_index":1853,"title":{},"body":{"entities/Role.html":{}}}],["rolerepository",{"_index":1915,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":120,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["roles.length",{"_index":833,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["roleservice",{"_index":792,"title":{"injectables/RoleService.html":{}},"body":{"injectables/CreateUserProvider.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roletype",{"_index":1892,"title":{},"body":{"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["roletype.map((type",{"_index":1897,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roletypes",{"_index":217,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"guards/RoleGuard.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"controllers/XrefController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roletypes.admin",{"_index":231,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/RoleGuard.html":{}}}],["roletypes.curator",{"_index":858,"title":{},"body":{"injectables/CuratorRoleGuard.html":{},"guards/RoleGuard.html":{}}}],["roletypes.master",{"_index":233,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{}}}],["roletypes.master].includes",{"_index":859,"title":{},"body":{"injectables/CuratorRoleGuard.html":{}}}],["roletypes.master].includes(role.name",{"_index":232,"title":{},"body":{"injectables/AdminRoleGuard.html":{}}}],["roletypes.na",{"_index":1891,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roletypes.user",{"_index":1889,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rom",{"_index":2852,"title":{},"body":{"license.html":{}}}],["route",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":1050,"title":{"routes.html":{}},"body":{"controllers/GeneController.html":{},"modules/GeneModule.html":{},"injectables/NameService.html":{},"controllers/RoleController.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SymbolService.html":{},"routes.html":{}}}],["royalty",{"_index":2971,"title":{},"body":{"license.html":{}}}],["rules",{"_index":2859,"title":{},"body":{"license.html":{}}}],["run",{"_index":2316,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":2499,"title":{},"body":{"license.html":{}}}],["runs",{"_index":2333,"title":{},"body":{"index.html":{},"license.html":{}}}],["rxjs",{"_index":879,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"dependencies.html":{}}}],["safest",{"_index":3139,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2980,"title":{},"body":{"license.html":{}}}],["salt",{"_index":571,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["same",{"_index":2050,"title":{},"body":{"entities/User.html":{},"license.html":{}}}],["satisfy",{"_index":2794,"title":{},"body":{"license.html":{}}}],["save",{"_index":840,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["saying",{"_index":2790,"title":{},"body":{"license.html":{}}}],["scalable",{"_index":2307,"title":{},"body":{"index.html":{}}}],["school",{"_index":3160,"title":{},"body":{"license.html":{}}}],["scientific",{"_index":599,"title":{},"body":{"classes/CreateGeneDto.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{}}}],["scientificname",{"_index":1946,"title":{},"body":{"entities/Species.html":{},"injectables/SpeciesService.html":{}}}],["sciname",{"_index":1976,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["scope",{"_index":3029,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":2615,"title":{},"body":{"license.html":{}}}],["search",{"_index":1664,"title":{},"body":{"controllers/NameController.html":{},"controllers/SymbolController.html":{}}}],["secondarily",{"_index":2543,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":2475,"title":{},"body":{"license.html":{}}}],["seconds",{"_index":1437,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["secret",{"_index":1447,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["section",{"_index":2668,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2753,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1613,"title":{},"body":{"modules/MailModule.html":{}}}],["see",{"_index":3147,"title":{},"body":{"license.html":{}}}],["sell",{"_index":2996,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2979,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":2524,"title":{},"body":{"license.html":{}}}],["send",{"_index":1593,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["sending",{"_index":797,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["senduserwelcome",{"_index":1626,"title":{},"body":{"injectables/MailService.html":{}}}],["senduserwelcome(user",{"_index":1631,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":1778,"title":{},"body":{"classes/PaginationDto.html":{}}}],["separable",{"_index":2803,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2738,"title":{},"body":{"license.html":{}}}],["separately",{"_index":2734,"title":{},"body":{"license.html":{}}}],["serine/threonine",{"_index":738,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["server",{"_index":1596,"title":{},"body":{"modules/MailModule.html":{},"classes/PaginationDto.html":{},"index.html":{},"license.html":{}}}],["servers",{"_index":2487,"title":{},"body":{"license.html":{}}}],["serves",{"_index":2602,"title":{},"body":{"license.html":{}}}],["service",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GeneService.html":{},"injectables/GenerateTokensProvider.html":{},"controllers/LocusGroupController.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"license.html":{}}}],["services",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SpeciesService.html":{}}}],["servicing",{"_index":3098,"title":{},"body":{"license.html":{}}}],["set",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{},"classes/PaginationDto.html":{},"injectables/UserRoleGuard.html":{}}}],["setmetadata(role_type_key",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":2298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":2313,"title":{},"body":{"index.html":{}}}],["several",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":2673,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1777,"title":{},"body":{"classes/PaginationDto.html":{}}}],["share",{"_index":2448,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2624,"title":{},"body":{"license.html":{}}}],["side",{"_index":2308,"title":{},"body":{"index.html":{}}}],["sign",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{},"license.html":{}}}],["signed",{"_index":1440,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["significant",{"_index":2830,"title":{},"body":{"license.html":{}}}],["signin",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin(signindto",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signindto",{"_index":491,"title":{"classes/SigninDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":1936,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signing",{"_index":1424,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{}}}],["signinprovider",{"_index":523,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["signs",{"_index":786,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/SignInProvider.html":{}}}],["signtoken",{"_index":1423,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["signtoken(userid",{"_index":1432,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["similar",{"_index":2506,"title":{},"body":{"license.html":{}}}],["simple",{"_index":2349,"title":{},"body":{"index.html":{}}}],["simultaneously",{"_index":3051,"title":{},"body":{"license.html":{}}}],["single",{"_index":3022,"title":{},"body":{"license.html":{}}}],["skip",{"_index":1813,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["smtp",{"_index":1595,"title":{},"body":{"modules/MailModule.html":{}}}],["soft",{"_index":1031,"title":{},"body":{"entities/Gene.html":{}}}],["software",{"_index":2422,"title":{},"body":{"license.html":{}}}],["sold",{"_index":2814,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2652,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2665,"title":{},"body":{"license.html":{}}}],["solutions",{"_index":3155,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AssemblyController.html":{},"modules/AssemblyModule.html":{},"injectables/AssemblyService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"modules/NameModule.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":2768,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2456,"title":{},"body":{"license.html":{}}}],["special",{"_index":186,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"license.html":{}}}],["species",{"_index":393,"title":{"entities/Species.html":{}},"body":{"entities/Assembly.html":{},"classes/CreateGeneDto.html":{},"injectables/CreateGeneProvider.html":{},"entities/Gene.html":{},"entities/Species.html":{},"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"coverage.html":{}}}],["species.assemblies",{"_index":419,"title":{},"body":{"entities/Assembly.html":{}}}],["species.controller",{"_index":1965,"title":{},"body":{"modules/SpeciesModule.html":{}}}],["species.entity",{"_index":1967,"title":{},"body":{"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{}}}],["species.genes",{"_index":1021,"title":{},"body":{"entities/Gene.html":{}}}],["species/species.module",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["speciescontroller",{"_index":1957,"title":{"controllers/SpeciesController.html":{}},"body":{"controllers/SpeciesController.html":{},"modules/SpeciesModule.html":{},"coverage.html":{}}}],["speciesmodule",{"_index":265,"title":{"modules/SpeciesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneModule.html":{},"modules/SpeciesModule.html":{},"modules.html":{},"overview.html":{}}}],["speciesrepository",{"_index":1973,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["speciesscientificname",{"_index":588,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["speciesservice",{"_index":661,"title":{"injectables/SpeciesService.html":{}},"body":{"injectables/CreateGeneProvider.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"coverage.html":{},"overview.html":{}}}],["specific",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{},"classes/GetUserParamsDto.html":{},"controllers/UserController.html":{},"license.html":{}}}],["specifically",{"_index":2438,"title":{},"body":{"license.html":{}}}],["specified",{"_index":2297,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["specifies",{"_index":3076,"title":{},"body":{"license.html":{}}}],["specify",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["spirit",{"_index":3069,"title":{},"body":{"license.html":{}}}],["split",{"_index":2289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sponsors",{"_index":2397,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":3175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":3177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constant.ts",{"_index":3176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../basic",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../gene",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":2294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nomenclature",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":3178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assembly/assembly.controller.ts",{"_index":432,"title":{},"body":{"controllers/AssemblyController.html":{},"coverage.html":{}}}],["src/assembly/assembly.entity",{"_index":1493,"title":{},"body":{"entities/Location.html":{},"entities/Species.html":{}}}],["src/assembly/assembly.entity.ts",{"_index":386,"title":{},"body":{"entities/Assembly.html":{},"coverage.html":{}}}],["src/assembly/assembly.entity.ts:103",{"_index":414,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:22",{"_index":407,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:34",{"_index":415,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:46",{"_index":401,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:58",{"_index":417,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:70",{"_index":397,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:82",{"_index":416,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.entity.ts:91",{"_index":420,"title":{},"body":{"entities/Assembly.html":{}}}],["src/assembly/assembly.module.ts",{"_index":438,"title":{},"body":{"modules/AssemblyModule.html":{}}}],["src/assembly/assembly.service.ts",{"_index":443,"title":{},"body":{"injectables/AssemblyService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:67",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":2132,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/config/jwt.config",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["src/auth/constant/auth.constant",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["src/auth/constant/auth.constant.ts",{"_index":2218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/active",{"_index":1067,"title":{},"body":{"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.decorator",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["src/auth/decorator/role.decorator.ts",{"_index":2221,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/refresh",{"_index":1831,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts",{"_index":1940,"title":{},"body":{"classes/SigninDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts:19",{"_index":1942,"title":{},"body":{"classes/SigninDto.html":{}}}],["src/auth/dto/signin.dto.ts:32",{"_index":1943,"title":{},"body":{"classes/SigninDto.html":{}}}],["src/auth/enum/role",{"_index":218,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"guards/RoleGuard.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"controllers/XrefController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guard/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guard/role/admin.role.guard.ts",{"_index":201,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"coverage.html":{}}}],["src/auth/guard/role/admin.role.guard.ts:23",{"_index":207,"title":{},"body":{"injectables/AdminRoleGuard.html":{}}}],["src/auth/guard/role/admin.role.guard.ts:50",{"_index":208,"title":{},"body":{"injectables/AdminRoleGuard.html":{}}}],["src/auth/guard/role/curator.role.guard.ts",{"_index":854,"title":{},"body":{"injectables/CuratorRoleGuard.html":{},"coverage.html":{}}}],["src/auth/guard/role/curator.role.guard.ts:23",{"_index":856,"title":{},"body":{"injectables/CuratorRoleGuard.html":{}}}],["src/auth/guard/role/curator.role.guard.ts:48",{"_index":857,"title":{},"body":{"injectables/CuratorRoleGuard.html":{}}}],["src/auth/guard/role/master.role.guard.ts",{"_index":1641,"title":{},"body":{"guards/MasterRoleGuard.html":{},"coverage.html":{}}}],["src/auth/guard/role/master.role.guard.ts:25",{"_index":1642,"title":{},"body":{"guards/MasterRoleGuard.html":{}}}],["src/auth/guard/role/master.role.guard.ts:51",{"_index":1643,"title":{},"body":{"guards/MasterRoleGuard.html":{}}}],["src/auth/guard/role/role.guard.ts",{"_index":1870,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/auth/guard/role/role.guard.ts:28",{"_index":1876,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/guard/role/role.guard.ts:75",{"_index":1878,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/guard/role/user.role.guard.ts",{"_index":2137,"title":{},"body":{"injectables/UserRoleGuard.html":{},"coverage.html":{}}}],["src/auth/guard/role/user.role.guard.ts:23",{"_index":2138,"title":{},"body":{"injectables/UserRoleGuard.html":{}}}],["src/auth/guard/role/user.role.guard.ts:48",{"_index":2139,"title":{},"body":{"injectables/UserRoleGuard.html":{}}}],["src/auth/interface/active",{"_index":113,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/provider/bcrypt.provider.ts",{"_index":550,"title":{},"body":{"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["src/auth/provider/bcrypt.provider.ts:17",{"_index":566,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/provider/bcrypt.provider.ts:28",{"_index":559,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/provider/generate",{"_index":1419,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["src/auth/provider/hashing.provider",{"_index":806,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["src/auth/provider/hashing.provider.ts",{"_index":1467,"title":{},"body":{"injectables/HashingProvider.html":{},"coverage.html":{}}}],["src/auth/provider/hashing.provider.ts:19",{"_index":1472,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/provider/hashing.provider.ts:27",{"_index":1471,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/provider/refresh",{"_index":1836,"title":{},"body":{"injectables/RefreshTokensProvider.html":{},"coverage.html":{}}}],["src/auth/provider/sign",{"_index":1928,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/common/enum/basic",{"_index":630,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"miscellaneous/enumerations.html":{}}}],["src/common/enum/nomenclature",{"_index":646,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"miscellaneous/enumerations.html":{}}}],["src/common/interceptor/data",{"_index":860,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/pagination/dto/pagination.dto.ts",{"_index":1776,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/common/pagination/dto/pagination.dto.ts:19",{"_index":1781,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/dto/pagination.dto.ts:33",{"_index":1782,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/interface/paginated.interface.ts",{"_index":1763,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/common/pagination/pagination.module",{"_index":1163,"title":{},"body":{"modules/GeneModule.html":{}}}],["src/common/pagination/pagination.module.ts",{"_index":1795,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/common/pagination/provider/pagination.provider.ts",{"_index":1797,"title":{},"body":{"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["src/common/pagination/provider/pagination.provider.ts:12",{"_index":1801,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/common/pagination/provider/pagination.provider.ts:30",{"_index":1803,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/external",{"_index":576,"title":{},"body":{"classes/CreateExternalResourceDto.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"modules/ExternalResourceModule.html":{},"injectables/ExternalResourceService.html":{},"entities/Xref.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["src/gene",{"_index":617,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"modules/GeneHistoryModule.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"modules/GeneModule.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"modules/GeneNameModule.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"modules/GeneNoteModule.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"modules/GeneReplacementModule.html":{},"injectables/GeneReplacementService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{},"coverage.html":{}}}],["src/gene/dto/create",{"_index":585,"title":{},"body":{"classes/CreateGeneDto.html":{},"coverage.html":{}}}],["src/gene/enum/gene",{"_index":2286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/gene/gene.controller.ts",{"_index":1049,"title":{},"body":{"controllers/GeneController.html":{},"coverage.html":{}}}],["src/gene/gene.controller.ts:42",{"_index":1057,"title":{},"body":{"controllers/GeneController.html":{}}}],["src/gene/gene.controller.ts:70",{"_index":1063,"title":{},"body":{"controllers/GeneController.html":{}}}],["src/gene/gene.entity",{"_index":1095,"title":{},"body":{"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"entities/Species.html":{},"entities/User.html":{}}}],["src/gene/gene.entity.ts",{"_index":965,"title":{},"body":{"entities/Gene.html":{},"coverage.html":{}}}],["src/gene/gene.entity.ts:102",{"_index":1014,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:116",{"_index":1009,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:123",{"_index":996,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:126",{"_index":993,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:129",{"_index":1001,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:135",{"_index":1004,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:141",{"_index":1006,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:31",{"_index":1011,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:41",{"_index":1022,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:48",{"_index":986,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:55",{"_index":980,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:62",{"_index":989,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:69",{"_index":1018,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:76",{"_index":1030,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.entity.ts:90",{"_index":1023,"title":{},"body":{"entities/Gene.html":{}}}],["src/gene/gene.module",{"_index":1138,"title":{},"body":{"modules/GeneLocusTypeModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{}}}],["src/gene/gene.module.ts",{"_index":1158,"title":{},"body":{"modules/GeneModule.html":{}}}],["src/gene/gene.service",{"_index":1146,"title":{},"body":{"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{}}}],["src/gene/gene.service.ts",{"_index":1308,"title":{},"body":{"injectables/GeneService.html":{},"coverage.html":{}}}],["src/gene/gene.service.ts:13",{"_index":1313,"title":{},"body":{"injectables/GeneService.html":{}}}],["src/gene/gene.service.ts:31",{"_index":1315,"title":{},"body":{"injectables/GeneService.html":{}}}],["src/gene/gene.service.ts:44",{"_index":1317,"title":{},"body":{"injectables/GeneService.html":{}}}],["src/gene/provider/create",{"_index":658,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"coverage.html":{}}}],["src/location/location.controller.ts",{"_index":1495,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{}}}],["src/location/location.entity",{"_index":422,"title":{},"body":{"entities/Assembly.html":{}}}],["src/location/location.entity.ts",{"_index":1473,"title":{},"body":{"entities/Location.html":{},"coverage.html":{}}}],["src/location/location.entity.ts:14",{"_index":1488,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.entity.ts:26",{"_index":1489,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.entity.ts:38",{"_index":1490,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.entity.ts:50",{"_index":1486,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.entity.ts:61",{"_index":1482,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.entity.ts:71",{"_index":1492,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.entity.ts:79",{"_index":1479,"title":{},"body":{"entities/Location.html":{}}}],["src/location/location.module.ts",{"_index":1500,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/location/location.service.ts",{"_index":1505,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/locus",{"_index":718,"title":{},"body":{"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"entities/GeneLocusType.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"modules/LocusGroupModule.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":1591,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service",{"_index":807,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["src/mail/mail.service.ts",{"_index":1625,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:20",{"_index":1632,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:9",{"_index":1629,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/name/dto/create",{"_index":733,"title":{},"body":{"classes/CreateNameDto.html":{},"coverage.html":{}}}],["src/name/name.controller.ts",{"_index":1651,"title":{},"body":{"controllers/NameController.html":{},"coverage.html":{}}}],["src/name/name.controller.ts:58",{"_index":1662,"title":{},"body":{"controllers/NameController.html":{}}}],["src/name/name.controller.ts:81",{"_index":1656,"title":{},"body":{"controllers/NameController.html":{}}}],["src/name/name.entity",{"_index":1178,"title":{},"body":{"entities/GeneName.html":{},"injectables/GeneNameService.html":{}}}],["src/name/name.entity.ts",{"_index":1644,"title":{},"body":{"entities/Name.html":{},"coverage.html":{}}}],["src/name/name.entity.ts:14",{"_index":1647,"title":{},"body":{"entities/Name.html":{}}}],["src/name/name.entity.ts:27",{"_index":1648,"title":{},"body":{"entities/Name.html":{}}}],["src/name/name.entity.ts:34",{"_index":1646,"title":{},"body":{"entities/Name.html":{}}}],["src/name/name.module",{"_index":1198,"title":{},"body":{"modules/GeneNameModule.html":{}}}],["src/name/name.module.ts",{"_index":1679,"title":{},"body":{"modules/NameModule.html":{}}}],["src/name/name.service",{"_index":1206,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["src/name/name.service.ts",{"_index":1681,"title":{},"body":{"injectables/NameService.html":{},"coverage.html":{}}}],["src/name/name.service.ts:115",{"_index":1696,"title":{},"body":{"injectables/NameService.html":{}}}],["src/name/name.service.ts:13",{"_index":1685,"title":{},"body":{"injectables/NameService.html":{}}}],["src/name/name.service.ts:28",{"_index":1688,"title":{},"body":{"injectables/NameService.html":{}}}],["src/name/name.service.ts:90",{"_index":1690,"title":{},"body":{"injectables/NameService.html":{}}}],["src/note/dto/create",{"_index":741,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["src/note/note.controller.ts",{"_index":1720,"title":{},"body":{"controllers/NoteController.html":{},"coverage.html":{}}}],["src/note/note.controller.ts:40",{"_index":1727,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:57",{"_index":1724,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.entity",{"_index":1231,"title":{},"body":{"entities/GeneNote.html":{}}}],["src/note/note.entity.ts",{"_index":1713,"title":{},"body":{"entities/Note.html":{},"coverage.html":{}}}],["src/note/note.entity.ts:14",{"_index":1718,"title":{},"body":{"entities/Note.html":{}}}],["src/note/note.entity.ts:17",{"_index":1715,"title":{},"body":{"entities/Note.html":{}}}],["src/note/note.entity.ts:7",{"_index":1716,"title":{},"body":{"entities/Note.html":{}}}],["src/note/note.module",{"_index":1254,"title":{},"body":{"modules/GeneNoteModule.html":{}}}],["src/note/note.module.ts",{"_index":1738,"title":{},"body":{"modules/NoteModule.html":{}}}],["src/note/note.service",{"_index":1238,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["src/note/note.service.ts",{"_index":1740,"title":{},"body":{"injectables/NoteService.html":{},"coverage.html":{}}}],["src/note/note.service.ts:12",{"_index":1742,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:18",{"_index":1745,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:34",{"_index":1753,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:65",{"_index":1750,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:84",{"_index":1747,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/role/dto/create",{"_index":747,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/role/enum/role",{"_index":128,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/role/provider/role.service",{"_index":809,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["src/role/provider/role.service.ts",{"_index":1911,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/provider/role.service.ts:11",{"_index":1914,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/provider/role.service.ts:23",{"_index":1916,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/provider/role.service.ts:31",{"_index":1921,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/provider/role.service.ts:43",{"_index":1918,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.controller.ts",{"_index":1855,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:29",{"_index":1862,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.entity",{"_index":808,"title":{},"body":{"injectables/CreateUserProvider.html":{},"entities/User.html":{}}}],["src/role/role.entity.ts",{"_index":1848,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/role/role.entity.ts:14",{"_index":1849,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:26",{"_index":1850,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:34",{"_index":1851,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.module",{"_index":1137,"title":{},"body":{"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{}}}],["src/role/role.module.ts",{"_index":1907,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/species/provider/species.service",{"_index":674,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["src/species/provider/species.service.ts",{"_index":1969,"title":{},"body":{"injectables/SpeciesService.html":{},"coverage.html":{}}}],["src/species/provider/species.service.ts:10",{"_index":1972,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["src/species/provider/species.service.ts:27",{"_index":1975,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["src/species/species.controller.ts",{"_index":1958,"title":{},"body":{"controllers/SpeciesController.html":{},"coverage.html":{}}}],["src/species/species.entity",{"_index":421,"title":{},"body":{"entities/Assembly.html":{},"injectables/CreateGeneProvider.html":{},"entities/Gene.html":{}}}],["src/species/species.entity.ts",{"_index":1944,"title":{},"body":{"entities/Species.html":{},"coverage.html":{}}}],["src/species/species.entity.ts:15",{"_index":1954,"title":{},"body":{"entities/Species.html":{}}}],["src/species/species.entity.ts:27",{"_index":1950,"title":{},"body":{"entities/Species.html":{}}}],["src/species/species.entity.ts:39",{"_index":1956,"title":{},"body":{"entities/Species.html":{}}}],["src/species/species.entity.ts:46",{"_index":1948,"title":{},"body":{"entities/Species.html":{}}}],["src/species/species.entity.ts:53",{"_index":1953,"title":{},"body":{"entities/Species.html":{}}}],["src/species/species.module",{"_index":1162,"title":{},"body":{"modules/GeneModule.html":{}}}],["src/species/species.module.ts",{"_index":1964,"title":{},"body":{"modules/SpeciesModule.html":{}}}],["src/symbol/dto/create",{"_index":752,"title":{},"body":{"classes/CreateSymbolDto.html":{},"coverage.html":{}}}],["src/symbol/symbol.controller.ts",{"_index":1986,"title":{},"body":{"controllers/SymbolController.html":{},"coverage.html":{}}}],["src/symbol/symbol.controller.ts:59",{"_index":1992,"title":{},"body":{"controllers/SymbolController.html":{}}}],["src/symbol/symbol.controller.ts:82",{"_index":1990,"title":{},"body":{"controllers/SymbolController.html":{}}}],["src/symbol/symbol.entity",{"_index":1335,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["src/symbol/symbol.entity.ts",{"_index":1980,"title":{},"body":{"entities/Symbol.html":{},"coverage.html":{}}}],["src/symbol/symbol.entity.ts:14",{"_index":1983,"title":{},"body":{"entities/Symbol.html":{}}}],["src/symbol/symbol.entity.ts:27",{"_index":1984,"title":{},"body":{"entities/Symbol.html":{}}}],["src/symbol/symbol.entity.ts:34",{"_index":1982,"title":{},"body":{"entities/Symbol.html":{}}}],["src/symbol/symbol.module",{"_index":1354,"title":{},"body":{"modules/GeneSymbolModule.html":{}}}],["src/symbol/symbol.module.ts",{"_index":2004,"title":{},"body":{"modules/SymbolModule.html":{}}}],["src/symbol/symbol.service",{"_index":1362,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["src/symbol/symbol.service.ts",{"_index":2006,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["src/symbol/symbol.service.ts:118",{"_index":2018,"title":{},"body":{"injectables/SymbolService.html":{}}}],["src/symbol/symbol.service.ts:16",{"_index":2010,"title":{},"body":{"injectables/SymbolService.html":{}}}],["src/symbol/symbol.service.ts:31",{"_index":2013,"title":{},"body":{"injectables/SymbolService.html":{}}}],["src/symbol/symbol.service.ts:93",{"_index":2015,"title":{},"body":{"injectables/SymbolService.html":{}}}],["src/user/dto/admin",{"_index":132,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":766,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/get",{"_index":1458,"title":{},"body":{"classes/GetUserParamsDto.html":{},"coverage.html":{}}}],["src/user/provider/create",{"_index":783,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["src/user/provider/find",{"_index":953,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":2082,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:112",{"_index":2100,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:60",{"_index":2106,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:78",{"_index":2091,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:96",{"_index":2097,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.entity",{"_index":673,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"entities/GeneReplacement.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"entities/Role.html":{}}}],["src/user/user.entity.ts",{"_index":2031,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:110",{"_index":2077,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:117",{"_index":2063,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:124",{"_index":2065,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:131",{"_index":2067,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:138",{"_index":2069,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:145",{"_index":2053,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:152",{"_index":2055,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:155",{"_index":2057,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:158",{"_index":2059,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:161",{"_index":2061,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:26",{"_index":2070,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:37",{"_index":2045,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:48",{"_index":2051,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:59",{"_index":2071,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:72",{"_index":2048,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:84",{"_index":2043,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:96",{"_index":2074,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.module",{"_index":537,"title":{},"body":{"modules/AuthModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{}}}],["src/user/user.module.ts",{"_index":2127,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":216,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["src/user/user.service.ts",{"_index":2142,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:105",{"_index":2154,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:112",{"_index":2150,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":2146,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:40",{"_index":2152,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:64",{"_index":2149,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:77",{"_index":2147,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:84",{"_index":2153,"title":{},"body":{"injectables/UserService.html":{}}}],["src/xref/dto/create",{"_index":846,"title":{},"body":{"classes/CreateXrefDto.html":{},"coverage.html":{}}}],["src/xref/xref.controller.ts",{"_index":2174,"title":{},"body":{"controllers/XrefController.html":{},"coverage.html":{}}}],["src/xref/xref.controller.ts:34",{"_index":2179,"title":{},"body":{"controllers/XrefController.html":{}}}],["src/xref/xref.controller.ts:56",{"_index":2181,"title":{},"body":{"controllers/XrefController.html":{}}}],["src/xref/xref.entity",{"_index":892,"title":{},"body":{"entities/ExternalResource.html":{},"entities/GeneXref.html":{}}}],["src/xref/xref.entity.ts",{"_index":2165,"title":{},"body":{"entities/Xref.html":{},"coverage.html":{}}}],["src/xref/xref.entity.ts:14",{"_index":2172,"title":{},"body":{"entities/Xref.html":{}}}],["src/xref/xref.entity.ts:22",{"_index":2167,"title":{},"body":{"entities/Xref.html":{}}}],["src/xref/xref.entity.ts:31",{"_index":2169,"title":{},"body":{"entities/Xref.html":{}}}],["src/xref/xref.entity.ts:34",{"_index":2171,"title":{},"body":{"entities/Xref.html":{}}}],["src/xref/xref.module",{"_index":1403,"title":{},"body":{"modules/GeneXrefModule.html":{}}}],["src/xref/xref.module.ts",{"_index":2192,"title":{},"body":{"modules/XrefModule.html":{}}}],["src/xref/xref.service",{"_index":1411,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["src/xref/xref.service.ts",{"_index":2194,"title":{},"body":{"injectables/XrefService.html":{},"coverage.html":{}}}],["src/xref/xref.service.ts:15",{"_index":2197,"title":{},"body":{"injectables/XrefService.html":{}}}],["src/xref/xref.service.ts:22",{"_index":2200,"title":{},"body":{"injectables/XrefService.html":{}}}],["src/xref/xref.service.ts:45",{"_index":2201,"title":{},"body":{"injectables/XrefService.html":{}}}],["standard",{"_index":2588,"title":{},"body":{"license.html":{}}}],["standards",{"_index":2590,"title":{},"body":{"license.html":{}}}],["stands",{"_index":1016,"title":{},"body":{"entities/Gene.html":{}}}],["start",{"_index":2318,"title":{},"body":{"index.html":{},"license.html":{}}}],["start:dev",{"_index":2321,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2322,"title":{},"body":{"index.html":{}}}],["started",{"_index":2301,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2311,"title":{},"body":{"index.html":{}}}],["state",{"_index":3141,"title":{},"body":{"license.html":{}}}],["stated",{"_index":2640,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2911,"title":{},"body":{"license.html":{}}}],["statements",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1871,"title":{},"body":{"guards/RoleGuard.html":{}}}],["stating",{"_index":2708,"title":{},"body":{"license.html":{}}}],["status",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"controllers/ExternalResourceController.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/XrefController.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["status.enum",{"_index":613,"title":{},"body":{"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["status.enum.ts",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2383,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2331,"title":{},"body":{"index.html":{},"license.html":{}}}],["still",{"_index":154,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["storage",{"_index":2745,"title":{},"body":{"license.html":{}}}],["store",{"_index":966,"title":{},"body":{"entities/Gene.html":{},"entities/Role.html":{}}}],["straightforward",{"_index":2345,"title":{},"body":{"index.html":{}}}],["strategies",{"_index":2273,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":1624,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"entities/Assembly.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"entities/ExternalResource.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneXref.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"interfaces/Paginated.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":841,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["string/varchar",{"_index":2046,"title":{},"body":{"entities/User.html":{}}}],["sub",{"_index":121,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"modules/AppModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["subdividing",{"_index":2961,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1637,"title":{},"body":{"injectables/MailService.html":{},"license.html":{}}}],["sublicenses",{"_index":2992,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":2667,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":2627,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":2777,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2826,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":2959,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1860,"title":{},"body":{"controllers/RoleController.html":{}}}],["successfully",{"_index":903,"title":{},"body":{"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/SymbolController.html":{},"controllers/XrefController.html":{}}}],["such",{"_index":2495,"title":{},"body":{"license.html":{}}}],["sue",{"_index":3006,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2836,"title":{},"body":{"license.html":{}}}],["summary",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"controllers/RoleController.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"controllers/XrefController.html":{}}}],["super(jwtservice",{"_index":225,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["supplement",{"_index":2865,"title":{},"body":{"license.html":{}}}],["support",{"_index":2365,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["supports",{"_index":2786,"title":{},"body":{"license.html":{}}}],["sure",{"_index":1217,"title":{},"body":{"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"license.html":{}}}],["surrender",{"_index":3046,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2910,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3113,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3164,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["symbol",{"_index":702,"title":{"entities/Symbol.html":{}},"body":{"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateSymbolDto.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["symbol'})@apiresponse({status",{"_index":1341,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["symbol.controller",{"_index":1353,"title":{},"body":{"modules/GeneSymbolModule.html":{},"modules/SymbolModule.html":{}}}],["symbol.controller.ts",{"_index":1338,"title":{},"body":{"controllers/GeneSymbolController.html":{},"coverage.html":{}}}],["symbol.controller.ts:29",{"_index":1343,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["symbol.dto",{"_index":1346,"title":{},"body":{"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{}}}],["symbol.dto.ts",{"_index":701,"title":{},"body":{"classes/CreateGeneSymbolDto.html":{},"classes/CreateSymbolDto.html":{},"coverage.html":{}}}],["symbol.dto.ts:14",{"_index":706,"title":{},"body":{"classes/CreateGeneSymbolDto.html":{}}}],["symbol.dto.ts:18",{"_index":761,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["symbol.dto.ts:23",{"_index":704,"title":{},"body":{"classes/CreateGeneSymbolDto.html":{}}}],["symbol.dto.ts:31",{"_index":703,"title":{},"body":{"classes/CreateGeneSymbolDto.html":{}}}],["symbol.dto.ts:39",{"_index":705,"title":{},"body":{"classes/CreateGeneSymbolDto.html":{}}}],["symbol.entity",{"_index":1037,"title":{},"body":{"entities/Gene.html":{},"modules/GeneModule.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"entities/User.html":{}}}],["symbol.entity.ts",{"_index":1322,"title":{},"body":{"entities/GeneSymbol.html":{},"coverage.html":{}}}],["symbol.entity.ts:24",{"_index":1328,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:32",{"_index":1333,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:40",{"_index":1330,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:43",{"_index":1327,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:46",{"_index":1332,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:49",{"_index":1323,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:52",{"_index":1329,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:55",{"_index":1334,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:58",{"_index":1324,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.entity.ts:61",{"_index":1325,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.genesymbols",{"_index":1331,"title":{},"body":{"entities/GeneSymbol.html":{}}}],["symbol.module",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["symbol.module.ts",{"_index":1352,"title":{},"body":{"modules/GeneSymbolModule.html":{}}}],["symbol.service",{"_index":1345,"title":{},"body":{"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{}}}],["symbol.service.ts",{"_index":1356,"title":{},"body":{"injectables/GeneSymbolService.html":{},"coverage.html":{}}}],["symbol.service.ts:12",{"_index":1359,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["symbol.service.ts:21",{"_index":1361,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["symbol.symbol",{"_index":2025,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol/dto/create",{"_index":700,"title":{},"body":{"classes/CreateGeneSymbolDto.html":{},"coverage.html":{}}}],["symbol/gene",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"entities/Gene.html":{},"modules/GeneModule.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"modules/GeneSymbolModule.html":{},"injectables/GeneSymbolService.html":{},"entities/Symbol.html":{},"entities/User.html":{},"coverage.html":{}}}],["symbol/symbol.module",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["symbol/{query",{"_index":1996,"title":{},"body":{"controllers/SymbolController.html":{}}}],["symbolcontroller",{"_index":1985,"title":{"controllers/SymbolController.html":{}},"body":{"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"coverage.html":{}}}],["symbolic",{"_index":759,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["symbolid",{"_index":2016,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolmodule",{"_index":266,"title":{"modules/SymbolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneSymbolModule.html":{},"modules/SymbolModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolrepository",{"_index":2011,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbols",{"_index":1010,"title":{},"body":{"entities/Gene.html":{},"entities/Symbol.html":{},"injectables/SymbolService.html":{},"entities/User.html":{}}}],["symbolservice",{"_index":1357,"title":{"injectables/SymbolService.html":{}},"body":{"injectables/GeneSymbolService.html":{},"controllers/SymbolController.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"overview.html":{}}}],["synchronize",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["syncronize",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":1485,"title":{},"body":{"entities/Location.html":{},"license.html":{}}}],["t",{"_index":1434,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["table",{"_index":1045,"title":{},"body":{"entities/Gene.html":{},"classes/GetUserParamsDto.html":{},"entities/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2243,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1816,"title":{},"body":{"injectables/PaginationProvider.html":{},"index.html":{},"license.html":{}}}],["tangible",{"_index":2809,"title":{},"body":{"license.html":{}}}],["team",{"_index":1636,"title":{},"body":{"injectables/MailService.html":{}}}],["technological",{"_index":2676,"title":{},"body":{"license.html":{}}}],["tells",{"_index":2575,"title":{},"body":{"license.html":{}}}],["template",{"_index":1598,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["term",{"_index":2638,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2916,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2937,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2926,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2913,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2514,"title":{},"body":{"license.html":{}}}],["test",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covdeployment",{"_index":2327,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2326,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2323,"title":{},"body":{"index.html":{}}}],["text",{"_index":1717,"title":{},"body":{"entities/Note.html":{}}}],["thanks",{"_index":2396,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1033,"title":{},"body":{"entities/Gene.html":{},"license.html":{}}}],["things",{"_index":2466,"title":{},"body":{"license.html":{}}}],["third",{"_index":2700,"title":{},"body":{"license.html":{}}}],["this.adminroleguard",{"_index":1886,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.authservice.refreshtokens(refreshtokendto",{"_index":516,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":515,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('appconfig.apiversion",{"_index":883,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["this.creategeneprovider.create(creategenedto",{"_index":1320,"title":{},"body":{"injectables/GeneService.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":2162,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createuserprovider.createuserwithrole",{"_index":2161,"title":{},"body":{"injectables/UserService.html":{}}}],["this.curatorroleguard",{"_index":1887,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.externalresourcerepository.create",{"_index":946,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["this.externalresourcerepository.findoneby",{"_index":951,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["this.externalresourcerepository.save(externalresource",{"_index":947,"title":{},"body":{"injectables/ExternalResourceService.html":{}}}],["this.externalresourceservice.create(createexternalresourcedto",{"_index":925,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["this.externalresourceservice.findbyid(id",{"_index":928,"title":{},"body":{"controllers/ExternalResourceController.html":{}}}],["this.extractrequestfromheader(request",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["this.extresservice.findbyid(createxrefdto.extresourceid",{"_index":2204,"title":{},"body":{"injectables/XrefService.html":{}}}],["this.findoneuserbyemailprovider.findonebyemail(email",{"_index":2163,"title":{},"body":{"injectables/UserService.html":{}}}],["this.genelocustyperepository.create",{"_index":1151,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["this.genelocustyperepository.save(genelocustype",{"_index":1153,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["this.genelocustypeservice.create(creategenelocustypedto",{"_index":1131,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["this.genenamerepository.create",{"_index":1212,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["this.genenamerepository.save(genename",{"_index":1215,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["this.genenameservice.create(creategenenamedto",{"_index":1192,"title":{},"body":{"controllers/GeneNameController.html":{}}}],["this.genenoterepository.create",{"_index":1244,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["this.genenoterepository.save(genenote",{"_index":1246,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["this.generatetokensprovider.generatetokens(user",{"_index":1846,"title":{},"body":{"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{}}}],["this.genereplacementrepository.create",{"_index":1306,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["this.genereplacementrepository.save(genereplacement",{"_index":1307,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["this.genereplacementservice.create(creategenereplacementdto",{"_index":1290,"title":{},"body":{"controllers/GeneReplacementController.html":{}}}],["this.generepository.create",{"_index":681,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["this.generepository.findoneorfail",{"_index":1321,"title":{},"body":{"injectables/GeneService.html":{}}}],["this.generepository.save(gene",{"_index":683,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["this.geneservice.create(creategenedto",{"_index":1074,"title":{},"body":{"controllers/GeneController.html":{}}}],["this.geneservice.getbyid",{"_index":1303,"title":{},"body":{"injectables/GeneReplacementService.html":{}}}],["this.geneservice.getbyid(creategenelocustypedto.geneid",{"_index":1148,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["this.geneservice.getbyid(creategenenamedto.gene",{"_index":1209,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["this.geneservice.getbyid(creategenenotedto.gene",{"_index":1242,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["this.geneservice.getbyid(creategenesymboldto.gene",{"_index":1364,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["this.geneservice.getbyid(creategenexrefdto.gene",{"_index":1413,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["this.geneservice.getbyid(id",{"_index":1076,"title":{},"body":{"controllers/GeneController.html":{}}}],["this.genesymbolrepository.create",{"_index":1366,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["this.genesymbolrepository.save(genesymbol",{"_index":1369,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["this.genesymbolservice.create(creategenesymboldto",{"_index":1348,"title":{},"body":{"controllers/GeneSymbolController.html":{}}}],["this.genexrefrepository.create",{"_index":1415,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["this.genexrefrepository.save(genexref",{"_index":1418,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["this.genexrefservice.create(creategenexrefdto",{"_index":1397,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["this.getpayloadfromcontext(context",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["this.hashingprovider.comparepassword",{"_index":1935,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.hashingprovider.hashpassword(createuserdto.password",{"_index":838,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.jwtconf",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconf.audience",{"_index":1843,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["this.jwtconf.issuer",{"_index":1844,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["this.jwtconf.secret",{"_index":1842,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":1453,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":1444,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":1446,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":1456,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":1448,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.signasync",{"_index":1442,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.verify(token",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtservice.verifyasync",{"_index":1840,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["this.locusgrouprepository.create",{"_index":1548,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["this.locusgrouprepository.findoneby",{"_index":1551,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["this.locusgrouprepository.save(locusgroup",{"_index":1549,"title":{},"body":{"injectables/LocusGroupService.html":{}}}],["this.locusgroupservice.create(createlocusgroupdto",{"_index":1532,"title":{},"body":{"controllers/LocusGroupController.html":{}}}],["this.locusgroupservice.findbyid",{"_index":1582,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["this.locusgroupservice.findbyid(id",{"_index":1533,"title":{},"body":{"controllers/LocusGroupController.html":{}}}],["this.locustyperepository.create",{"_index":1584,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["this.locustyperepository.findoneby",{"_index":1587,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["this.locustyperepository.save(locustype",{"_index":1586,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["this.locustypeservice.create(createlocustypedto",{"_index":1567,"title":{},"body":{"controllers/LocusTypeController.html":{}}}],["this.locustypeservice.findbyid",{"_index":1149,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["this.locustypeservice.findbyid(id",{"_index":1568,"title":{},"body":{"controllers/LocusTypeController.html":{}}}],["this.mailerservice.sendmail",{"_index":1634,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.senduserwelcome(newuser",{"_index":842,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.masterroleguard",{"_index":1888,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.namerepository.create",{"_index":1698,"title":{},"body":{"injectables/NameService.html":{}}}],["this.namerepository.delete",{"_index":1711,"title":{},"body":{"injectables/NameService.html":{}}}],["this.namerepository.findone",{"_index":1705,"title":{},"body":{"injectables/NameService.html":{}}}],["this.namerepository.remove(name",{"_index":1709,"title":{},"body":{"injectables/NameService.html":{}}}],["this.namerepository.save(name",{"_index":1699,"title":{},"body":{"injectables/NameService.html":{}}}],["this.nameservice.create(createnamedto",{"_index":1674,"title":{},"body":{"controllers/NameController.html":{}}}],["this.nameservice.findname(creategenenamedto.name",{"_index":1211,"title":{},"body":{"injectables/GeneNameService.html":{}}}],["this.nameservice.findname(query",{"_index":1672,"title":{},"body":{"controllers/NameController.html":{}}}],["this.noterepository.create",{"_index":1755,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noterepository.delete",{"_index":1761,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noterepository.findone",{"_index":1758,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noterepository.save(note",{"_index":1756,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noteservice.create(createnotedto",{"_index":1733,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.getbyid(creategenenotedto.note",{"_index":1243,"title":{},"body":{"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{}}}],["this.noteservice.getbyid(id",{"_index":1731,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.reflector.getallandoverride(role_type_key",{"_index":1893,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.refreshtokensprovider.refreshtokens(refreshtokendto",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request.protocol}://${this.request.headers.host",{"_index":1818,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.roleguardmap[type]).flat",{"_index":1898,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.rolerepository.create",{"_index":1923,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.delete(roleid",{"_index":1927,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.find",{"_index":1925,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(role",{"_index":1924,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.create(createroledto",{"_index":1869,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findmultiple(['user",{"_index":844,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.roleservice.findmultiple(createuserdto.roles",{"_index":816,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.signinprovider.signin(signindto",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken",{"_index":1452,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.signtoken(user.id",{"_index":1455,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.speciesrepository.findone",{"_index":1979,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["this.speciesservice.findbysciname",{"_index":678,"title":{},"body":{"injectables/CreateGeneProvider.html":{}}}],["this.symbolrepository.create",{"_index":2020,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.symbolrepository.delete",{"_index":2030,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.symbolrepository.findone",{"_index":2024,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.symbolrepository.remove(symbol",{"_index":2028,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.symbolrepository.save(symbol",{"_index":2021,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.symbolservice.create(createsymboldto",{"_index":1999,"title":{},"body":{"controllers/SymbolController.html":{}}}],["this.symbolservice.findsymbol(creategenesymboldto.symbol",{"_index":1365,"title":{},"body":{"injectables/GeneSymbolService.html":{}}}],["this.symbolservice.findsymbol(query",{"_index":1998,"title":{},"body":{"controllers/SymbolController.html":{}}}],["this.userrepository.create",{"_index":837,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.userrepository.delete(user.sub",{"_index":2164,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":813,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.userrepository.findoneby",{"_index":962,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":839,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.userroleguard",{"_index":1890,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":2119,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createuserasadmin(createuserdto",{"_index":2117,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteself(user",{"_index":2122,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(sub",{"_index":1845,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["this.userservice.findbyid(user.sub",{"_index":677,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{}}}],["this.userservice.findbyid(userid",{"_index":229,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{}}}],["this.userservice.findonebyemail(signindto.email",{"_index":1933,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.xrefrepository.create",{"_index":2205,"title":{},"body":{"injectables/XrefService.html":{}}}],["this.xrefrepository.findoneby",{"_index":2208,"title":{},"body":{"injectables/XrefService.html":{}}}],["this.xrefrepository.save(xref",{"_index":2207,"title":{},"body":{"injectables/XrefService.html":{}}}],["this.xrefservice.create(createxrefdto",{"_index":2186,"title":{},"body":{"controllers/XrefController.html":{}}}],["this.xrefservice.findbyid(creategenexrefdto.xref",{"_index":1414,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["this.xrefservice.findbyid(id",{"_index":2187,"title":{},"body":{"controllers/XrefController.html":{}}}],["those",{"_index":2617,"title":{},"body":{"license.html":{}}}],["though",{"_index":2868,"title":{},"body":{"license.html":{}}}],["three",{"_index":2766,"title":{},"body":{"license.html":{}}}],["through",{"_index":2563,"title":{},"body":{"license.html":{}}}],["throw",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"guards/MasterRoleGuard.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["thrown",{"_index":1978,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["throws",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneService.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"injectables/SpeciesService.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"injectables/UserRoleGuard.html":{}}}],["thus",{"_index":2658,"title":{},"body":{"license.html":{}}}],["time",{"_index":963,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/SignInProvider.html":{},"index.html":{},"license.html":{}}}],["timed",{"_index":821,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["times",{"_index":1703,"title":{},"body":{"injectables/NameService.html":{},"injectables/SymbolService.html":{}}}],["token",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["token'})@apiresponse({status",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{}}}],["token'})@post('refresh",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":503,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{}}}],["token.dto.ts",{"_index":1832,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:19",{"_index":1835,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.guard",{"_index":220,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:19",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:39",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:57",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:77",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{},"coverage.html":{}}}],["tokens",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{}}}],["tokens.provider",{"_index":535,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{}}}],["tokens.provider.ts",{"_index":1420,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{},"coverage.html":{}}}],["tokens.provider.ts:16",{"_index":1428,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:19",{"_index":1837,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["tokens.provider.ts:35",{"_index":1435,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:43",{"_index":1838,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["tokens.provider.ts:59",{"_index":1430,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tools",{"_index":2620,"title":{},"body":{"license.html":{}}}],["total",{"_index":1771,"title":{},"body":{"interfaces/Paginated.html":{}}}],["totalitems",{"_index":1770,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalpages",{"_index":1773,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["touch",{"_index":2403,"title":{},"body":{"index.html":{}}}],["trade",{"_index":2897,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2896,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2898,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2842,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":135,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateGeneDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{},"license.html":{}}}],["transferred",{"_index":2844,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":2957,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1466,"title":{},"body":{"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transformoptions",{"_index":1785,"title":{},"body":{"classes/PaginationDto.html":{}}}],["transmission",{"_index":2798,"title":{},"body":{"license.html":{}}}],["transport",{"_index":1611,"title":{},"body":{"modules/MailModule.html":{}}}],["treated",{"_index":2867,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":2683,"title":{},"body":{"license.html":{}}}],["trichocarpa",{"_index":603,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["trichocarpa'})@isstring()@isnotempty",{"_index":601,"title":{},"body":{"classes/CreateGeneDto.html":{}}}],["true",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CuratorRoleGuard.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"modules/MailModule.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"entities/Note.html":{},"classes/PaginationDto.html":{},"entities/Role.html":{},"guards/RoleGuard.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"entities/User.html":{},"injectables/UserRoleGuard.html":{},"entities/Xref.html":{}}}],["true})@apiproperty({enum",{"_index":149,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["true})@apiresponse({status",{"_index":1061,"title":{},"body":{"controllers/GeneController.html":{}}}],["true})@exclude",{"_index":2042,"title":{},"body":{"entities/User.html":{}}}],["true})@isnotempty({each",{"_index":148,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["true})@jointable({name",{"_index":412,"title":{},"body":{"entities/Assembly.html":{},"entities/User.html":{}}}],["try",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"injectables/SymbolService.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{}}}],["twitter",{"_index":2408,"title":{},"body":{"index.html":{}}}],["two",{"_index":1422,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"entities/User.html":{},"license.html":{}}}],["type",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"modules/AppModule.html":{},"entities/Assembly.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/CreateXrefDto.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/DataResponseInterceptor.html":{},"entities/ExternalResource.html":{},"controllers/ExternalResourceController.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"injectables/HashingProvider.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"controllers/LocusGroupController.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"entities/Name.html":{},"controllers/NameController.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"interfaces/Paginated.html":{},"classes/PaginationDto.html":{},"injectables/PaginationProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"controllers/SymbolController.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["type.controller",{"_index":1136,"title":{},"body":{"modules/GeneLocusTypeModule.html":{},"modules/LocusTypeModule.html":{}}}],["type.controller.ts",{"_index":1119,"title":{},"body":{"controllers/GeneLocusTypeController.html":{},"controllers/LocusTypeController.html":{},"coverage.html":{}}}],["type.controller.ts:29",{"_index":1125,"title":{},"body":{"controllers/GeneLocusTypeController.html":{}}}],["type.controller.ts:34",{"_index":1565,"title":{},"body":{"controllers/LocusTypeController.html":{}}}],["type.controller.ts:58",{"_index":1566,"title":{},"body":{"controllers/LocusTypeController.html":{}}}],["type.dto",{"_index":1128,"title":{},"body":{"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/LocusTypeController.html":{},"injectables/LocusTypeService.html":{}}}],["type.dto.ts",{"_index":619,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateLocusTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:11",{"_index":731,"title":{},"body":{"classes/CreateLocusTypeDto.html":{}}}],["type.dto.ts:13",{"_index":624,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["type.dto.ts:17",{"_index":627,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["type.dto.ts:20",{"_index":729,"title":{},"body":{"classes/CreateLocusTypeDto.html":{}}}],["type.dto.ts:8",{"_index":623,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{}}}],["type.entity",{"_index":1039,"title":{},"body":{"entities/Gene.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{}}}],["type.entity.ts",{"_index":1099,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/LocusType.html":{},"coverage.html":{}}}],["type.entity.ts:22",{"_index":1109,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/LocusType.html":{}}}],["type.entity.ts:30",{"_index":1113,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:33",{"_index":1108,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:34",{"_index":1560,"title":{},"body":{"entities/LocusType.html":{}}}],["type.entity.ts:36",{"_index":1111,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:39",{"_index":1102,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:42",{"_index":1114,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:43",{"_index":1558,"title":{},"body":{"entities/LocusType.html":{}}}],["type.entity.ts:45",{"_index":1112,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:46",{"_index":1556,"title":{},"body":{"entities/LocusType.html":{}}}],["type.entity.ts:48",{"_index":1104,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.entity.ts:51",{"_index":1106,"title":{},"body":{"entities/GeneLocusType.html":{}}}],["type.enum",{"_index":647,"title":{},"body":{"classes/CreateGeneNameDto.html":{},"classes/CreateGeneSymbolDto.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{}}}],["type.enum.ts",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.module",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/GeneLocusTypeModule.html":{}}}],["type.module.ts",{"_index":1135,"title":{},"body":{"modules/GeneLocusTypeModule.html":{},"modules/LocusTypeModule.html":{}}}],["type.service",{"_index":1127,"title":{},"body":{"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{}}}],["type.service.ts",{"_index":1140,"title":{},"body":{"injectables/GeneLocusTypeService.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["type.service.ts:12",{"_index":1143,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["type.service.ts:15",{"_index":1576,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["type.service.ts:21",{"_index":1145,"title":{},"body":{"injectables/GeneLocusTypeService.html":{}}}],["type.service.ts:22",{"_index":1578,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["type.service.ts:49",{"_index":1579,"title":{},"body":{"injectables/LocusTypeService.html":{}}}],["type/dto/create",{"_index":618,"title":{},"body":{"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateLocusTypeDto.html":{},"coverage.html":{}}}],["type/gene",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusType.html":{},"coverage.html":{}}}],["type/locus",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"entities/GeneLocusType.html":{},"modules/GeneLocusTypeModule.html":{},"injectables/GeneLocusTypeService.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"controllers/LocusTypeController.html":{},"modules/LocusTypeModule.html":{},"injectables/LocusTypeService.html":{},"coverage.html":{}}}],["typeof",{"_index":1712,"title":{},"body":{"injectables/NameService.html":{},"injectables/SymbolService.html":{}}}],["typeorm",{"_index":428,"title":{},"body":{"entities/Assembly.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"entities/ExternalResource.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"injectables/GeneXrefService.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"injectables/LocusGroupService.html":{},"entities/LocusType.html":{},"injectables/LocusTypeService.html":{},"entities/Name.html":{},"injectables/NameService.html":{},"entities/Note.html":{},"injectables/NoteService.html":{},"injectables/PaginationProvider.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"entities/Species.html":{},"injectables/SpeciesService.html":{},"entities/Symbol.html":{},"injectables/SymbolService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"entities/Xref.html":{},"injectables/XrefService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneHistoryModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{}}}],["typeormmodule.forfeature",{"_index":1164,"title":{},"body":{"modules/GeneModule.html":{}}}],["typeormmodule.forfeature([assembly",{"_index":442,"title":{},"body":{"modules/AssemblyModule.html":{}}}],["typeormmodule.forfeature([externalresource",{"_index":934,"title":{},"body":{"modules/ExternalResourceModule.html":{}}}],["typeormmodule.forfeature([genehistory",{"_index":1098,"title":{},"body":{"modules/GeneHistoryModule.html":{}}}],["typeormmodule.forfeature([genelocustype",{"_index":1139,"title":{},"body":{"modules/GeneLocusTypeModule.html":{}}}],["typeormmodule.forfeature([genename",{"_index":1199,"title":{},"body":{"modules/GeneNameModule.html":{}}}],["typeormmodule.forfeature([genenote",{"_index":1255,"title":{},"body":{"modules/GeneNoteModule.html":{}}}],["typeormmodule.forfeature([genereplacement",{"_index":1296,"title":{},"body":{"modules/GeneReplacementModule.html":{}}}],["typeormmodule.forfeature([genesymbol",{"_index":1355,"title":{},"body":{"modules/GeneSymbolModule.html":{}}}],["typeormmodule.forfeature([genexref",{"_index":1404,"title":{},"body":{"modules/GeneXrefModule.html":{}}}],["typeormmodule.forfeature([location",{"_index":1504,"title":{},"body":{"modules/LocationModule.html":{}}}],["typeormmodule.forfeature([locusgroup",{"_index":1539,"title":{},"body":{"modules/LocusGroupModule.html":{}}}],["typeormmodule.forfeature([locustype",{"_index":1573,"title":{},"body":{"modules/LocusTypeModule.html":{}}}],["typeormmodule.forfeature([name",{"_index":1680,"title":{},"body":{"modules/NameModule.html":{}}}],["typeormmodule.forfeature([note",{"_index":1739,"title":{},"body":{"modules/NoteModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":1910,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([species",{"_index":1968,"title":{},"body":{"modules/SpeciesModule.html":{}}}],["typeormmodule.forfeature([symbol",{"_index":2005,"title":{},"body":{"modules/SymbolModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2135,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([xref",{"_index":2193,"title":{},"body":{"modules/XrefModule.html":{}}}],["typeormmodule.forrootasync",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1509,"title":{},"body":{"entities/LocusGroup.html":{},"guards/RoleGuard.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["types.enum",{"_index":219,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"injectables/CuratorRoleGuard.html":{},"controllers/ExternalResourceController.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/LocusGroupController.html":{},"controllers/LocusTypeController.html":{},"guards/MasterRoleGuard.html":{},"controllers/NameController.html":{},"controllers/NoteController.html":{},"guards/RoleGuard.html":{},"controllers/SymbolController.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{},"controllers/XrefController.html":{}}}],["types.enum.ts",{"_index":2284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["typical",{"_index":2822,"title":{},"body":{"license.html":{}}}],["unable",{"_index":817,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["unauthorizedexception",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"injectables/UserRoleGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["unauthorizedexception('only",{"_index":827,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["unauthorizedexception('token",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["unauthorizedexception(`email",{"_index":964,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["unauthorizedexception(`invalid",{"_index":1939,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["unauthorizedexception(`user",{"_index":2141,"title":{},"body":{"injectables/UserRoleGuard.html":{}}}],["unauthorizedexception(error",{"_index":1847,"title":{},"body":{"injectables/RefreshTokensProvider.html":{}}}],["undefined",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AdminCreateUserDto.html":{},"modules/AppModule.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/ExternalResourceService.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"entities/GeneLocusType.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"entities/GeneSymbol.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"injectables/GeneXrefService.html":{},"injectables/LocusGroupService.html":{},"injectables/LocusTypeService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/UserService.html":{},"injectables/XrefService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2512,"title":{},"body":{"license.html":{}}}],["unique",{"_index":126,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"entities/GeneSymbol.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"injectables/GeneXrefService.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Note.html":{},"entities/Role.html":{},"entities/Symbol.html":{},"entities/User.html":{},"injectables/UserService.html":{},"entities/Xref.html":{}}}],["unique(['gene",{"_index":1116,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["unit",{"_index":2324,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/UserService.html":{}}}],["unless",{"_index":2829,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":2644,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2539,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2669,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2863,"title":{},"body":{"license.html":{}}}],["until",{"_index":2924,"title":{},"body":{"license.html":{}}}],["unused",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{}}}],["up",{"_index":787,"title":{},"body":{"injectables/CreateUserProvider.html":{},"miscellaneous/functions.html":{}}}],["update",{"_index":1020,"title":{},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{},"injectables/NameService.html":{},"injectables/NoteService.html":{},"injectables/SymbolService.html":{}}}],["update(noteid",{"_index":1751,"title":{},"body":{"injectables/NoteService.html":{}}}],["update_date",{"_index":1081,"title":{},"body":{"entities/GeneHistory.html":{}}}],["updated",{"_index":1087,"title":{},"body":{"entities/GeneHistory.html":{},"injectables/NameService.html":{},"injectables/SymbolService.html":{}}}],["updatedatecolumn",{"_index":1017,"title":{},"body":{"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["updatenamedto",{"_index":1702,"title":{},"body":{"injectables/NameService.html":{}}}],["updatenamedto.name",{"_index":1707,"title":{},"body":{"injectables/NameService.html":{}}}],["updatenotedto",{"_index":1752,"title":{},"body":{"injectables/NoteService.html":{}}}],["updatenotedto.note",{"_index":1760,"title":{},"body":{"injectables/NoteService.html":{}}}],["updates",{"_index":1701,"title":{},"body":{"injectables/NameService.html":{},"injectables/SymbolService.html":{},"index.html":{},"license.html":{}}}],["updatesymboldto",{"_index":2023,"title":{},"body":{"injectables/SymbolService.html":{}}}],["updatesymboldto.symbol",{"_index":2026,"title":{},"body":{"injectables/SymbolService.html":{}}}],["uppercase",{"_index":183,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["url(this.request.url",{"_index":1820,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["use",{"_index":1885,"title":{},"body":{"guards/RoleGuard.html":{},"controllers/UserController.html":{},"license.html":{}}}],["use'})@apiresponse({status",{"_index":2089,"title":{},"body":{"controllers/UserController.html":{}}}],["useclass",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":785,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/NameService.html":{},"injectables/SymbolService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["useful",{"_index":3146,"title":{},"body":{"license.html":{}}}],["useinterceptors",{"_index":2108,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":2114,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":117,"title":{"entities/User.html":{}},"body":{"interfaces/ActiveUserInterface.html":{},"classes/AdminCreateUserDto.html":{},"injectables/AdminRoleGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateGeneProvider.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Gene.html":{},"controllers/GeneController.html":{},"entities/GeneHistory.html":{},"entities/GeneLocusType.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"entities/GeneName.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"entities/GeneNote.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"entities/GeneReplacement.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"entities/GeneSymbol.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUserParamsDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"entities/Role.html":{},"guards/RoleGuard.html":{},"injectables/SignInProvider.html":{},"classes/SigninDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":213,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{}}}],["user'})@apibearerauth()@useinterceptors(classserializerinterceptor)@role(roletypes.user)@delete('forget",{"_index":2099,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@apiresponse({status",{"_index":2095,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@useinterceptors(classserializerinterceptor)@post('admin",{"_index":2090,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@useinterceptors(classserializerinterceptor)@role(roletypes.na)@post",{"_index":2096,"title":{},"body":{"controllers/UserController.html":{}}}],["user.controller",{"_index":2128,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":1068,"title":{},"body":{"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"controllers/GeneNameController.html":{},"controllers/GeneReplacementController.html":{},"controllers/GeneSymbolController.html":{},"controllers/GeneXrefController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":2220,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":196,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":133,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:21",{"_index":152,"title":{},"body":{"classes/AdminCreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":768,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":770,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:54",{"_index":771,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:66",{"_index":769,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:86",{"_index":772,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:97",{"_index":767,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1454,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{}}}],["user.entity",{"_index":805,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.firstname",{"_index":1638,"title":{},"body":{"injectables/MailService.html":{}}}],["user.genenamescreated",{"_index":1103,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["user.genenamesedited",{"_index":1105,"title":{},"body":{"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["user.genenotescreated",{"_index":1220,"title":{},"body":{"entities/GeneNote.html":{}}}],["user.genenotesedited",{"_index":1222,"title":{},"body":{"entities/GeneNote.html":{}}}],["user.genereplacements",{"_index":1263,"title":{},"body":{"entities/GeneReplacement.html":{}}}],["user.genescreated",{"_index":985,"title":{},"body":{"entities/Gene.html":{}}}],["user.genesedited",{"_index":988,"title":{},"body":{"entities/Gene.html":{}}}],["user.id",{"_index":1082,"title":{},"body":{"entities/GeneHistory.html":{},"injectables/GenerateTokensProvider.html":{}}}],["user.interface",{"_index":672,"title":{},"body":{"injectables/CreateGeneProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/GeneController.html":{},"controllers/GeneLocusTypeController.html":{},"injectables/GeneLocusTypeService.html":{},"controllers/GeneNameController.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"controllers/GeneReplacementController.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneService.html":{},"controllers/GeneSymbolController.html":{},"injectables/GeneSymbolService.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokensProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.interface.ts",{"_index":114,"title":{},"body":{"interfaces/ActiveUserInterface.html":{},"coverage.html":{}}}],["user.password",{"_index":1937,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.provider",{"_index":2129,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.provider.ts",{"_index":784,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["user.provider.ts:117",{"_index":800,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.provider.ts:27",{"_index":793,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.provider.ts:48",{"_index":802,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.role.guard",{"_index":1882,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.roles",{"_index":230,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"guards/MasterRoleGuard.html":{},"entities/Role.html":{},"injectables/UserRoleGuard.html":{}}}],["user.service",{"_index":2109,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.sub",{"_index":815,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user/user.module",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.[field",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_has_role",{"_index":2080,"title":{},"body":{"entities/User.html":{}}}],["user_has_role'})@exclude",{"_index":2076,"title":{},"body":{"entities/User.html":{}}}],["usercontroller",{"_index":2081,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":226,"title":{},"body":{"injectables/AdminRoleGuard.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GenerateTokensProvider.html":{},"guards/MasterRoleGuard.html":{},"controllers/UserController.html":{},"injectables/UserRoleGuard.html":{}}}],["usermodule",{"_index":267,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":795,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/UserService.html":{}}}],["userroleguard",{"_index":270,"title":{"injectables/UserRoleGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RoleGuard.html":{},"injectables/UserRoleGuard.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":829,"title":{},"body":{"injectables/CreateUserProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["userservice",{"_index":206,"title":{"injectables/UserService.html":{}},"body":{"injectables/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateGeneProvider.html":{},"injectables/CuratorRoleGuard.html":{},"injectables/GeneLocusTypeService.html":{},"injectables/GeneNameService.html":{},"controllers/GeneNoteController.html":{},"injectables/GeneNoteService.html":{},"injectables/GeneReplacementService.html":{},"injectables/GeneSymbolService.html":{},"injectables/GeneXrefService.html":{},"guards/MasterRoleGuard.html":{},"injectables/RefreshTokensProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRoleGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"license.html":{}}}],["using",{"_index":1594,"title":{},"body":{"modules/MailModule.html":{},"injectables/NameService.html":{},"injectables/SymbolService.html":{},"controllers/UserController.html":{},"index.html":{},"license.html":{}}}],["valid",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RoleGuard.html":{},"classes/SigninDto.html":{},"license.html":{}}}],["validationschema",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":195,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateExternalResourceDto.html":{},"classes/CreateGeneDto.html":{},"classes/CreateGeneLocusTypeDto.html":{},"classes/CreateGeneNameDto.html":{},"classes/CreateGeneNoteDto.html":{},"classes/CreateGeneReplacementDto.html":{},"classes/CreateGeneSymbolDto.html":{},"classes/CreateGeneXrefDto.html":{},"classes/CreateLocusGroupDto.html":{},"classes/CreateLocusTypeDto.html":{},"classes/CreateNameDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateXrefDto.html":{},"classes/GetUserParamsDto.html":{},"classes/PaginationDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SigninDto.html":{},"dependencies.html":{}}}],["value",{"_index":1027,"title":{},"body":{"entities/Gene.html":{},"entities/GeneHistory.html":{},"classes/PaginationDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1028,"title":{},"body":{"entities/Gene.html":{}}}],["varchar",{"_index":398,"title":{},"body":{"entities/Assembly.html":{},"entities/ExternalResource.html":{},"entities/Gene.html":{},"entities/GeneHistory.html":{},"entities/GeneXref.html":{},"entities/Location.html":{},"entities/LocusGroup.html":{},"entities/LocusType.html":{},"entities/Name.html":{},"entities/Species.html":{},"entities/Symbol.html":{},"entities/User.html":{},"entities/Xref.html":{}}}],["variable",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3174,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["vars",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UserService.html":{}}}],["verbatim",{"_index":2430,"title":{},"body":{"license.html":{}}}],["version",{"_index":2414,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":2453,"title":{},"body":{"license.html":{}}}],["video",{"_index":2372,"title":{},"body":{"index.html":{}}}],["view",{"_index":2578,"title":{},"body":{"license.html":{}}}],["viewed",{"_index":1026,"title":{},"body":{"entities/Gene.html":{}}}],["violates",{"_index":2858,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2920,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2572,"title":{},"body":{"license.html":{}}}],["visit",{"_index":2362,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2375,"title":{},"body":{"index.html":{}}}],["void",{"_index":1995,"title":{},"body":{"controllers/SymbolController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["volume",{"_index":2744,"title":{},"body":{"license.html":{}}}],["waive",{"_index":2690,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3128,"title":{},"body":{"license.html":{}}}],["want",{"_index":2462,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2577,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2576,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2319,"title":{},"body":{"index.html":{}}}],["way",{"_index":2732,"title":{},"body":{"license.html":{}}}],["ways",{"_index":2757,"title":{},"body":{"license.html":{}}}],["web",{"_index":3152,"title":{},"body":{"license.html":{}}}],["website",{"_index":2406,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1633,"title":{},"body":{"injectables/MailService.html":{}}}],["well",{"_index":2556,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":2963,"title":{},"body":{"license.html":{}}}],["whether",{"_index":2818,"title":{},"body":{"license.html":{}}}],["whole",{"_index":2596,"title":{},"body":{"license.html":{}}}],["whose",{"_index":2805,"title":{},"body":{"license.html":{}}}],["widely",{"_index":2593,"title":{},"body":{"license.html":{}}}],["widespread",{"_index":2480,"title":{},"body":{"license.html":{}}}],["window",{"_index":2608,"title":{},"body":{"license.html":{}}}],["wipo",{"_index":2682,"title":{},"body":{"license.html":{}}}],["wish",{"_index":2460,"title":{},"body":{"license.html":{}}}],["withdrawn",{"_index":1034,"title":{},"body":{"entities/Gene.html":{},"miscellaneous/enumerations.html":{}}}],["withdrawndate",{"_index":977,"title":{},"body":{"entities/Gene.html":{},"entities/GeneLocusType.html":{},"entities/GeneName.html":{},"entities/GeneNote.html":{},"entities/GeneSymbol.html":{},"entities/GeneXref.html":{}}}],["within",{"_index":2291,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["without",{"_index":2493,"title":{},"body":{"license.html":{}}}],["work",{"_index":2527,"title":{},"body":{"license.html":{}}}],["work's",{"_index":2618,"title":{},"body":{"license.html":{}}}],["working",{"_index":2361,"title":{},"body":{"index.html":{},"license.html":{}}}],["works",{"_index":2437,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":2995,"title":{},"body":{"license.html":{}}}],["writing",{"_index":3086,"title":{},"body":{"license.html":{}}}],["written",{"_index":2765,"title":{},"body":{"license.html":{}}}],["wrongsecretprovidererror",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["x",{"_index":2386,"title":{},"body":{"index.html":{}}}],["xref",{"_index":710,"title":{"entities/Xref.html":{}},"body":{"classes/CreateGeneXrefDto.html":{},"classes/CreateXrefDto.html":{},"entities/ExternalResource.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{}}}],["xref'})@apiresponse({status",{"_index":1389,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["xref.controller",{"_index":1402,"title":{},"body":{"modules/GeneXrefModule.html":{},"modules/XrefModule.html":{}}}],["xref.controller.ts",{"_index":1386,"title":{},"body":{"controllers/GeneXrefController.html":{},"coverage.html":{}}}],["xref.controller.ts:29",{"_index":1391,"title":{},"body":{"controllers/GeneXrefController.html":{}}}],["xref.dto",{"_index":1394,"title":{},"body":{"controllers/GeneXrefController.html":{},"injectables/GeneXrefService.html":{},"controllers/XrefController.html":{},"injectables/XrefService.html":{}}}],["xref.dto.ts",{"_index":709,"title":{},"body":{"classes/CreateGeneXrefDto.html":{},"classes/CreateXrefDto.html":{},"coverage.html":{}}}],["xref.dto.ts:12",{"_index":852,"title":{},"body":{"classes/CreateXrefDto.html":{}}}],["xref.dto.ts:13",{"_index":715,"title":{},"body":{"classes/CreateGeneXrefDto.html":{}}}],["xref.dto.ts:21",{"_index":711,"title":{},"body":{"classes/CreateGeneXrefDto.html":{},"classes/CreateXrefDto.html":{}}}],["xref.dto.ts:29",{"_index":716,"title":{},"body":{"classes/CreateGeneXrefDto.html":{}}}],["xref.dto.ts:37",{"_index":714,"title":{},"body":{"classes/CreateGeneXrefDto.html":{}}}],["xref.entity",{"_index":1395,"title":{},"body":{"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"entities/Xref.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{}}}],["xref.entity.ts",{"_index":1371,"title":{},"body":{"entities/GeneXref.html":{},"coverage.html":{}}}],["xref.entity.ts:20",{"_index":1376,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:28",{"_index":1380,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:31",{"_index":1372,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:34",{"_index":1377,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:37",{"_index":1381,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:45",{"_index":1379,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:48",{"_index":1375,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:51",{"_index":1383,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:54",{"_index":1373,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.entity.ts:57",{"_index":1374,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.externalresource",{"_index":890,"title":{},"body":{"entities/ExternalResource.html":{}}}],["xref.genexrefs",{"_index":1382,"title":{},"body":{"entities/GeneXref.html":{}}}],["xref.module",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["xref.module.ts",{"_index":1401,"title":{},"body":{"modules/GeneXrefModule.html":{}}}],["xref.service",{"_index":1393,"title":{},"body":{"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{}}}],["xref.service.ts",{"_index":1405,"title":{},"body":{"injectables/GeneXrefService.html":{},"coverage.html":{}}}],["xref.service.ts:12",{"_index":1408,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["xref.service.ts:21",{"_index":1410,"title":{},"body":{"injectables/GeneXrefService.html":{}}}],["xref/dto/create",{"_index":708,"title":{},"body":{"classes/CreateGeneXrefDto.html":{},"coverage.html":{}}}],["xref/gene",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"entities/GeneXref.html":{},"controllers/GeneXrefController.html":{},"modules/GeneXrefModule.html":{},"injectables/GeneXrefService.html":{},"entities/Xref.html":{},"coverage.html":{}}}],["xref/xref.module",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["xrefcontroller",{"_index":2173,"title":{"controllers/XrefController.html":{}},"body":{"controllers/XrefController.html":{},"modules/XrefModule.html":{},"coverage.html":{}}}],["xrefmodule",{"_index":268,"title":{"modules/XrefModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneXrefModule.html":{},"modules/XrefModule.html":{},"modules.html":{},"overview.html":{}}}],["xrefrepository",{"_index":2196,"title":{},"body":{"injectables/XrefService.html":{}}}],["xrefs",{"_index":886,"title":{},"body":{"entities/ExternalResource.html":{}}}],["xrefservice",{"_index":1406,"title":{"injectables/XrefService.html":{}},"body":{"injectables/GeneXrefService.html":{},"controllers/XrefController.html":{},"modules/XrefModule.html":{},"injectables/XrefService.html":{},"coverage.html":{},"overview.html":{}}}],["years",{"_index":2767,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1438,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["you'd",{"_index":2400,"title":{},"body":{"index.html":{}}}],["you're",{"_index":2328,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3012,"title":{},"body":{"license.html":{}}}],["z0",{"_index":754,"title":{},"body":{"classes/CreateSymbolDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":177,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":174,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":175,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateUserDto.html":{}}}],["za",{"_index":176,"title":{},"body":{"classes/AdminCreateUserDto.html":{},"classes/CreateSymbolDto.html":{},"classes/CreateUserDto.html":{}}}],["zoom",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AssemblyModule.html":{},"modules/AuthModule.html":{},"modules/ExternalResourceModule.html":{},"modules/GeneLocusTypeModule.html":{},"modules/GeneModule.html":{},"modules/GeneNameModule.html":{},"modules/GeneNoteModule.html":{},"modules/GeneReplacementModule.html":{},"modules/GeneSymbolModule.html":{},"modules/GeneXrefModule.html":{},"modules/LocationModule.html":{},"modules/LocusGroupModule.html":{},"modules/LocusTypeModule.html":{},"modules/MailModule.html":{},"modules/NameModule.html":{},"modules/NoteModule.html":{},"modules/PaginationModule.html":{},"modules/RoleModule.html":{},"modules/SpeciesModule.html":{},"modules/SymbolModule.html":{},"modules/UserModule.html":{},"modules/XrefModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guard/access-token/access-token.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to check if the request has a valid access token\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Protected\n                                extractRequestFromHeader\n                            \n                            \n                                    Protected\n                                getPayloadFromContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConf: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/access-token/access-token.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor to create an instance of the AccessTokenGuard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle JWT operations.\n\n\n                                                        \n                                                \n                                                \n                                                        jwtConf\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nJWT configuration.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/access-token/access-token.guard.ts:39\n                        \n                    \n\n\n            \n                \n                        Check if the request has a valid access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise\n\n                        \n                            \n                                true if the token is valid else false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/access-token/access-token.guard.ts:77\n                        \n                    \n\n\n            \n                \n                        Extract the token from the request header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the token if found else undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getPayloadFromContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPayloadFromContext(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/access-token/access-token.guard.ts:57\n                        \n                    \n\n\n            \n                \n                        Get the payload from the request context\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the payload of the token\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService, WrongSecretProviderError } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constant/auth.constant';\n\n/**\n * Guard to check if the request has a valid access token\n */\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  /**\n   * Constructor to create an instance of the AccessTokenGuard\n   * @constructor\n   * @param {JwtService} jwtService - Service to handle JWT operations.\n   * @param {ConfigType} jwtConf - JWT configuration.\n   */\n  constructor(\n    protected readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    protected readonly jwtConf: ConfigType,\n  ) {}\n\n  /**\n   * Check if the request has a valid access token\n   * @param context\n   * @returns true if the token is valid else false\n   * @throws UnauthorizedException if the token is not found\n   * @throws RequestTimeoutException if the token is invalid\n   */\n  canActivate(context: ExecutionContext): boolean | Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const token = this.extractRequestFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException('Token not found');\n    }\n    const payload = this.getPayloadFromContext(context);\n    request[REQUEST_USER_KEY] = payload;\n    return true;\n  }\n\n  /**\n   * Get the payload from the request context\n   * @param context\n   * @returns the payload of the token\n   * @throws UnauthorizedException if the token is not found\n   * @throws RequestTimeoutException if the token is invalid\n   */\n  protected getPayloadFromContext(context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n    const token = this.extractRequestFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException('Token not found');\n    }\n    try {\n      return this.jwtService.verify(token, this.jwtConf);\n    } catch (error) {\n      if (error instanceof WrongSecretProviderError) {\n        throw new UnauthorizedException('Invalid token');\n      }\n      throw new RequestTimeoutException(error.message);\n    }\n  }\n  /**\n   * Extract the token from the request header\n   * @param request\n   * @returns the token if found else undefined\n   */\n  protected extractRequestFromHeader(request: Request): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserInterface.html":{"url":"interfaces/ActiveUserInterface.html","title":"interface - ActiveUserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/active-user.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an active user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email address of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         roleName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         roleName[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The roles assigned to the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { roleName } from 'src/role/enum/role-name.enum';\n/**\n * Interface representing an active user.\n */\nexport interface ActiveUserInterface {\n  /**\n   * The unique identifier of the user.\n   */\n  sub: number;\n  /**\n   * The email address of the user.\n   */\n  email: string;\n  /**\n   * The roles assigned to the user.\n   */\n  roles: roleName[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminCreateUserDto.html":{"url":"classes/AdminCreateUserDto.html","title":"class - AdminCreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminCreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/admin-create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a user\n\n            \n\n            \n                Extends\n            \n            \n                            CreateUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         roleName[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsEnum(roleName, {each: true})@IsNotEmpty({each: true})@ApiProperty({enum: roleName, description: 'A list of roles that the user has been assigned', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/admin-create-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    A list of roles that the user has been assigned\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiPropertyOptional({description: 'Is the user a current user and can still log in?', example: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDto:97\n\n                        \n                    \n\n            \n                \n                    Is the user a current user and can still log in?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)@ApiProperty({description: 'The preferred display name of the user', example: 'Jonny Doe'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDto:28\n\n                        \n                    \n\n            \n                \n                    The display name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@MaxLength(255)@ApiProperty({description: 'The email of the user', example: 'john.doe@email.com'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDto:66\n\n                        \n                    \n\n            \n                \n                    The email of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)@ApiProperty({description: 'The first name of the user', example: 'John'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDto:41\n\n                        \n                    \n\n            \n                \n                    The first name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MinLength(3)@MaxLength(96)@ApiPropertyOptional({description: 'The last name of the user', example: 'Doe'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDto:54\n\n                        \n                    \n\n            \n                \n                    The last name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@MaxLength(16)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character'})@ApiProperty({description: 'The password of the user', example: 'Password1!'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDto:86\n\n                        \n                    \n\n            \n                \n                    The password of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsArray, IsEnum } from 'class-validator';\nimport { roleName } from 'src/role/enum/role-name.enum';\nimport { CreateUserDto } from './create-user.dto';\n\n/**\n * Data transfer object for creating a user\n */\nexport class AdminCreateUserDto extends CreateUserDto {\n  /**\n   * A list of roles that the user has been assigned\n   */\n  @IsArray()\n  @IsEnum(roleName, { each: true })\n  @IsNotEmpty({ each: true })\n  @ApiProperty({\n    enum: roleName,\n    description: 'A list of roles that the user has been assigned',\n    example: ['user'],\n  })\n  roles: roleName[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminRoleGuard.html":{"url":"injectables/AdminRoleGuard.html","title":"injectable - AdminRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/role/admin.role.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard to check if the user has an admin or master role.\n\n            \n\n            \n                Extends\n            \n            \n                            AccessTokenGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConf: ConfigType<>, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/role/admin.role.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor to create an instance of the AdminRoleGuard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle JWT operations.\n\n\n                                                        \n                                                \n                                                \n                                                        jwtConf\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nJWT configuration.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/role/admin.role.guard.ts:50\n                        \n                    \n\n\n            \n                \n                        Method to determine if the request can proceed based on the user's role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nReturns true if the user has an admin or master role, otherwise throws an UnauthorizedException.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constant/auth.constant';\nimport { UserService } from 'src/user/user.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\n\n/**\n * Guard to check if the user has an admin or master role.\n * @extends {AccessTokenGuard}\n * @property {UserService} userService - The service to handle user operations.\n * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n */\n@Injectable()\nexport class AdminRoleGuard extends AccessTokenGuard {\n  /**\n   * Constructor to create an instance of the AdminRoleGuard\n   * @constructor\n   * @param {JwtService} jwtService - Service to handle JWT operations.\n   * @param {ConfigType} jwtConf - JWT configuration.\n   * @param {UserService} userService - Service to handle user operations.\n   * @returns {AdminRoleGuard} - An instance of the AdminRoleGuard.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   * @throws {UnauthorizedException} - Throws an exception if the user does not have the admin or master role.\n   */\n  constructor(\n    protected readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    protected readonly jwtConf: ConfigType,\n    private readonly userService: UserService,\n  ) {\n    super(jwtService, jwtConf);\n  }\n\n  /**\n   * Method to determine if the request can proceed based on the user's role.\n   * @param {ExecutionContext} context - The execution context of the request.\n   * @returns {Promise} - Returns true if the user has an admin or master role, otherwise throws an UnauthorizedException.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   * @throws {UnauthorizedException} - Throws an exception if the user does not have an admin or master role.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const token = this.extractRequestFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException('Token not found');\n    }\n    const payload = this.getPayloadFromContext(context);\n    request[REQUEST_USER_KEY] = payload;\n    const userId: number = request[REQUEST_USER_KEY].sub;\n    const user = await this.userService.findById(userId);\n    for (const role of user.roles) {\n      if (\n        [roleTypes.ADMIN, roleTypes.MASTER].includes(role.name as roleTypes)\n      ) {\n        return true;\n      }\n    }\n    throw new UnauthorizedException(\n      `User does not have a ${roleTypes.ADMIN} or ${roleTypes.MASTER} role`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAssemblyModule\n\nAssemblyModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAssemblyModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nExternalResourceModule\n\nExternalResourceModule\n\nAppModule -->\n\nExternalResourceModule->AppModule\n\n\n\n\n\nGeneHistoryModule\n\nGeneHistoryModule\n\nAppModule -->\n\nGeneHistoryModule->AppModule\n\n\n\n\n\nGeneLocusTypeModule\n\nGeneLocusTypeModule\n\nAppModule -->\n\nGeneLocusTypeModule->AppModule\n\n\n\n\n\nGeneModule\n\nGeneModule\n\nAppModule -->\n\nGeneModule->AppModule\n\n\n\n\n\nGeneNameModule\n\nGeneNameModule\n\nAppModule -->\n\nGeneNameModule->AppModule\n\n\n\n\n\nGeneNoteModule\n\nGeneNoteModule\n\nAppModule -->\n\nGeneNoteModule->AppModule\n\n\n\n\n\nGeneReplacementModule\n\nGeneReplacementModule\n\nAppModule -->\n\nGeneReplacementModule->AppModule\n\n\n\n\n\nGeneSymbolModule\n\nGeneSymbolModule\n\nAppModule -->\n\nGeneSymbolModule->AppModule\n\n\n\n\n\nGeneXrefModule\n\nGeneXrefModule\n\nAppModule -->\n\nGeneXrefModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nLocusGroupModule\n\nLocusGroupModule\n\nAppModule -->\n\nLocusGroupModule->AppModule\n\n\n\n\n\nLocusTypeModule\n\nLocusTypeModule\n\nAppModule -->\n\nLocusTypeModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nNameModule\n\nNameModule\n\nAppModule -->\n\nNameModule->AppModule\n\n\n\n\n\nNoteModule\n\nNoteModule\n\nAppModule -->\n\nNoteModule->AppModule\n\n\n\n\n\nPaginationModule\n\nPaginationModule\n\nAppModule -->\n\nPaginationModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSpeciesModule\n\nSpeciesModule\n\nAppModule -->\n\nSpeciesModule->AppModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nAppModule -->\n\nSymbolModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nXrefModule\n\nXrefModule\n\nAppModule -->\n\nXrefModule->AppModule\n\n\n\n\n\nAdminRoleGuard\n\nAdminRoleGuard\n\nAppModule -->\n\nAdminRoleGuard->AppModule\n\n\n\n\n\nCuratorRoleGuard\n\nCuratorRoleGuard\n\nAppModule -->\n\nCuratorRoleGuard->AppModule\n\n\n\n\n\nUserRoleGuard\n\nUserRoleGuard\n\nAppModule -->\n\nUserRoleGuard->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The main application module for the PGNC API.\nThis module imports and configures various sub-modules and services required for the application.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminRoleGuard\n                        \n                        \n                            CuratorRoleGuard\n                        \n                        \n                            UserRoleGuard\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AssemblyModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ExternalResourceModule\n                        \n                        \n                            GeneHistoryModule\n                        \n                        \n                            GeneLocusTypeModule\n                        \n                        \n                            GeneModule\n                        \n                        \n                            GeneNameModule\n                        \n                        \n                            GeneNoteModule\n                        \n                        \n                            GeneReplacementModule\n                        \n                        \n                            GeneSymbolModule\n                        \n                        \n                            GeneXrefModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            LocusGroupModule\n                        \n                        \n                            LocusTypeModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NameModule\n                        \n                        \n                            NoteModule\n                        \n                        \n                            PaginationModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SpeciesModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            XrefModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\nimport environmentValidation from './config/environment.validation';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport jwtConfig from './auth/config/jwt.config';\nimport { PaginationModule } from './common/pagination/pagination.module';\nimport { DataResponseInterceptor } from './common/interceptor/data-response/data-response.interceptor';\nimport { AccessTokenGuard } from './auth/guard/access-token/access-token.guard';\nimport { RoleModule } from './role/role.module';\nimport { RoleGuard } from './auth/guard/role/role.guard';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { UserRoleGuard } from './auth/guard/role/user.role.guard';\nimport { AdminRoleGuard } from './auth/guard/role/admin.role.guard';\nimport { CuratorRoleGuard } from './auth/guard/role/curator.role.guard';\nimport { MasterRoleGuard } from './auth/guard/role/master.role.guard';\nimport { SpeciesModule } from './species/species.module';\nimport { LocationModule } from './location/location.module';\nimport { AssemblyModule } from './assembly/assembly.module';\nimport { LocusGroupModule } from './locus-group/locus-group.module';\nimport { LocusTypeModule } from './locus-type/locus-type.module';\nimport { GeneModule } from './gene/gene.module';\nimport { SymbolModule } from './symbol/symbol.module';\nimport { NameModule } from './name/name.module';\nimport { GeneHistoryModule } from './gene-history/gene-history.module';\nimport { ExternalResourceModule } from './external-resource/external-resource.module';\nimport { XrefModule } from './xref/xref.module';\nimport { NoteModule } from './note/note.module';\nimport { GeneSymbolModule } from './gene-symbol/gene-symbol.module';\nimport { GeneNameModule } from './gene-name/gene-name.module';\nimport { GeneLocusTypeModule } from './gene-locus-type/gene-locus-type.module';\nimport { GeneNoteModule } from './gene-note/gene-note.module';\nimport { GeneXrefModule } from './gene-xref/gene-xref.module';\nimport { GeneReplacementModule } from './gene-replacement/gene-replacement.module';\n\n/**\n * Load the environment configuration. Can be either 'dev', 'test' or\n * undefined, which defines a live environment.\n */\nconst env = process.env.NODE_ENV;\n\n/**\n * The main application module for the PGNC API.\n *\n * This module imports and configures various sub-modules and services required for the application.\n */\n@Module({\n  imports: [\n    UserModule,\n    AuthModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !env ? '.env' : `.env.${env}`,\n      load: [appConfig, databaseConfig],\n      validationSchema: environmentValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        autoLoadEntities: configService.get('database.autoLoadEntities'),\n        // syncronize: true is not recommended for production\n        synchronize: configService.get('database.synchronize'),\n        port: configService.get('database.port'),\n        username: configService.get('database.user'),\n        password: configService.get('database.password'),\n        host: configService.get('database.host'),\n        database: configService.get('database.name'),\n        namingStrategy: configService.get('database.namingStrategy'),\n      }),\n    }),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    PaginationModule,\n    MailModule,\n    RoleModule,\n    SpeciesModule,\n    LocationModule,\n    AssemblyModule,\n    LocusGroupModule,\n    LocusTypeModule,\n    GeneModule,\n    SymbolModule,\n    NameModule,\n    GeneHistoryModule,\n    ExternalResourceModule,\n    XrefModule,\n    NoteModule,\n    GeneSymbolModule,\n    GeneNameModule,\n    GeneLocusTypeModule,\n    GeneNoteModule,\n    GeneXrefModule,\n    GeneReplacementModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: RoleGuard,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: DataResponseInterceptor,\n    },\n    AccessTokenGuard,\n    UserRoleGuard,\n    AdminRoleGuard,\n    MasterRoleGuard,\n    CuratorRoleGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Assembly.html":{"url":"entities/Assembly.html","title":"entity - Assembly","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Assembly\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assembly/assembly.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Assembly entity class definition.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                current\n                            \n                            \n                                    \n                                genbankAccession\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                locations\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                pgncDefault\n                            \n                            \n                                    \n                                refseqAccession\n                            \n                            \n                                    \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', nullable: false, default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:70\n                        \n                    \n\n            \n                \n                    Is assembly current? The default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genbankAccession\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:46\n                        \n                    \n\n            \n                \n                    Assembly description.\nMust not be null or greater than 255 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:22\n                        \n                    \n\n            \n                \n                    Assembly identifier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, location => location.assemblies, {eager: true})@JoinTable({name: 'assembly_has_location'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:103\n                        \n                    \n\n            \n                \n                    Assembly locations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:34\n                        \n                    \n\n            \n                \n                    Assembly name.\nMust not be null or greater than 255 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pgncDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', nullable: false, default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:82\n                        \n                    \n\n            \n                \n                    Is assembly the PGNC default? The default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refseqAccession\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:58\n                        \n                    \n\n            \n                \n                    Assembly description.\nMust not be null or greater than 255 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        species\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Species\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, species => species.assemblies, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assembly/assembly.entity.ts:91\n                        \n                    \n\n            \n                \n                    Assembly species.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Species } from 'src/species/species.entity';\nimport { Location } from 'src/location/location.entity';\nimport {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n/**\n * Assembly entity class definition.\n */\n@Entity()\nexport class Assembly {\n  /**\n   * Assembly identifier.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  /**\n   * Assembly name.\n   * Must not be null or greater than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n  })\n  name: string;\n\n  /**\n   * Assembly description.\n   * Must not be null or greater than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  genbankAccession: string;\n\n  /**\n   * Assembly description.\n   * Must not be null or greater than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  refseqAccession: string;\n\n  /**\n   * Is assembly current? The default is true.\n   * @type {boolean}\n   * @default true\n   */\n  @Column({\n    type: 'boolean',\n    nullable: false,\n    default: true,\n  })\n  current: boolean;\n\n  /**\n   * Is assembly the PGNC default? The default is true.\n   * @type {boolean}\n   * @default true\n   */\n  @Column({\n    type: 'boolean',\n    nullable: false,\n    default: true,\n  })\n  pgncDefault: boolean;\n\n  /**\n   * Assembly species.\n   * @type {Species}\n   */\n  @ManyToOne(() => Species, (species) => species.assemblies, {\n    eager: true,\n  })\n  species: Species;\n\n  /**\n   * Assembly locations.\n   * @type {Location[]}\n   */\n  @ManyToMany(() => Location, (location) => location.assemblies, {\n    eager: true,\n  })\n  @JoinTable({\n    name: 'assembly_has_location',\n  })\n  locations: Location[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AssemblyController.html":{"url":"controllers/AssemblyController.html","title":"controller - AssemblyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AssemblyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assembly/assembly.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                assembly\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('assembly')\nexport class AssemblyController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AssemblyModule.html":{"url":"modules/AssemblyModule.html","title":"module - AssemblyModule","body":"\n                   \n\n\n\n\n    Modules\n    AssemblyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AssemblyModule\n\n\n\ncluster_AssemblyModule_providers\n\n\n\n\nAssemblyService\n\nAssemblyService\n\n\n\nAssemblyModule\n\nAssemblyModule\n\nAssemblyModule -->\n\nAssemblyService->AssemblyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/assembly/assembly.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AssemblyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AssemblyController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AssemblyController } from './assembly.controller';\nimport { AssemblyService } from './assembly.service';\nimport { Assembly } from './assembly.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  controllers: [AssemblyController],\n  providers: [AssemblyService],\n  imports: [TypeOrmModule.forFeature([Assembly])],\n})\nexport class AssemblyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssemblyService.html":{"url":"injectables/AssemblyService.html","title":"injectable - AssemblyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssemblyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assembly/assembly.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AssemblyService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                The AuthController is responsible for handling authentication-related HTTP requests.\nIt uses the AuthService to perform authentication operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Role(roleTypes.NA)@ApiOperation({summary: 'Refreshes the access token'})@ApiResponse({status: 200, description: 'Returns the new access token and refresh token'})@Post('refresh-tokens')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        Handles the token refresh process for the API.\nThis method is decorated with several NestJS decorators:\n\n@Post('refresh-tokens') to handle POST requests to the 'refresh-tokens' endpoint.\n@HttpCode(HttpStatus.OK) to set the HTTP status code to 200.\n@Role(roleTypes.NA) to specify that no specific role is required.\n@ApiOperation and @ApiResponse for API documentation purposes.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData transfer object containing the refresh token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to an object containing the new access token and refresh token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                        \n                    signin(signinDto: SigninDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-in')@HttpCode(HttpStatus.OK)@Role(roleTypes.NA)@ApiOperation({summary: 'Sign in to the API'})@ApiResponse({status: 200, description: 'Returns the created user'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:41\n                        \n                    \n\n\n            \n                \n                        Handles the sign-in process for the API.\nThis method is decorated with several NestJS decorators:\n\n@Post('sign-in') to handle POST requests to the 'sign-in' endpoint.\n@HttpCode(HttpStatus.OK) to set the HTTP status code to 200.\n@Role(roleTypes.NA) to specify that no specific role is required.\n@ApiOperation and @ApiResponse for API documentation purposes.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signinDto\n                                            \n                                                            SigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData transfer object containing sign-in credentials.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to an object containing the access token.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { RefreshTokenDto } from './dto/refresh-token.dto';\nimport { SigninDto } from './dto/signin.dto';\nimport { AuthService } from './auth.service';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { roleTypes } from './enum/role-types.enum';\n\n/**\n * The AuthController is responsible for handling authentication-related HTTP requests.\n * It uses the AuthService to perform authentication operations.\n */\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  /**\n   * Creates an instance of AuthController.\n   */\n  constructor(private readonly authService: AuthService) {}\n\n  /**\n   * Handles the sign-in process for the API.\n   *\n   * @param signinDto - Data transfer object containing sign-in credentials.\n   * @returns A promise that resolves to an object containing the access token.\n   * @remarks\n   * This method is decorated with several NestJS decorators:\n   * - `@Post('sign-in')` to handle POST requests to the 'sign-in' endpoint.\n   * - `@HttpCode(HttpStatus.OK)` to set the HTTP status code to 200.\n   * - `@Role(roleTypes.NA)` to specify that no specific role is required.\n   * - `@ApiOperation` and `@ApiResponse` for API documentation purposes.\n   */\n  @Post('sign-in')\n  @HttpCode(HttpStatus.OK)\n  @Role(roleTypes.NA)\n  @ApiOperation({ summary: 'Sign in to the API' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns the created user',\n  })\n  public async signin(\n    @Body() signinDto: SigninDto,\n  ): Promise {\n    return this.authService.signIn(signinDto);\n  }\n\n  /**\n   * Handles the token refresh process for the API.\n   *\n   * @param refreshTokenDto - Data transfer object containing the refresh token.\n   * @returns A promise that resolves to an object containing the new access token and refresh token.\n   * @remarks\n   * This method is decorated with several NestJS decorators:\n   * - `@Post('refresh-tokens')` to handle POST requests to the 'refresh-tokens' endpoint.\n   * - `@HttpCode(HttpStatus.OK)` to set the HTTP status code to 200.\n   * - `@Role(roleTypes.NA)` to specify that no specific role is required.\n   * - `@ApiOperation` and `@ApiResponse` for API documentation purposes.\n   */\n  @HttpCode(HttpStatus.OK)\n  @Role(roleTypes.NA)\n  @ApiOperation({ summary: 'Refreshes the access token' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns the new access token and refresh token',\n  })\n  @Post('refresh-tokens')\n  public async refreshTokens(\n    @Body() refreshTokenDto: RefreshTokenDto,\n  ): Promise {\n    return this.authService.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nHashingProvider \n\nHashingProvider \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nRefreshTokensProvider\n\nRefreshTokensProvider\n\nAuthModule -->\n\nRefreshTokensProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The AuthModule is responsible for handling authentication-related functionality.\nIt imports the UserModule to handle user-related operations and provides the AuthService\nfor authentication services.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GenerateTokensProvider\n                        \n                        \n                            RefreshTokensProvider\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            HashingProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { HashingProvider } from './provider/hashing.provider';\nimport { BcryptProvider } from './provider/bcrypt.provider';\nimport { SignInProvider } from './provider/sign-in.provider';\nimport { GenerateTokensProvider } from './provider/generate-tokens.provider';\nimport { RefreshTokensProvider } from './provider/refresh-tokens.provider';\nimport { UserModule } from 'src/user/user.module';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\n\n/**\n * The AuthModule is responsible for handling authentication-related functionality.\n * It imports the UserModule to handle user-related operations and provides the AuthService\n * for authentication services.\n */\n@Module({\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    {\n      provide: HashingProvider,\n      useClass: BcryptProvider,\n    },\n    SignInProvider,\n    GenerateTokensProvider,\n    RefreshTokensProvider,\n  ],\n  exports: [AuthService, HashingProvider],\n  imports: [\n    forwardRef(() => UserModule),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The AuthService is responsible for handling authentication-related operations.\nIt uses the UserService to interact with user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider, refreshTokensProvider: RefreshTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokensProvider\n                                                  \n                                                        \n                                                                        RefreshTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Refreshes the access & refresh tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signinDto: SigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the given email & password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signinDto\n                                            \n                                                            SigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RefreshTokensProvider } from './provider/refresh-tokens.provider';\nimport { SignInProvider } from './provider/sign-in.provider';\nimport { SigninDto } from './dto/signin.dto';\nimport { RefreshTokenDto } from './dto/refresh-token.dto';\n\n/**\n * The AuthService is responsible for handling authentication-related operations.\n * It uses the UserService to interact with user data.\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Creates an instance of AuthService.\n   */\n  constructor(\n    private readonly signInProvider: SignInProvider,\n    private readonly refreshTokensProvider: RefreshTokensProvider,\n  ) {}\n\n  /**\n   * Logs in a user with the given email & password\n   */\n  public async signIn(signinDto: SigninDto) {\n    return await this.signInProvider.signIn(signinDto);\n  }\n\n  /**\n   * Refreshes the access & refresh tokens\n   */\n  public async refreshTokens(\n    refreshTokenDto: RefreshTokenDto,\n  ): Promise {\n    return await this.refreshTokensProvider.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptProvider.html":{"url":"injectables/BcryptProvider.html","title":"injectable - BcryptProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/provider/bcrypt.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Bcrypt hashing provider.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Public\n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/bcrypt.provider.ts:28\n                        \n                    \n\n\n            \n                \n                        Compares the provided data with the encrypted data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to compare.\n\n                                            \n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The encrypted data to compare against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to true if the data matches the encrypted data, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/bcrypt.provider.ts:17\n                        \n                    \n\n\n            \n                \n                        Hashes the provided data. The data can be a string or a buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to hash.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The hashed data.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HashingProvider } from './hashing.provider';\nimport * as bcrypt from 'bcrypt';\n\n/**\n * Bcrypt hashing provider.\n * @export  BcryptProvider  Bcrypt hashing provider.\n * @implements {HashingProvider}\n */\n@Injectable()\nexport class BcryptProvider implements HashingProvider {\n  /**\n   * Hashes the provided data. The data can be a string or a buffer.\n   * @param {(string | Buffer)} data The data to hash.\n   * @returns {Promise} The hashed data.\n   */\n  public async hashPassword(data: string | Buffer): Promise {\n    const salt = await bcrypt.genSalt();\n    return bcrypt.hash(data.toString(), salt);\n  }\n\n  /**\n   * Compares the provided data with the encrypted data.\n   * @param {(string | Buffer)} data The data to compare.\n   * @param {string} encrypted The encrypted data to compare against.\n   * @returns {Promise} A promise that resolves to true if the data matches the encrypted data, false otherwise.\n   */\n  public async comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise {\n    return bcrypt.compare(data.toString(), encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExternalResourceDto.html":{"url":"classes/CreateExternalResourceDto.html","title":"class - CreateExternalResourceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExternalResourceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/external-resource/dto/create-external-resource.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'The name of the external resource', example: 'NCBI Gene'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/external-resource/dto/create-external-resource.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty } from 'class-validator';\n\nexport class CreateExternalResourceDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The name of the external resource',\n    example: 'NCBI Gene',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneDto.html":{"url":"classes/CreateGeneDto.html","title":"class - CreateGeneDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene/dto/create-gene.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a gene.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                mod_id\n                            \n                            \n                                    \n                                    \n                                    \n                                speciesScientificName\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        mod_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The model organism DB ID of the gene', example: 'POTRI.001G000100'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/dto/create-gene.dto.ts:31\n                        \n                    \n\n            \n                \n                    The model organism DB ID (or equivalent) of the gene.\ne.g. 'POTRI.001G000100'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        speciesScientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The species scientific name', example: 'Populus trichocarpa'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/dto/create-gene.dto.ts:43\n                        \n                    \n\n            \n                \n                    The species scientific name.\ne.g. 'Populus trichocarpa'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         geneStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: geneStatus, description: 'The status of the gene', example: 'internal'})@IsEnum(geneStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/dto/create-gene.dto.ts:19\n                        \n                    \n\n            \n                \n                    The status of the gene (e.g. INTERNAL, APPROVED, etc.).\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { geneStatus } from '../enum/gene-status.enum';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\n/**\n * Data transfer object for creating a gene.\n */\nexport class CreateGeneDto {\n  /**\n   * The status of the gene (e.g. INTERNAL, APPROVED, etc.).\n   */\n  @ApiProperty({\n    enum: geneStatus,\n    description: 'The status of the gene',\n    example: 'internal',\n  })\n  @IsEnum(geneStatus)\n  @IsNotEmpty()\n  status: geneStatus;\n\n  /**\n   * The model organism DB ID (or equivalent) of the gene.\n   * e.g. 'POTRI.001G000100'.\n   */\n  @ApiPropertyOptional({\n    description: 'The model organism DB ID of the gene',\n    example: 'POTRI.001G000100',\n  })\n  @IsOptional()\n  @IsString()\n  mod_id: string;\n\n  /**\n   * The species scientific name.\n   * e.g. 'Populus trichocarpa'.\n   */\n  @ApiProperty({\n    description: 'The species scientific name',\n    example: 'Populus trichocarpa',\n  })\n  @IsString()\n  @IsNotEmpty()\n  speciesScientificName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneLocusTypeDto.html":{"url":"classes/CreateGeneLocusTypeDto.html","title":"class - CreateGeneLocusTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneLocusTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-locus-type/dto/create-gene-locus-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                geneId\n                            \n                            \n                                    \n                                    \n                                    \n                                locusTypeId\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        geneId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/dto/create-gene-locus-type.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locusTypeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/dto/create-gene-locus-type.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(basicStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/dto/create-gene-locus-type.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsInt, IsNotEmpty, Min } from 'class-validator';\nimport { basicStatus } from 'src/common/enum/basic-status.enum';\n\nexport class CreateGeneLocusTypeDto {\n  @IsInt()\n  @Min(1)\n  @IsNotEmpty()\n  geneId: number;\n\n  @IsInt()\n  @Min(1)\n  @IsNotEmpty()\n  locusTypeId: number;\n\n  @IsNotEmpty()\n  @IsEnum(basicStatus)\n  status: basicStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneNameDto.html":{"url":"classes/CreateGeneNameDto.html","title":"class - CreateGeneNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-name/dto/create-gene-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                gene\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiPropertyOptional({description: 'The gene ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/dto/create-gene-name.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiPropertyOptional({description: 'The name ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/dto/create-gene-name.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(basicStatus)@IsNotEmpty()@ApiProperty({enum: basicStatus, description: 'The status of the gene name', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/dto/create-gene-name.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         nomenclatureType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(nomenclatureType)@IsNotEmpty()@ApiProperty({enum: nomenclatureType, description: 'The type of the gene name', example: 'alias'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/dto/create-gene-name.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsInt, IsNotEmpty } from 'class-validator';\nimport { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { nomenclatureType } from 'src/common/enum/nomenclature-type.enum';\n\nexport class CreateGeneNameDto {\n  @IsEnum(nomenclatureType)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: nomenclatureType,\n    description: 'The type of the gene name',\n    example: 'alias',\n  })\n  type: nomenclatureType;\n\n  @IsEnum(basicStatus)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: basicStatus,\n    description: 'The status of the gene name',\n    example: 'public',\n  })\n  status: basicStatus;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiPropertyOptional({\n    description: 'The gene ID',\n    example: 1,\n  })\n  gene: number;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiPropertyOptional({\n    description: 'The name ID',\n    example: 1,\n  })\n  name: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneNoteDto.html":{"url":"classes/CreateGeneNoteDto.html","title":"class - CreateGeneNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-note/dto/create-gene-note.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                gene\n                            \n                            \n                                    \n                                    \n                                    \n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiProperty({description: 'The gene ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/dto/create-gene-note.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiProperty({description: 'The note ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/dto/create-gene-note.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(basicStatus)@IsNotEmpty()@ApiProperty({enum: basicStatus, description: 'The status of the gene note', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/dto/create-gene-note.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsInt } from 'class-validator';\nimport { basicStatus } from 'src/common/enum/basic-status.enum';\n\nexport class CreateGeneNoteDto {\n  @IsEnum(basicStatus)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: basicStatus,\n    description: 'The status of the gene note',\n    example: 'public',\n  })\n  status: basicStatus;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiProperty({\n    description: 'The gene ID',\n    example: 1,\n  })\n  gene: number;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiProperty({\n    description: 'The note ID',\n    example: 1,\n  })\n  note: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateGeneProvider.html":{"url":"injectables/CreateGeneProvider.html","title":"injectable - CreateGeneProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateGeneProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene/provider/create-gene.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                A provider for creating a new gene in the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, speciesService: SpeciesService, geneRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene/provider/create-gene.provider.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor of CreateGeneProvider.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe user service.\n\n\n                                                        \n                                                \n                                                \n                                                        speciesService\n                                                  \n                                                        \n                                                                        SpeciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe species service.\n\n\n                                                        \n                                                \n                                                \n                                                        geneRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe gene repository.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneDto: CreateGeneDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene/provider/create-gene.provider.ts:36\n                        \n                    \n\n\n            \n                \n                        Creates a new gene in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createGeneDto\n                                            \n                                                            CreateGeneDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to create a new gene.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user who creates the gene.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created gene.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserService } from 'src/user/user.service';\nimport { Repository } from 'typeorm';\nimport { Gene } from '../gene.entity';\nimport { CreateGeneDto } from '../dto/create-gene.dto';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { User } from 'src/user/user.entity';\nimport { SpeciesService } from 'src/species/provider/species.service';\nimport { Species } from 'src/species/species.entity';\n\n/**\n * A provider for creating a new gene in the database.\n */\n@Injectable()\nexport class CreateGeneProvider {\n  /**\n   * Constructor of CreateGeneProvider.\n   * @param userService - The user service.\n   * @param speciesService - The species service.\n   * @param geneRepository - The gene repository.\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly speciesService: SpeciesService,\n    @InjectRepository(Gene)\n    private readonly geneRepository: Repository,\n  ) {}\n\n  /**\n   * Creates a new gene in the database.\n   * @param createGeneDto - The data to create a new gene.\n   * @param user - The user who creates the gene.\n   * @returns The created gene.\n   */\n  public async create(\n    createGeneDto: CreateGeneDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author: User = undefined;\n    let species: Species = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      species = await this.speciesService.findBySciName(\n        createGeneDto.speciesScientificName,\n      );\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const gene = this.geneRepository.create({\n      ...createGeneDto,\n      creator: author,\n      species: species,\n    });\n    try {\n      return await this.geneRepository.save(gene);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description: 'Gene creation failed.',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneReplacementDto.html":{"url":"classes/CreateGeneReplacementDto.html","title":"class - CreateGeneReplacementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneReplacementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-replacement/dto/create-gene-replacement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                previousId\n                            \n                            \n                                    \n                                    \n                                    \n                                replacementId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        previousId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@ApiProperty({description: 'The ID of the gene that is being replaced', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/dto/create-gene-replacement.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        replacementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@ApiProperty({description: 'The ID of the gene that is replacing the previous gene', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/dto/create-gene-replacement.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class CreateGeneReplacementDto {\n  @IsInt()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The ID of the gene that is being replaced',\n    example: 1,\n  })\n  previousId: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The ID of the gene that is replacing the previous gene',\n    example: 2,\n  })\n  replacementId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneSymbolDto.html":{"url":"classes/CreateGeneSymbolDto.html","title":"class - CreateGeneSymbolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneSymbolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-symbol/dto/create-gene-symbol.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                gene\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                symbol\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiPropertyOptional({description: 'The gene ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/dto/create-gene-symbol.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(basicStatus)@IsNotEmpty()@ApiProperty({enum: basicStatus, description: 'The status of the gene symbol', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/dto/create-gene-symbol.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiPropertyOptional({description: 'The symbol ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/dto/create-gene-symbol.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         nomenclatureType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(nomenclatureType)@IsNotEmpty()@ApiProperty({enum: nomenclatureType, description: 'The type of gene symbol', example: 'alias'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/dto/create-gene-symbol.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsInt, IsNotEmpty } from 'class-validator';\nimport { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { nomenclatureType } from 'src/common/enum/nomenclature-type.enum';\n\nexport class CreateGeneSymbolDto {\n  @IsEnum(nomenclatureType)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: nomenclatureType,\n    description: 'The type of gene symbol',\n    example: 'alias',\n  })\n  type: nomenclatureType;\n\n  @IsEnum(basicStatus)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: basicStatus,\n    description: 'The status of the gene symbol',\n    example: 'public',\n  })\n  status: basicStatus;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiPropertyOptional({\n    description: 'The gene ID',\n    example: 1,\n  })\n  gene: number;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiPropertyOptional({\n    description: 'The symbol ID',\n    example: 1,\n  })\n  symbol: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneXrefDto.html":{"url":"classes/CreateGeneXrefDto.html","title":"class - CreateGeneXrefDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneXrefDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-xref/dto/create-gene-xref.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                gene\n                            \n                            \n                                    \n                                    \n                                    \n                                source\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                xref\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiPropertyOptional({description: 'The gene ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/dto/create-gene-xref.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'The source of the gene xref', example: 'curator'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/dto/create-gene-xref.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(basicStatus)@IsNotEmpty()@ApiProperty({enum: basicStatus, description: 'The status of the gene symbol', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/dto/create-gene-xref.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        xref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()@ApiPropertyOptional({description: 'The XRef ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/dto/create-gene-xref.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsInt, IsNotEmpty, IsString } from 'class-validator';\nimport { basicStatus } from 'src/common/enum/basic-status.enum';\n\nexport class CreateGeneXrefDto {\n  @IsEnum(basicStatus)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: basicStatus,\n    description: 'The status of the gene symbol',\n    example: 'public',\n  })\n  status: basicStatus;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiPropertyOptional({\n    description: 'The gene ID',\n    example: 1,\n  })\n  gene: number;\n\n  @IsNotEmpty()\n  @IsInt()\n  @ApiPropertyOptional({\n    description: 'The XRef ID',\n    example: 1,\n  })\n  xref: number;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'The source of the gene xref',\n    example: 'curator',\n  })\n  source: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocusGroupDto.html":{"url":"classes/CreateLocusGroupDto.html","title":"class - CreateLocusGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocusGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-group/dto/create-locus-group.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'The name of the locus group', example: 'Protein coding gene'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-group/dto/create-locus-group.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty } from 'class-validator';\n\nexport class CreateLocusGroupDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The name of the locus group',\n    example: 'Protein coding gene',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocusTypeDto.html":{"url":"classes/CreateLocusTypeDto.html","title":"class - CreateLocusTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocusTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-type/dto/create-locus-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                groupId\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)@ApiProperty({description: 'The ID of the locus group to which this locus type belongs', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-type/dto/create-locus-type.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'The name of the locus type', example: 'Gene with protein product'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-type/dto/create-locus-type.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty, IsString, Min } from 'class-validator';\n\nexport class CreateLocusTypeDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The name of the locus type',\n    example: 'Gene with protein product',\n  })\n  name: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  @ApiProperty({\n    description: 'The ID of the locus group to which this locus type belongs',\n    example: 1,\n  })\n  groupId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNameDto.html":{"url":"classes/CreateNameDto.html","title":"class - CreateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/name/dto/create-name.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Name data transfer object.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'An alias, previous or approved name of a gene', example: 'B-Raf proto-oncogene, serine/threonine kinase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/name/dto/create-name.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * Name data transfer object.\n */\nexport class CreateNameDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'An alias, previous or approved name of a gene',\n    example: 'B-Raf proto-oncogene, serine/threonine kinase',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNoteDto.html":{"url":"classes/CreateNoteDto.html","title":"class - CreateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/dto/create-note.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'A note about a gene', example: 'This gene is associated with a rare disease'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/dto/create-note.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty } from 'class-validator';\n\nexport class CreateNoteDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'A note about a gene',\n    example: 'This gene is associated with a rare disease',\n  })\n  note: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-role.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a role.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         roleName\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({enum: roleName, description: 'The name of the role', example: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dto/create-role.dto.ts:19\n                        \n                    \n\n            \n                \n                    The name of the role.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { roleName } from '../enum/role-name.enum';\n\n/**\n * Data transfer object for creating a role.\n */\nexport class CreateRoleDto {\n  /**\n   * The name of the role.\n   */\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: roleName,\n    description: 'The name of the role',\n    example: 'user',\n  })\n  name: roleName;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSymbolDto.html":{"url":"classes/CreateSymbolDto.html","title":"class - CreateSymbolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSymbolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/symbol/dto/create-symbol.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Symbol data transfer object.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(2)@Matches(/^[a-zA-Z0-9-]+$/, {message: 'symbol name must be alphanumeric, hyphens allowed'})@ApiProperty({description: 'An alias, previous or approved symbolic name of a gene', example: 'AAPL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/symbol/dto/create-symbol.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, Matches, MinLength } from 'class-validator';\n\n/**\n * Symbol data transfer object.\n */\nexport class CreateSymbolDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(2)\n  @Matches(/^[a-zA-Z0-9-]+$/, {\n    message: 'symbol name must be alphanumeric, hyphens allowed',\n  })\n  @ApiProperty({\n    description: 'An alias, previous or approved symbolic name of a gene',\n    example: 'AAPL',\n  })\n  symbol: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiPropertyOptional({description: 'Is the user a current user and can still log in?', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:97\n                        \n                    \n\n            \n                \n                    Is the user a current user and can still log in?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)@ApiProperty({description: 'The preferred display name of the user', example: 'Jonny Doe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n            \n                \n                    The display name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@MaxLength(255)@ApiProperty({description: 'The email of the user', example: 'john.doe@email.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:66\n                        \n                    \n\n            \n                \n                    The email of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)@ApiProperty({description: 'The first name of the user', example: 'John'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n            \n                \n                    The first name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MinLength(3)@MaxLength(96)@ApiPropertyOptional({description: 'The last name of the user', example: 'Doe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:54\n                        \n                    \n\n            \n                \n                    The last name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@MaxLength(16)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character'})@ApiProperty({description: 'The password of the user', example: 'Password1!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:86\n                        \n                    \n\n            \n                \n                    The password of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  MinLength,\n  MaxLength,\n  IsEmail,\n  IsOptional,\n  Matches,\n  IsBoolean,\n} from 'class-validator';\n\n/**\n * Data transfer object for creating a user\n */\nexport class CreateUserDto {\n  /**\n   * The display name of the user\n   */\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  @ApiProperty({\n    description: 'The preferred display name of the user',\n    example: 'Jonny Doe',\n  })\n  displayName: string;\n\n  /**\n   * The first name of the user\n   */\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  @ApiProperty({\n    description: 'The first name of the user',\n    example: 'John',\n  })\n  firstName: string;\n\n  /**\n   * The last name of the user\n   */\n  @IsOptional()\n  @IsString()\n  @MinLength(3)\n  @MaxLength(96)\n  @ApiPropertyOptional({\n    description: 'The last name of the user',\n    example: 'Doe',\n  })\n  lastName?: string;\n\n  /**\n   * The email of the user\n   */\n  @IsNotEmpty()\n  @IsEmail()\n  @MaxLength(255)\n  @ApiProperty({\n    description: 'The email of the user',\n    example: 'john.doe@email.com',\n  })\n  email: string;\n\n  /**\n   * The password of the user\n   */\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @MaxLength(16)\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n    {\n      message:\n        'Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character',\n    },\n  )\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'Password1!',\n  })\n  password: string;\n\n  /**\n   * Is the user a current user and can still log in?\n   */\n  @IsBoolean()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'Is the user a current user and can still log in?',\n    example: true,\n  })\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserProvider.html":{"url":"injectables/CreateUserProvider.html","title":"injectable - CreateUserProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/provider/create-user.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Provider for creating a new user. This provider is used by the user controller\nto create a new user. This provider is also used by the auth provider to create\na new user when a user signs up and by the admin controller to create a new user\nwith a specific role.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                createUserWithRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, hashingProvider: HashingProvider, mailService: MailService, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/user/provider/create-user.provider.ts:27\n                            \n                        \n\n                \n                    \n                            Constructs a new instance of the CreateUserProvider.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for managing User entities.\n\n\n                                                        \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe provider for hashing operations.\n\n\n                                                        \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for sending emails.\n\n\n                                                        \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for managing user roles.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/provider/create-user.provider.ts:117\n                        \n                    \n\n\n            \n                \n                        Creates a new user with the default role of user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUserWithRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserWithRole(createUserDto: AdminCreateUserDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/provider/create-user.provider.ts:48\n                        \n                    \n\n\n            \n                \n                        Creates a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            AdminCreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AdminCreateUserDto } from '../dto/admin-create-user.dto';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { HashingProvider } from 'src/auth/provider/hashing.provider';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MailService } from 'src/mail/mail.service';\nimport { Role } from 'src/role/role.entity';\nimport { RoleService } from 'src/role/provider/role.service';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateUserDto } from '../dto/create-user.dto';\n\n/**\n * Provider for creating a new user. This provider is used by the user controller\n * to create a new user. This provider is also used by the auth provider to create\n * a new user when a user signs up and by the admin controller to create a new user\n * with a specific role.\n */\n@Injectable()\nexport class CreateUserProvider {\n  /**\n   * Constructs a new instance of the CreateUserProvider.\n   *\n   * @param userRepository - The repository for managing User entities.\n   * @param hashingProvider - The provider for hashing operations.\n   * @param mailService - The service for sending emails.\n   * @param roleService - The service for managing user roles.\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @Inject(forwardRef(() => HashingProvider))\n    private readonly hashingProvider: HashingProvider,\n    private readonly mailService: MailService,\n    private readonly roleService: RoleService,\n  ) {}\n\n  /**\n   * Creates a new user.\n   */\n  public async createUserWithRole(\n    createUserDto: AdminCreateUserDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let existingUser = undefined;\n    let roles: Role[] = undefined;\n    let admin: User = undefined;\n    try {\n      existingUser = await this.userRepository.findOne({\n        where: { email: createUserDto.email },\n      });\n      admin = await this.userRepository.findOne({\n        where: { id: user.sub },\n      });\n      roles = await this.roleService.findMultiple(createUserDto.roles);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to create user at the moment, please try later.',\n        {\n          description: 'The request to create a user timed out.',\n          cause: error,\n        },\n      );\n    }\n    if (!admin) {\n      throw new BadRequestException('Admin role does not exist for user.');\n    }\n    if (\n      !admin.roles.some(\n        (role) => role.name === 'admin' || role.name === 'master',\n      )\n    ) {\n      throw new UnauthorizedException('Only admins can create new users.');\n    }\n    if (existingUser) {\n      throw new BadRequestException(\n        'User already exists, please check the email.',\n      );\n    }\n    if (createUserDto.roles.length !== roles.length) {\n      throw new BadRequestException('One or more roles do not exist.');\n    }\n\n    let newUser = this.userRepository.create({\n      ...createUserDto,\n      password: await this.hashingProvider.hashPassword(createUserDto.password),\n      roles: roles,\n    });\n    try {\n      newUser = await this.userRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to save user at the moment, please try later.',\n        {\n          description: `The request to save a user timed out. Error: ${String(error)}`,\n        },\n      );\n    }\n    try {\n      await this.mailService.sendUserWelcome(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n    return newUser;\n  }\n\n  /**\n   * Creates a new user with the default role of user.\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    let existingUser = undefined;\n    try {\n      existingUser = await this.userRepository.findOne({\n        where: { email: createUserDto.email },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to create user at the moment, please try later.',\n        {\n          description: 'The request to create a user timed out.',\n          cause: error,\n        },\n      );\n    }\n    if (existingUser) {\n      throw new BadRequestException(\n        'User already exists, please check the email.',\n      );\n    }\n\n    const roles = await this.roleService.findMultiple(['user']);\n    let newUser = this.userRepository.create({\n      ...createUserDto,\n      password: await this.hashingProvider.hashPassword(createUserDto.password),\n      roles: roles,\n    });\n    try {\n      newUser = await this.userRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to save user at the moment, please try later.',\n        {\n          description: `The request to save a user timed out. Error: ${String(error)}`,\n        },\n      );\n    }\n    try {\n      await this.mailService.sendUserWelcome(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n    return newUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateXrefDto.html":{"url":"classes/CreateXrefDto.html","title":"class - CreateXrefDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateXrefDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/xref/dto/create-xref.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                displayId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                extResourceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        displayId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(20)@ApiProperty({description: 'The accession number or ID of the xref', example: 'NM_004333'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/xref/dto/create-xref.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        extResourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)@ApiProperty({description: 'The ID of the external resource to which this xref belongs', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/xref/dto/create-xref.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty, IsString, MaxLength, Min } from 'class-validator';\n\nexport class CreateXrefDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(20)\n  @ApiProperty({\n    description: 'The accession number or ID of the xref',\n    example: 'NM_004333',\n  })\n  displayId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  @ApiProperty({\n    description: 'The ID of the external resource to which this xref belongs',\n    example: 1,\n  })\n  extResourceId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CuratorRoleGuard.html":{"url":"injectables/CuratorRoleGuard.html","title":"injectable - CuratorRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CuratorRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/role/curator.role.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard for checking if user has a curator role\n\n            \n\n            \n                Extends\n            \n            \n                            AccessTokenGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConf: ConfigType<>, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/role/curator.role.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor to create an instance of the CuratorRoleGuard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle JWT operations.\n\n\n                                                        \n                                                \n                                                \n                                                        jwtConf\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nJWT configuration.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/role/curator.role.guard.ts:48\n                        \n                    \n\n\n            \n                \n                        Method to determine if the request can proceed based on the user's role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nReturns true if the user has a curator role, otherwise throws an UnauthorizedException.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constant/auth.constant';\nimport { UserService } from 'src/user/user.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\n\n/**\n * Guard for checking if user has a curator role\n * @extends {AccessTokenGuard}\n * @property {UserService} userService - The service to handle user operations.\n * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n */\n@Injectable()\nexport class CuratorRoleGuard extends AccessTokenGuard {\n  /**\n   * Constructor to create an instance of the CuratorRoleGuard\n   * @constructor\n   * @param {JwtService} jwtService - Service to handle JWT operations.\n   * @param {ConfigType} jwtConf - JWT configuration.\n   * @param {UserService} userService - Service to handle user operations.\n   * @returns {CuratorRoleGuard} - An instance of the CuratorRoleGuard.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   */\n  constructor(\n    protected readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    protected readonly jwtConf: ConfigType,\n    private readonly userService: UserService,\n  ) {\n    super(jwtService, jwtConf);\n  }\n\n  /**\n   * Method to determine if the request can proceed based on the user's role.\n   * @param {ExecutionContext} context - The execution context of the request.\n   * @returns {Promise} - Returns true if the user has a curator role, otherwise throws an UnauthorizedException.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const token = this.extractRequestFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException('Token not found');\n    }\n    const payload = this.getPayloadFromContext(context);\n    request[REQUEST_USER_KEY] = payload;\n    const userId: number = request[REQUEST_USER_KEY].sub;\n    const user = await this.userService.findById(userId);\n    for (const role of user.roles) {\n      if (\n        [roleTypes.CURATOR, roleTypes.ADMIN, roleTypes.MASTER].includes(\n          role.name as roleTypes,\n        )\n      ) {\n        return true;\n      }\n    }\n    throw new UnauthorizedException(\n      `User does not have a ${roleTypes.CURATOR}, ${roleTypes.ADMIN} or ${roleTypes.MASTER} role`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataResponseInterceptor.html":{"url":"injectables/DataResponseInterceptor.html","title":"injectable - DataResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/data-response/data-response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                DataResponseInterceptor is an interceptor that is responsible for\nformatting the response data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptor/data-response/data-response.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            DataResponseInterceptor constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ConfigService service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptor/data-response/data-response.interceptor.ts:29\n                        \n                    \n\n\n            \n                \n                        Intercepts the response data and formats it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The execution context.\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The call handler.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the formatted data.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { map, Observable } from 'rxjs';\n\n/**\n * DataResponseInterceptor is an interceptor that is responsible for\n * formatting the response data.\n * @implements {NestInterceptor}\n */\n@Injectable()\nexport class DataResponseInterceptor implements NestInterceptor {\n  /**\n   * DataResponseInterceptor constructor.\n   * @param {ConfigService} configService  The ConfigService service.\n   */\n  constructor(private readonly configService: ConfigService) {}\n\n  /**\n   * Intercepts the response data and formats it.\n   * @param {ExecutionContext} context  The execution context.\n   * @param {CallHandler} next  The call handler.\n   * @returns {Observable}  An observable containing the formatted data.\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      map((data) => {\n        if (data) {\n          return {\n            data: data,\n            apiVersion: this.configService.get('appConfig.apiVersion'),\n          };\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExternalResource.html":{"url":"entities/ExternalResource.html","title":"entity - ExternalResource","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExternalResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/external-resource/external-resource.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                xrefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/external-resource/external-resource.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/external-resource/external-resource.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        xrefs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Xref[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, xref => xref.externalResource)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/external-resource/external-resource.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Xref } from 'src/xref/xref.entity';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class ExternalResource {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    unique: true,\n    nullable: false,\n  })\n  name: string;\n\n  @OneToMany(() => Xref, (xref) => xref.externalResource)\n  xrefs: Xref[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExternalResourceController.html":{"url":"controllers/ExternalResourceController.html","title":"controller - ExternalResourceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExternalResourceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/external-resource/external-resource.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                external-resource\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createLocusGroup\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getExternalResource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createLocusGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocusGroup(createExternalResourceDto: CreateExternalResourceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.ADMIN)@ApiBearerAuth()@ApiOperation({summary: 'Create a new external resource - Must be at admin level'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record could not be created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/external-resource/external-resource.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExternalResourceDto\n                                            \n                                                            CreateExternalResourceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getExternalResource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getExternalResource(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(roleTypes.USER)@ApiBearerAuth()@ApiOperation({summary: 'Get a locus group by id'})@ApiParam({name: 'id', description: 'The id of the external resource to retrieve', type: 'number'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiBadRequestResponse({description: 'The record could not be retrieved.'})\n                \n            \n\n                    \n                        \n                            Defined in src/external-resource/external-resource.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ExternalResourceService } from './external-resource.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { CreateExternalResourceDto } from './dto/create-external-resource.dto';\nimport { ExternalResource } from './external-resource.entity';\n\n@Controller('external-resource')\n@ApiTags('External Resource')\nexport class ExternalResourceController {\n  constructor(\n    private readonly externalResourceService: ExternalResourceService,\n  ) {}\n\n  @Post()\n  @Role(roleTypes.ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new external resource - Must be at admin level',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be created.',\n  })\n  async createLocusGroup(\n    @Body() createExternalResourceDto: CreateExternalResourceDto,\n  ): Promise {\n    return this.externalResourceService.create(createExternalResourceDto);\n  }\n\n  @Get(':id')\n  @Role(roleTypes.USER)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get a locus group by id',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'The id of the external resource to retrieve',\n    type: 'number',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be retrieved.',\n  })\n  async getExternalResource(id: number): Promise {\n    return this.externalResourceService.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExternalResourceModule.html":{"url":"modules/ExternalResourceModule.html","title":"module - ExternalResourceModule","body":"\n                   \n\n\n\n\n    Modules\n    ExternalResourceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExternalResourceModule\n\n\n\ncluster_ExternalResourceModule_exports\n\n\n\ncluster_ExternalResourceModule_providers\n\n\n\n\nExternalResourceService \n\nExternalResourceService \n\n\n\nExternalResourceModule\n\nExternalResourceModule\n\nExternalResourceService  -->\n\nExternalResourceModule->ExternalResourceService \n\n\n\n\n\nExternalResourceService\n\nExternalResourceService\n\nExternalResourceModule -->\n\nExternalResourceService->ExternalResourceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/external-resource/external-resource.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExternalResourceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExternalResourceController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExternalResourceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExternalResourceController } from './external-resource.controller';\nimport { ExternalResource } from './external-resource.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ExternalResourceService } from './external-resource.service';\n\n@Module({\n  controllers: [ExternalResourceController],\n  imports: [TypeOrmModule.forFeature([ExternalResource])],\n  providers: [ExternalResourceService],\n  exports: [ExternalResourceService],\n})\nexport class ExternalResourceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExternalResourceService.html":{"url":"injectables/ExternalResourceService.html","title":"injectable - ExternalResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExternalResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/external-resource/external-resource.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(externalResourceRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/external-resource/external-resource.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        externalResourceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createExternalResourceDto: CreateExternalResourceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/external-resource/external-resource.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExternalResourceDto\n                                            \n                                                            CreateExternalResourceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/external-resource/external-resource.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ExternalResource } from './external-resource.entity';\nimport { QueryFailedError, Repository } from 'typeorm';\nimport { CreateExternalResourceDto } from './dto/create-external-resource.dto';\n\n@Injectable()\nexport class ExternalResourceService {\n  constructor(\n    @InjectRepository(ExternalResource)\n    private readonly externalResourceRepository: Repository,\n  ) {}\n\n  public async create(\n    createExternalResourceDto: CreateExternalResourceDto,\n  ): Promise {\n    let externalResource: ExternalResource;\n    externalResource = await this.externalResourceRepository.create({\n      ...createExternalResourceDto,\n    });\n    try {\n      externalResource =\n        await this.externalResourceRepository.save(externalResource);\n    } catch (error) {\n      if (\n        error instanceof QueryFailedError &&\n        (error as any).code === '23505'\n      ) {\n        throw new BadRequestException('External resource already exists');\n      }\n    }\n    return externalResource;\n  }\n\n  public async findById(id: number): Promise {\n    let externalResource = undefined;\n    try {\n      externalResource = await this.externalResourceRepository.findOneBy({\n        id,\n      });\n    } catch (error) {\n      throw new BadRequestException({\n        description: 'External resource not found.',\n        cause: error,\n      });\n    }\n    if (!externalResource) {\n      throw new BadRequestException({\n        description: `Resource not found: ${id}.`,\n      });\n    }\n    return externalResource;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneUserByEmailProvider.html":{"url":"injectables/FindOneUserByEmailProvider.html","title":"injectable - FindOneUserByEmailProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneUserByEmailProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/provider/find-one-user-by-email.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Provider class to find a user by email.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/provider/find-one-user-by-email.provider.ts:14\n                            \n                        \n\n                \n                    \n                            Initializes the provider with the user repository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for the user entity.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/provider/find-one-user-by-email.provider.ts:34\n                        \n                    \n\n\n            \n                \n                        Finds a user by email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The user entity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\n\n/**\n * Provider class to find a user by email.\n */\n@Injectable()\nexport class FindOneUserByEmailProvider {\n  /**\n   * Initializes the provider with the user repository.\n   * @param userRepository The repository for the user entity.\n   * @throws RequestTimeoutException if the user cannot be found by email.\n   * @throws UnauthorizedException if the email is not found.\n   * @returns The user entity.\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  /**\n   * Finds a user by email.\n   * @param email The email of the user.\n   * @throws RequestTimeoutException if the user cannot be found by email.\n   * @throws UnauthorizedException if the email is not found.\n   * @returns The user entity.\n   */\n  public async findOneByEmail(email: string) {\n    let user: User | undefined;\n\n    try {\n      user = await this.userRepository.findOneBy({\n        email: email,\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: `Could not find user by email (${email}) at this time.`,\n      });\n    }\n\n    if (!user) {\n      throw new UnauthorizedException(`Email not found: ${email}`);\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Gene.html":{"url":"entities/Gene.html","title":"entity - Gene","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Gene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene/gene.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Gene entity class to store gene related information.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createDate\n                            \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                editor\n                            \n                            \n                                    \n                                geneLocusTypes\n                            \n                            \n                                    \n                                geneNames\n                            \n                            \n                                    \n                                geneNotes\n                            \n                            \n                                    \n                                geneReplacements\n                            \n                            \n                                    \n                                genesReplaced\n                            \n                            \n                                    \n                                geneSymbols\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                mod_id\n                            \n                            \n                                    \n                                modDate\n                            \n                            \n                                    \n                                species\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                withdrawnDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:55\n                        \n                    \n\n            \n                \n                    Date when the gene entry was created. Auto-generated by the database on insert.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.genesCreated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:48\n                        \n                    \n\n            \n                \n                    The person who first created the gene entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.genesEdited)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:62\n                        \n                    \n\n            \n                \n                    The person who last edited the gene entry.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneLocusTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneLocusType[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneLocusType => geneLocusType.gene)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneName[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneName => geneName.gene)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:123\n                        \n                    \n\n            \n                \n                    Gene names of the gene. A gene can have multiple gene names but only one is approved\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneNote[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneNote => geneNote.gene)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneReplacements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GeneReplacement[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneReplacement => geneReplacement.previousGene)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genesReplaced\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GeneReplacement[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneReplacement => geneReplacement.replacementGene)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneSymbols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneSymbol[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneSymbol => geneSymbol.gene)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:116\n                        \n                    \n\n            \n                \n                    Gene symbols of the gene. A gene can have multiple gene symbols but only one is approved\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:31\n                        \n                    \n\n            \n                \n                    Unique identifier of the gene. Auto-incremented by the database on insert.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mod_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 16, nullable: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:102\n                        \n                    \n\n            \n                \n                    The gene identifier in the source database. Mod stands for model organism database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:69\n                        \n                    \n\n            \n                \n                    Date when the gene entry was last modified. Auto-generated by the database on update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        species\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Species\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, species => species.genes, {eager: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:41\n                        \n                    \n\n            \n                \n                    Gene name of the gene.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: geneStatus, nullable: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:90\n                        \n                    \n\n            \n                \n                    The status of the gene. Default is internal and must be changed\nto public before the gene can be viewed by the public. The value\nis one of the geneStatus enum values.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        withdrawnDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene/gene.entity.ts:76\n                        \n                    \n\n            \n                \n                    The date the gene was soft deleted - status should therefore be withdrawn.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  ManyToOne,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  OneToMany,\n} from 'typeorm';\nimport { geneStatus } from './enum/gene-status.enum';\nimport { User } from 'src/user/user.entity';\nimport { Species } from 'src/species/species.entity';\n// import { GeneHistory } from 'src/gene-history/gene-history.entity';\nimport { GeneSymbol } from 'src/gene-symbol/gene-symbol.entity';\nimport { GeneName } from 'src/gene-name/gene-name.entity';\nimport { GeneLocusType } from 'src/gene-locus-type/gene-locus-type.entity';\nimport { GeneNote } from 'src/gene-note/gene-note.entity';\nimport { GeneReplacement } from 'src/gene-replacement/gene-replacement.entity';\n\n/**\n * Gene entity class to store gene related information.\n */\n@Entity()\nexport class Gene {\n  /**\n   * Unique identifier of the gene. Auto-incremented by the database on insert.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * Gene name of the gene.\n   * @type {Species}\n   */\n  @ManyToOne(() => Species, (species) => species.genes, {\n    eager: true,\n    nullable: false,\n  })\n  species: Species;\n\n  /**\n   * The person who first created the gene entry\n   * @type {User}\n   */\n  @ManyToOne(() => User, (user) => user.genesCreated)\n  creator: User;\n\n  /**\n   * Date when the gene entry was created. Auto-generated by the database on insert.\n   * @type {Date}\n   */\n  @CreateDateColumn()\n  createDate: Date;\n\n  /**\n   * The person who last edited the gene entry.\n   * @type {User}\n   */\n  @ManyToOne(() => User, (user) => user.genesEdited)\n  editor: User;\n\n  /**\n   * Date when the gene entry was last modified. Auto-generated by the database on update.\n   * @type {Date}\n   */\n  @UpdateDateColumn()\n  modDate: Date;\n\n  /**\n   * The date the gene was soft deleted - status should therefore be withdrawn.\n   * @type {Date}\n   */\n  @DeleteDateColumn()\n  withdrawnDate: Date;\n\n  /**\n   * The status of the gene. Default is internal and must be changed\n   * to public before the gene can be viewed by the public. The value\n   * is one of the geneStatus enum values.\n   * @type {geneStatus}\n   */\n  @Column({\n    type: 'enum',\n    enum: geneStatus,\n    nullable: false,\n    default: geneStatus.INTERNAL,\n  })\n  status: string;\n\n  /**\n   * The gene identifier in the source database. Mod stands for model organism database.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 16,\n    nullable: true,\n    unique: true,\n  })\n  mod_id: string;\n\n  /**\n   * Modifications to the gene entry are recorded in this table.\n   * @type {GeneHistory}\n   */\n  // @OneToMany(() => GeneHistory, (geneHistory) => geneHistory.gene)\n  // geneHistories: GeneHistory[];\n\n  /**\n   * Gene symbols of the gene. A gene can have multiple gene symbols but only one is approved\n   * @type {GeneSymbol}\n   */\n  @OneToMany(() => GeneSymbol, (geneSymbol) => geneSymbol.gene)\n  geneSymbols: GeneSymbol[];\n\n  /**\n   * Gene names of the gene. A gene can have multiple gene names but only one is approved\n   * @type {GeneName}\n   */\n  @OneToMany(() => GeneName, (geneName) => geneName.gene)\n  geneNames: GeneName[];\n\n  @OneToMany(() => GeneLocusType, (geneLocusType) => geneLocusType.gene)\n  geneLocusTypes: GeneLocusType[];\n\n  @OneToMany(() => GeneNote, (geneNote) => geneNote.gene)\n  geneNotes: GeneNote[];\n\n  @OneToMany(\n    () => GeneReplacement,\n    (geneReplacement) => geneReplacement.previousGene,\n  )\n  geneReplacements: GeneReplacement[];\n\n  @OneToMany(\n    () => GeneReplacement,\n    (geneReplacement) => geneReplacement.replacementGene,\n  )\n  genesReplaced: GeneReplacement[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneController.html":{"url":"controllers/GeneController.html","title":"controller - GeneController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene/gene.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n            \n                Description\n            \n            \n                Gene controller class to handle gene related routes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createGene\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getGeneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createGene\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGene(createGeneDto: CreateGeneDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.CURATOR)@ApiOperation({summary: 'Create a new gene - Must be a curator or an admin'})@ApiResponse({status: 201, description: 'The gene has been successfully created.'})@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/gene/gene.controller.ts:42\n                        \n                    \n\n\n            \n                \n                        Creates a new gene. Requires the user to have the 'curator' or above role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneDto\n                                            \n                                                            CreateGeneDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getGeneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGeneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(roleTypes.USER)@ApiBearerAuth()@ApiOperation({summary: 'Get a gene by its ID'})@ApiParam({name: 'id', description: 'The gene ID.', required: true})@ApiResponse({status: 200, description: 'The gene has been successfully retrieved.'})@ApiNotFoundResponse({description: 'Gene not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/gene/gene.controller.ts:70\n                        \n                    \n\n\n            \n                \n                        Get genes by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneDto } from './dto/create-gene.dto';\nimport { Gene } from './gene.entity';\nimport { GeneService } from './gene.service';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\n\n/**\n * Gene controller class to handle gene related routes.\n */\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneController {\n  /**\n   * Creates an instance of GeneController.\n   */\n  constructor(private readonly geneService: GeneService) {}\n\n  /**\n   * Creates a new gene. Requires the user to have the 'curator' or above role.\n   */\n  @Post()\n  @Role(roleTypes.CURATOR)\n  @ApiOperation({\n    summary: 'Create a new gene - Must be a curator or an admin',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The gene has been successfully created.',\n  })\n  @ApiBearerAuth()\n  public createGene(\n    @Body() createGeneDto: CreateGeneDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.geneService.create(createGeneDto, user);\n  }\n\n  /**\n   * Get genes by id\n   */\n  @Get(':id')\n  @Role(roleTypes.USER)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get a gene by its ID',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'The gene ID.',\n    required: true,\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The gene has been successfully retrieved.',\n  })\n  @ApiNotFoundResponse({\n    description: 'Gene not found',\n  })\n  public getGeneById(@Param('id') id: number): Promise {\n    return this.geneService.getById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneHistory.html":{"url":"entities/GeneHistory.html","title":"entity - GeneHistory","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-history/gene-history.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                editor\n                            \n                            \n                                    \n                                field\n                            \n                            \n                                    \n                                gene\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                post_update_value\n                            \n                            \n                                    \n                                pre_update_value\n                            \n                            \n                                    \n                                update_date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.id, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:65\n                        \n                    \n\n            \n                \n                    The user that made the update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 30, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:50\n                        \n                    \n\n            \n                \n                    The field that was updated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.id, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:73\n                        \n                    \n\n            \n                \n                    The gene that was updated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:17\n                        \n                    \n\n            \n                \n                    The unique identifier of the gene history.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post_update_value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:39\n                        \n                    \n\n            \n                \n                    The value after the update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pre_update_value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:28\n                        \n                    \n\n            \n                \n                    The value before the update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-history/gene-history.entity.ts:57\n                        \n                    \n\n            \n                \n                    The date of the update.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Gene } from 'src/gene/gene.entity';\nimport { User } from 'src/user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class GeneHistory {\n  /**\n   * The unique identifier of the gene history.\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * The value before the update.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n  })\n  pre_update_value: string;\n\n  /**\n   * The value after the update.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n  })\n  post_update_value: string;\n\n  /**\n   * The field that was updated.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 30,\n    nullable: false,\n  })\n  field: string;\n\n  /**\n   * The date of the update.\n   * @type {Date}\n   */\n  @CreateDateColumn()\n  update_date: Date;\n\n  /**\n   * The user that made the update.\n   * @type {User}\n   * @references User\n   */\n  @ManyToOne(() => User, (user) => user.id, { eager: true })\n  editor: User;\n\n  /**\n   * The gene that was updated.\n   * @type {Gene}\n   * @references Gene\n   */\n  @ManyToOne(() => Gene, (gene) => gene.id, { eager: true })\n  gene: Gene;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneHistoryModule.html":{"url":"modules/GeneHistoryModule.html","title":"module - GeneHistoryModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneHistoryModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-history/gene-history.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneHistory } from './gene-history.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([GeneHistory])],\n})\nexport class GeneHistoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneLocusType.html":{"url":"entities/GeneLocusType.html","title":"entity - GeneLocusType","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneLocusType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-locus-type/gene-locus-type.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                creationDate\n                            \n                            \n                                    \n                                    Optional\n                                creator\n                            \n                            \n                                    \n                                    Optional\n                                editor\n                            \n                            \n                                    \n                                gene\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                locusType\n                            \n                            \n                                    \n                                    Optional\n                                modDate\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    Optional\n                                withdrawnDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesCreated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesEdited)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.geneLocusTypes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locusType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocusType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, locusType => locusType.geneLocusTypes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: basicStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withdrawnDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-locus-type/gene-locus-type.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { Gene } from 'src/gene/gene.entity';\nimport { LocusType } from 'src/locus-type/locus-type.entity';\nimport { User } from 'src/user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity({\n  name: 'gene_has_locus_type',\n})\n@Unique(['gene', 'locusType'])\nexport class GeneLocusType {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({\n    type: 'enum',\n    enum: basicStatus,\n    default: basicStatus.INTERNAL,\n    nullable: false,\n  })\n  status: basicStatus;\n\n  @ManyToOne(() => Gene, (gene) => gene.geneLocusTypes)\n  gene: Gene;\n\n  @ManyToOne(() => LocusType, (locusType) => locusType.geneLocusTypes)\n  locusType: LocusType;\n\n  @CreateDateColumn()\n  creationDate?: Date;\n\n  @DeleteDateColumn()\n  withdrawnDate?: Date;\n\n  @UpdateDateColumn()\n  modDate?: Date;\n\n  @ManyToOne(() => User, (user) => user.geneNamesCreated)\n  creator?: User;\n\n  @ManyToOne(() => User, (user) => user.geneNamesEdited)\n  editor?: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneLocusTypeController.html":{"url":"controllers/GeneLocusTypeController.html","title":"controller - GeneLocusTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneLocusTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-locus-type/gene-locus-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createGeneLocusType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createGeneLocusType\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGeneLocusType(createGeneLocusTypeDto: CreateGeneLocusTypeDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new gene locus type relationship'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@Role(roleTypes.CURATOR)@ApiBearerAuth()@Post('locus-type')\n                \n            \n\n                    \n                        \n                            Defined in src/gene-locus-type/gene-locus-type.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneLocusTypeDto\n                                            \n                                                            CreateGeneLocusTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { GeneLocusTypeService } from './gene-locus-type.service';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { CreateGeneLocusTypeDto } from './dto/create-gene-locus-type.dto';\nimport { GeneLocusType } from './gene-locus-type.entity';\n\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneLocusTypeController {\n  constructor(private readonly geneLocusTypeService: GeneLocusTypeService) {}\n\n  @ApiOperation({ summary: 'Create a new gene locus type relationship' })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @Post('locus-type')\n  public createGeneLocusType(\n    @Body() createGeneLocusTypeDto: CreateGeneLocusTypeDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.geneLocusTypeService.create(createGeneLocusTypeDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneLocusTypeModule.html":{"url":"modules/GeneLocusTypeModule.html","title":"module - GeneLocusTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneLocusTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneLocusTypeModule\n\n\n\ncluster_GeneLocusTypeModule_imports\n\n\n\ncluster_GeneLocusTypeModule_providers\n\n\n\n\nGeneModule\n\nGeneModule\n\n\n\nGeneLocusTypeModule\n\nGeneLocusTypeModule\n\nGeneLocusTypeModule -->\n\nGeneModule->GeneLocusTypeModule\n\n\n\n\n\nLocusTypeModule\n\nLocusTypeModule\n\nGeneLocusTypeModule -->\n\nLocusTypeModule->GeneLocusTypeModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneLocusTypeModule -->\n\nRoleModule->GeneLocusTypeModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneLocusTypeModule -->\n\nUserModule->GeneLocusTypeModule\n\n\n\n\n\nGeneLocusTypeService\n\nGeneLocusTypeService\n\nGeneLocusTypeModule -->\n\nGeneLocusTypeService->GeneLocusTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-locus-type/gene-locus-type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneLocusTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneLocusTypeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneModule\n                        \n                        \n                            LocusTypeModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneLocusTypeController } from './gene-locus-type.controller';\nimport { GeneLocusTypeService } from './gene-locus-type.service';\nimport { LocusTypeModule } from 'src/locus-type/locus-type.module';\nimport { UserModule } from 'src/user/user.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { GeneModule } from 'src/gene/gene.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GeneLocusType } from './gene-locus-type.entity';\n\n@Module({\n  controllers: [GeneLocusTypeController],\n  providers: [GeneLocusTypeService],\n  imports: [\n    LocusTypeModule,\n    UserModule,\n    RoleModule,\n    GeneModule,\n    TypeOrmModule.forFeature([GeneLocusType]),\n  ],\n})\nexport class GeneLocusTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneLocusTypeService.html":{"url":"injectables/GeneLocusTypeService.html","title":"injectable - GeneLocusTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneLocusTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-locus-type/gene-locus-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, geneService: GeneService, locusTypeService: LocusTypeService, geneLocusTypeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene-locus-type/gene-locus-type.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneService\n                                                  \n                                                        \n                                                                        GeneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locusTypeService\n                                                  \n                                                        \n                                                                        LocusTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneLocusTypeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneLocusTypeDto: CreateGeneLocusTypeDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-locus-type/gene-locus-type.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneLocusTypeDto\n                                            \n                                                            CreateGeneLocusTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GeneService } from 'src/gene/gene.service';\nimport { LocusTypeService } from 'src/locus-type/locus-type.service';\nimport { UserService } from 'src/user/user.service';\nimport { Repository } from 'typeorm';\nimport { GeneLocusType } from './gene-locus-type.entity';\nimport { CreateGeneLocusTypeDto } from './dto/create-gene-locus-type.dto';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\n\n@Injectable()\nexport class GeneLocusTypeService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    private readonly locusTypeService: LocusTypeService,\n    @InjectRepository(GeneLocusType)\n    private readonly geneLocusTypeRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneLocusTypeDto: CreateGeneLocusTypeDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author = undefined;\n    let gene = undefined;\n    let locusType = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      gene = await this.geneService.getById(createGeneLocusTypeDto.geneId);\n      locusType = await this.locusTypeService.findById(\n        createGeneLocusTypeDto.locusTypeId,\n      );\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneLocusType = this.geneLocusTypeRepository.create({\n      gene,\n      locusType,\n      creator: author,\n      status: createGeneLocusTypeDto.status,\n    });\n    try {\n      return await this.geneLocusTypeRepository.save(geneLocusType);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description: 'Gene Locus type creation failed.',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneModule.html":{"url":"modules/GeneModule.html","title":"module - GeneModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneModule\n\n\n\ncluster_GeneModule_exports\n\n\n\ncluster_GeneModule_providers\n\n\n\ncluster_GeneModule_imports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nGeneModule\n\nGeneModule\n\nGeneModule -->\n\nPaginationModule->GeneModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneModule -->\n\nRoleModule->GeneModule\n\n\n\n\n\nSpeciesModule\n\nSpeciesModule\n\nGeneModule -->\n\nSpeciesModule->GeneModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneModule -->\n\nUserModule->GeneModule\n\n\n\n\n\nGeneService \n\nGeneService \n\nGeneService  -->\n\nGeneModule->GeneService \n\n\n\n\n\nCreateGeneProvider\n\nCreateGeneProvider\n\nGeneModule -->\n\nCreateGeneProvider->GeneModule\n\n\n\n\n\nGeneService\n\nGeneService\n\nGeneModule -->\n\nGeneService->GeneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene/gene.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Gene module class to handle gene related routes.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateGeneProvider\n                        \n                        \n                            GeneService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SpeciesModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeneService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneController } from './gene.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Gene } from './gene.entity';\nimport { GeneService } from './gene.service';\nimport { UserModule } from 'src/user/user.module';\nimport { CreateGeneProvider } from './provider/create-gene.provider';\nimport { SpeciesModule } from 'src/species/species.module';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { GeneSymbol } from 'src/gene-symbol/gene-symbol.entity';\nimport { GeneName } from 'src/gene-name/gene-name.entity';\nimport { GeneNote } from 'src/gene-note/gene-note.entity';\nimport { GeneReplacement } from 'src/gene-replacement/gene-replacement.entity';\n\n/**\n * Gene module class to handle gene related routes.\n */\n@Module({\n  controllers: [GeneController],\n  imports: [\n    UserModule,\n    TypeOrmModule.forFeature([\n      Gene,\n      GeneSymbol,\n      GeneName,\n      GeneNote,\n      GeneReplacement,\n    ]),\n    SpeciesModule,\n    PaginationModule,\n    RoleModule,\n  ],\n  exports: [GeneService],\n  providers: [GeneService, CreateGeneProvider],\n})\nexport class GeneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneName.html":{"url":"entities/GeneName.html","title":"entity - GeneName","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-name/gene-name.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                creationDate\n                            \n                            \n                                    \n                                    Optional\n                                creator\n                            \n                            \n                                    \n                                    Optional\n                                editor\n                            \n                            \n                                    \n                                gene\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                modDate\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    Optional\n                                withdrawnDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesCreated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesEdited)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.geneNames)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Name\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, name => name.geneNames)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: basicStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         nomenclatureType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: nomenclatureType, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withdrawnDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-name/gene-name.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { nomenclatureType } from 'src/common/enum/nomenclature-type.enum';\nimport { Gene } from 'src/gene/gene.entity';\nimport { Name } from 'src/name/name.entity';\nimport { User } from 'src/user/user.entity';\n\n@Entity({ name: 'gene_has_name' })\n@Unique(['gene', 'name'])\nexport class GeneName {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({\n    type: 'enum',\n    enum: nomenclatureType,\n    default: nomenclatureType.ALIAS,\n    nullable: false,\n  })\n  type: nomenclatureType;\n\n  @Column({\n    type: 'enum',\n    enum: basicStatus,\n    default: basicStatus.INTERNAL,\n    nullable: false,\n  })\n  status: basicStatus;\n\n  @ManyToOne(() => Gene, (gene) => gene.geneNames)\n  gene: Gene;\n\n  @ManyToOne(() => Name, (name) => name.geneNames)\n  name: Name;\n\n  @CreateDateColumn()\n  creationDate?: Date;\n\n  @UpdateDateColumn()\n  modDate?: Date;\n\n  @DeleteDateColumn()\n  withdrawnDate?: Date;\n\n  @ManyToOne(() => User, (user) => user.geneNamesCreated)\n  creator?: User;\n\n  @ManyToOne(() => User, (user) => user.geneNamesEdited)\n  editor?: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneNameController.html":{"url":"controllers/GeneNameController.html","title":"controller - GeneNameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneNameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-name/gene-name.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createGeneName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createGeneName\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGeneName(createGeneNameDto: CreateGeneNameDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new gene name'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@Role(roleTypes.CURATOR)@ApiBearerAuth()@Post('name')\n                \n            \n\n                    \n                        \n                            Defined in src/gene-name/gene-name.controller.ts:31\n                        \n                    \n\n\n            \n                \n                        Creates a new gene name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneNameDto\n                                            \n                                                            CreateGeneNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { GeneNameService } from './gene-name.service';\nimport { CreateGeneNameDto } from './dto/create-gene-name.dto';\nimport { GeneName } from './gene-name.entity';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\n\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneNameController {\n  constructor(private readonly geneNameService: GeneNameService) {}\n  /**\n   * Creates a new gene name.\n   */\n  @ApiOperation({ summary: 'Create a new gene name' })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @Post('name')\n  public createGeneName(\n    @Body() createGeneNameDto: CreateGeneNameDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.geneNameService.create(createGeneNameDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneNameModule.html":{"url":"modules/GeneNameModule.html","title":"module - GeneNameModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneNameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneNameModule\n\n\n\ncluster_GeneNameModule_imports\n\n\n\ncluster_GeneNameModule_providers\n\n\n\n\nGeneModule\n\nGeneModule\n\n\n\nGeneNameModule\n\nGeneNameModule\n\nGeneNameModule -->\n\nGeneModule->GeneNameModule\n\n\n\n\n\nNameModule\n\nNameModule\n\nGeneNameModule -->\n\nNameModule->GeneNameModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneNameModule -->\n\nRoleModule->GeneNameModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneNameModule -->\n\nUserModule->GeneNameModule\n\n\n\n\n\nGeneNameService\n\nGeneNameService\n\nGeneNameModule -->\n\nGeneNameService->GeneNameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-name/gene-name.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneNameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneNameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneModule\n                        \n                        \n                            NameModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneNameController } from './gene-name.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GeneName } from './gene-name.entity';\nimport { GeneNameService } from './gene-name.service';\nimport { RoleModule } from 'src/role/role.module';\nimport { GeneModule } from 'src/gene/gene.module';\nimport { UserModule } from 'src/user/user.module';\nimport { NameModule } from 'src/name/name.module';\n\n@Module({\n  controllers: [GeneNameController],\n  providers: [GeneNameService],\n  imports: [\n    NameModule,\n    UserModule,\n    GeneModule,\n    TypeOrmModule.forFeature([GeneName]),\n    RoleModule,\n  ],\n})\nexport class GeneNameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneNameService.html":{"url":"injectables/GeneNameService.html","title":"injectable - GeneNameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneNameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-name/gene-name.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, geneService: GeneService, nameService: NameService, geneNameRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene-name/gene-name.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneService\n                                                  \n                                                        \n                                                                        GeneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nameService\n                                                  \n                                                        \n                                                                        NameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneNameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneNameDto: CreateGeneNameDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-name/gene-name.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneNameDto\n                                            \n                                                            CreateGeneNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneNameDto } from './dto/create-gene-name.dto';\nimport { Gene } from 'src/gene/gene.entity';\nimport { User } from 'src/user/user.entity';\nimport { Name } from 'src/name/name.entity';\nimport { GeneName } from './gene-name.entity';\nimport { UserService } from 'src/user/user.service';\nimport { NameService } from 'src/name/name.service';\nimport { GeneService } from 'src/gene/gene.service';\n\n@Injectable()\nexport class GeneNameService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    private readonly nameService: NameService,\n    @InjectRepository(GeneName)\n    private readonly geneNameRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneNameDto: CreateGeneNameDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author: User = undefined;\n    let gene: Gene = undefined;\n    let name: Name = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      if (createGeneNameDto.gene) {\n        gene = await this.geneService.getById(createGeneNameDto.gene);\n      }\n      if (createGeneNameDto.name) {\n        name = await this.nameService.findName(createGeneNameDto.name);\n      }\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneName = this.geneNameRepository.create({\n      type: createGeneNameDto.type,\n      status: createGeneNameDto.status,\n      creator: author,\n      gene: gene,\n      name: name,\n    });\n    try {\n      return await this.geneNameRepository.save(geneName);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description: 'Gene name creation failed. Make sure the name is unique',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneNote.html":{"url":"entities/GeneNote.html","title":"entity - GeneNote","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-note/gene-note.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                creationDate\n                            \n                            \n                                    \n                                    Optional\n                                creator\n                            \n                            \n                                    \n                                    Optional\n                                editor\n                            \n                            \n                                    \n                                gene\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    Optional\n                                withdrawnDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNotesCreated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNotesEdited)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.geneNotes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Note\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, note => note.geneNotes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: basicStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withdrawnDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-note/gene-note.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { Gene } from 'src/gene/gene.entity';\nimport { Note } from 'src/note/note.entity';\nimport { User } from 'src/user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\n\n@Entity({ name: 'gene_has_note' })\n@Unique(['gene', 'note'])\nexport class GeneNote {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'enum',\n    enum: basicStatus,\n    default: basicStatus.INTERNAL,\n  })\n  status: basicStatus;\n\n  @ManyToOne(() => Gene, (gene) => gene.geneNotes)\n  gene: Gene;\n\n  @ManyToOne(() => Note, (note) => note.geneNotes)\n  note: Note;\n\n  @ManyToOne(() => User, (user) => user.geneNotesCreated)\n  creator?: User;\n\n  @CreateDateColumn()\n  creationDate?: Date;\n\n  @ManyToOne(() => User, (user) => user.geneNotesEdited)\n  editor?: User;\n\n  @DeleteDateColumn()\n  withdrawnDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneNoteController.html":{"url":"controllers/GeneNoteController.html","title":"controller - GeneNoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneNoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-note/gene-note.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneNoteDto: CreateGeneNoteDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-note/gene-note.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneNoteDto\n                                            \n                                                            CreateGeneNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { ConflictException, Controller } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GeneService } from 'src/gene/gene.service';\nimport { NoteService } from 'src/note/note.service';\nimport { UserService } from 'src/user/user.service';\nimport { Repository } from 'typeorm';\nimport { GeneNote } from './gene-note.entity';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneNoteDto } from './dto/create-gene-note.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneNoteController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    private readonly noteService: NoteService,\n    @InjectRepository(GeneNote)\n    private readonly geneNoteRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneNoteDto: CreateGeneNoteDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author = undefined;\n    let gene = undefined;\n    let note = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      gene = await this.geneService.getById(createGeneNoteDto.gene);\n      note = await this.noteService.getById(createGeneNoteDto.note);\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneNote = this.geneNoteRepository.create({\n      status: createGeneNoteDto.status,\n      creator: author,\n      gene: gene,\n      note: note,\n    });\n    try {\n      return await this.geneNoteRepository.save(geneNote);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description: 'Gene note creation failed. Make sure the note is unique',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneNoteModule.html":{"url":"modules/GeneNoteModule.html","title":"module - GeneNoteModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneNoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneNoteModule\n\n\n\ncluster_GeneNoteModule_imports\n\n\n\ncluster_GeneNoteModule_providers\n\n\n\n\nGeneModule\n\nGeneModule\n\n\n\nGeneNoteModule\n\nGeneNoteModule\n\nGeneNoteModule -->\n\nGeneModule->GeneNoteModule\n\n\n\n\n\nNoteModule\n\nNoteModule\n\nGeneNoteModule -->\n\nNoteModule->GeneNoteModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneNoteModule -->\n\nRoleModule->GeneNoteModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneNoteModule -->\n\nUserModule->GeneNoteModule\n\n\n\n\n\nGeneNoteService\n\nGeneNoteService\n\nGeneNoteModule -->\n\nGeneNoteService->GeneNoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-note/gene-note.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneNoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneNoteController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneModule\n                        \n                        \n                            NoteModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneNoteController } from './gene-note.controller';\nimport { GeneNoteService } from './gene-note.service';\nimport { NoteModule } from 'src/note/note.module';\nimport { UserModule } from 'src/user/user.module';\nimport { GeneModule } from 'src/gene/gene.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GeneNote } from './gene-note.entity';\n\n@Module({\n  controllers: [GeneNoteController],\n  providers: [GeneNoteService],\n  imports: [\n    NoteModule,\n    UserModule,\n    GeneModule,\n    RoleModule,\n    TypeOrmModule.forFeature([GeneNote]),\n  ],\n})\nexport class GeneNoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneNoteService.html":{"url":"injectables/GeneNoteService.html","title":"injectable - GeneNoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneNoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-note/gene-note.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, geneService: GeneService, noteService: NoteService, geneNoteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene-note/gene-note.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneService\n                                                  \n                                                        \n                                                                        GeneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noteService\n                                                  \n                                                        \n                                                                        NoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneNoteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneNoteDto: CreateGeneNoteDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-note/gene-note.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneNoteDto\n                                            \n                                                            CreateGeneNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GeneService } from 'src/gene/gene.service';\nimport { NoteService } from 'src/note/note.service';\nimport { UserService } from 'src/user/user.service';\nimport { Repository } from 'typeorm';\nimport { GeneNote } from './gene-note.entity';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneNoteDto } from './dto/create-gene-note.dto';\n\n@Injectable()\nexport class GeneNoteService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    private readonly noteService: NoteService,\n    @InjectRepository(GeneNote)\n    private readonly geneNoteRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneNoteDto: CreateGeneNoteDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author = undefined;\n    let gene = undefined;\n    let note = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      gene = await this.geneService.getById(createGeneNoteDto.gene);\n      note = await this.noteService.getById(createGeneNoteDto.note);\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneNote = this.geneNoteRepository.create({\n      status: createGeneNoteDto.status,\n      creator: author,\n      gene: gene,\n      note: note,\n    });\n    try {\n      return await this.geneNoteRepository.save(geneNote);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description: 'Gene note creation failed. Make sure the note is unique',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneReplacement.html":{"url":"entities/GeneReplacement.html","title":"entity - GeneReplacement","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneReplacement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-replacement/gene-replacement.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                editor\n                            \n                            \n                                    \n                                    \n                                previousGene\n                            \n                            \n                                    \n                                previousId\n                            \n                            \n                                    \n                                    \n                                replacementGene\n                            \n                            \n                                    \n                                replacementId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/gene-replacement.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneReplacements, {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/gene-replacement.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        previousGene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.geneReplacements)@JoinColumn({name: 'previous_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/gene-replacement.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        previousId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/gene-replacement.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        replacementGene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.genesReplaced)@JoinColumn({name: 'replacement_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/gene-replacement.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        replacementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-replacement/gene-replacement.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Gene } from 'src/gene/gene.entity';\nimport { User } from 'src/user/user.entity';\nimport {\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryColumn,\n} from 'typeorm';\n\n@Entity({ name: 'gene_replacement' })\nexport class GeneReplacement {\n  @PrimaryColumn()\n  previousId: number;\n\n  @PrimaryColumn()\n  replacementId: number;\n\n  @CreateDateColumn()\n  date: Date;\n\n  @ManyToOne(() => User, (user) => user.geneReplacements, { nullable: false })\n  editor: User;\n\n  @ManyToOne(() => Gene, (gene) => gene.geneReplacements)\n  @JoinColumn({ name: 'previous_id' })\n  previousGene: Gene;\n\n  @ManyToOne(() => Gene, (gene) => gene.genesReplaced)\n  @JoinColumn({ name: 'replacement_id' })\n  replacementGene: Gene;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneReplacementController.html":{"url":"controllers/GeneReplacementController.html","title":"controller - GeneReplacementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneReplacementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-replacement/gene-replacement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createGeneReplacement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createGeneReplacement\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGeneReplacement(createGeneReplacementDto: CreateGeneReplacementDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new gene replacement'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@Role(roleTypes.CURATOR)@ApiBearerAuth()@Post('replace')\n                \n            \n\n                    \n                        \n                            Defined in src/gene-replacement/gene-replacement.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneReplacementDto\n                                            \n                                                            CreateGeneReplacementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { GeneReplacementService } from './gene-replacement.service';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { GeneReplacement } from './gene-replacement.entity';\nimport { CreateGeneReplacementDto } from './dto/create-gene-replacement.dto';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\n\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneReplacementController {\n  constructor(\n    private readonly geneReplacementService: GeneReplacementService,\n  ) {}\n\n  @ApiOperation({ summary: 'Create a new gene replacement' })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @Post('replace')\n  public createGeneReplacement(\n    @Body() createGeneReplacementDto: CreateGeneReplacementDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.geneReplacementService.create(createGeneReplacementDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneReplacementModule.html":{"url":"modules/GeneReplacementModule.html","title":"module - GeneReplacementModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneReplacementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneReplacementModule\n\n\n\ncluster_GeneReplacementModule_providers\n\n\n\ncluster_GeneReplacementModule_imports\n\n\n\n\nGeneModule\n\nGeneModule\n\n\n\nGeneReplacementModule\n\nGeneReplacementModule\n\nGeneReplacementModule -->\n\nGeneModule->GeneReplacementModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneReplacementModule -->\n\nRoleModule->GeneReplacementModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneReplacementModule -->\n\nUserModule->GeneReplacementModule\n\n\n\n\n\nGeneReplacementService\n\nGeneReplacementService\n\nGeneReplacementModule -->\n\nGeneReplacementService->GeneReplacementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-replacement/gene-replacement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneReplacementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneReplacementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneReplacementController } from './gene-replacement.controller';\nimport { GeneReplacementService } from './gene-replacement.service';\nimport { UserModule } from 'src/user/user.module';\nimport { GeneModule } from 'src/gene/gene.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GeneReplacement } from './gene-replacement.entity';\n\n@Module({\n  controllers: [GeneReplacementController],\n  providers: [GeneReplacementService],\n  imports: [\n    UserModule,\n    GeneModule,\n    RoleModule,\n    TypeOrmModule.forFeature([GeneReplacement]),\n  ],\n})\nexport class GeneReplacementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneReplacementService.html":{"url":"injectables/GeneReplacementService.html","title":"injectable - GeneReplacementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneReplacementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-replacement/gene-replacement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, geneService: GeneService, geneReplacementRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene-replacement/gene-replacement.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneService\n                                                  \n                                                        \n                                                                        GeneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneReplacementRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneReplacementDto: CreateGeneReplacementDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-replacement/gene-replacement.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneReplacementDto\n                                            \n                                                            CreateGeneReplacementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GeneService } from 'src/gene/gene.service';\nimport { UserService } from 'src/user/user.service';\nimport { Repository } from 'typeorm';\nimport { GeneReplacement } from './gene-replacement.entity';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneReplacementDto } from './dto/create-gene-replacement.dto';\n\n@Injectable()\nexport class GeneReplacementService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    @InjectRepository(GeneReplacement)\n    private readonly geneReplacementRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneReplacementDto: CreateGeneReplacementDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let editor = undefined;\n    let previousGene = undefined;\n    let replacementGene = undefined;\n    try {\n      editor = await this.userService.findById(user.sub);\n      previousGene = await this.geneService.getById(\n        createGeneReplacementDto.previousId,\n      );\n      replacementGene = await this.geneService.getById(\n        createGeneReplacementDto.replacementId,\n      );\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneReplacement = this.geneReplacementRepository.create({\n      previousGene: previousGene,\n      replacementGene: replacementGene,\n      editor: editor,\n    });\n    try {\n      return await this.geneReplacementRepository.save(geneReplacement);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description:\n          'Gene replacement creation failed. Make sure the gene replacement is unique',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneService.html":{"url":"injectables/GeneService.html","title":"injectable - GeneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene/gene.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Gene service class to handle gene related operations and business logic\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geneRepository: Repository, createGeneProvider: CreateGeneProvider)\n                    \n                \n                        \n                            \n                                Defined in src/gene/gene.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor of GeneService class to initialize gene provider\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        geneRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        createGeneProvider\n                                                  \n                                                        \n                                                                        CreateGeneProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvider to create gene\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneDto: CreateGeneDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene/gene.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Method to create gene\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createGeneDto\n                                            \n                                                            CreateGeneDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData to create gene\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nActive user\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nCreated gene\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene/gene.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Method to get gene by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nGene id\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nGene\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateGeneProvider } from './provider/create-gene.provider';\nimport { Gene } from './gene.entity';\nimport { CreateGeneDto } from './dto/create-gene.dto';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n/**\n * Gene service class to handle gene related operations and business logic\n */\n@Injectable()\nexport class GeneService {\n  /**\n   * Constructor of GeneService class to initialize gene provider\n   * @param createGeneProvider - Provider to create gene\n   */\n  constructor(\n    @InjectRepository(Gene)\n    private readonly geneRepository: Repository,\n    private readonly createGeneProvider: CreateGeneProvider,\n  ) {}\n\n  /**\n   * Method to create gene\n   * @param createGeneDto - Data to create gene\n   * @param user - Active user\n   * @returns - Created gene\n   * @throws - Error if gene creation fails or user is not authorized\n   */\n  public async create(\n    createGeneDto: CreateGeneDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    return this.createGeneProvider.create(createGeneDto, user);\n  }\n\n  /**\n   * Method to get gene by id\n   * @param id - Gene id\n   * @returns - Gene\n   * @throws - Not found error if gene not found\n   */\n  public async getById(id: number): Promise {\n    return await this.geneRepository.findOneOrFail({ where: { id: id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneSymbol.html":{"url":"entities/GeneSymbol.html","title":"entity - GeneSymbol","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneSymbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-symbol/gene-symbol.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity class for the gene symbol.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                creationDate\n                            \n                            \n                                    \n                                    Optional\n                                creator\n                            \n                            \n                                    \n                                    Optional\n                                editor\n                            \n                            \n                                    \n                                gene\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                modDate\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                symbol\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    Optional\n                                withdrawnDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesCreated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesEdited)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.geneSymbols)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: basicStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Symbol\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, symbol => symbol.geneSymbols)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         nomenclatureType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: nomenclatureType, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withdrawnDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-symbol/gene-symbol.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { nomenclatureType } from 'src/common/enum/nomenclature-type.enum';\nimport { Gene } from 'src/gene/gene.entity';\nimport { Symbol } from 'src/symbol/symbol.entity';\nimport { User } from 'src/user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n\n/**\n * The entity class for the gene symbol.\n */\n@Entity({ name: 'gene_has_symbol' })\n@Unique(['gene', 'symbol'])\nexport class GeneSymbol {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({\n    type: 'enum',\n    enum: nomenclatureType,\n    default: nomenclatureType.ALIAS,\n    nullable: false,\n  })\n  type: nomenclatureType;\n\n  @Column({\n    type: 'enum',\n    enum: basicStatus,\n    default: basicStatus.INTERNAL,\n    nullable: false,\n  })\n  status: basicStatus;\n\n  @ManyToOne(() => Gene, (gene) => gene.geneSymbols)\n  gene: Gene;\n\n  @ManyToOne(() => Symbol, (symbol) => symbol.geneSymbols)\n  symbol: Symbol;\n\n  @CreateDateColumn()\n  creationDate: Date;\n\n  @UpdateDateColumn()\n  modDate?: Date;\n\n  @DeleteDateColumn()\n  withdrawnDate?: Date;\n\n  @ManyToOne(() => User, (user) => user.geneNamesCreated)\n  creator?: User;\n\n  @ManyToOne(() => User, (user) => user.geneNamesEdited)\n  editor?: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneSymbolController.html":{"url":"controllers/GeneSymbolController.html","title":"controller - GeneSymbolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneSymbolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-symbol/gene-symbol.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createGeneSymbol\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createGeneSymbol\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGeneSymbol(createGeneSymbolDto: CreateGeneSymbolDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new gene symbol'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@Role(roleTypes.CURATOR)@ApiBearerAuth()@Post('symbol')\n                \n            \n\n                    \n                        \n                            Defined in src/gene-symbol/gene-symbol.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneSymbolDto\n                                            \n                                                            CreateGeneSymbolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { GeneSymbolService } from './gene-symbol.service';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { CreateGeneSymbolDto } from './dto/create-gene-symbol.dto';\nimport { GeneSymbol } from './gene-symbol.entity';\n\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneSymbolController {\n  constructor(private readonly geneSymbolService: GeneSymbolService) {}\n\n  @ApiOperation({ summary: 'Create a new gene symbol' })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @Post('symbol')\n  public createGeneSymbol(\n    @Body() createGeneSymbolDto: CreateGeneSymbolDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.geneSymbolService.create(createGeneSymbolDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneSymbolModule.html":{"url":"modules/GeneSymbolModule.html","title":"module - GeneSymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneSymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneSymbolModule\n\n\n\ncluster_GeneSymbolModule_imports\n\n\n\ncluster_GeneSymbolModule_providers\n\n\n\n\nGeneModule\n\nGeneModule\n\n\n\nGeneSymbolModule\n\nGeneSymbolModule\n\nGeneSymbolModule -->\n\nGeneModule->GeneSymbolModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneSymbolModule -->\n\nRoleModule->GeneSymbolModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nGeneSymbolModule -->\n\nSymbolModule->GeneSymbolModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneSymbolModule -->\n\nUserModule->GeneSymbolModule\n\n\n\n\n\nGeneSymbolService\n\nGeneSymbolService\n\nGeneSymbolModule -->\n\nGeneSymbolService->GeneSymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-symbol/gene-symbol.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneSymbolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneSymbolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneSymbolController } from './gene-symbol.controller';\nimport { GeneSymbol } from './gene-symbol.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GeneSymbolService } from './gene-symbol.service';\nimport { SymbolModule } from 'src/symbol/symbol.module';\nimport { GeneModule } from 'src/gene/gene.module';\nimport { UserModule } from 'src/user/user.module';\nimport { RoleModule } from 'src/role/role.module';\n\n@Module({\n  controllers: [GeneSymbolController],\n  providers: [GeneSymbolService],\n  imports: [\n    SymbolModule,\n    UserModule,\n    GeneModule,\n    TypeOrmModule.forFeature([GeneSymbol]),\n    RoleModule,\n  ],\n})\nexport class GeneSymbolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneSymbolService.html":{"url":"injectables/GeneSymbolService.html","title":"injectable - GeneSymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneSymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-symbol/gene-symbol.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, geneService: GeneService, symbolService: SymbolService, geneSymbolRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene-symbol/gene-symbol.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneService\n                                                  \n                                                        \n                                                                        GeneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbolService\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneSymbolRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneSymbolDto: CreateGeneSymbolDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-symbol/gene-symbol.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneSymbolDto\n                                            \n                                                            CreateGeneSymbolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GeneService } from 'src/gene/gene.service';\nimport { SymbolService } from 'src/symbol/symbol.service';\nimport { UserService } from 'src/user/user.service';\nimport { Repository } from 'typeorm';\nimport { GeneSymbol } from './gene-symbol.entity';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneSymbolDto } from './dto/create-gene-symbol.dto';\n\n@Injectable()\nexport class GeneSymbolService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    private readonly symbolService: SymbolService,\n    @InjectRepository(GeneSymbol)\n    private readonly geneSymbolRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneSymbolDto: CreateGeneSymbolDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author = undefined;\n    let gene = undefined;\n    let symbol = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      gene = await this.geneService.getById(createGeneSymbolDto.gene);\n      symbol = await this.symbolService.findSymbol(createGeneSymbolDto.symbol);\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneSymbol = this.geneSymbolRepository.create({\n      type: createGeneSymbolDto.type,\n      status: createGeneSymbolDto.status,\n      creator: author,\n      gene: gene,\n      symbol: symbol,\n    });\n    try {\n      return await this.geneSymbolRepository.save(geneSymbol);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description:\n          'Gene symbol creation failed. Make sure the symbol is unique',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneXref.html":{"url":"entities/GeneXref.html","title":"entity - GeneXref","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneXref\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-xref/gene-xref.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                creationDate\n                            \n                            \n                                    \n                                    Optional\n                                creator\n                            \n                            \n                                    \n                                    Optional\n                                editor\n                            \n                            \n                                    \n                                gene\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                modDate\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    Optional\n                                withdrawnDate\n                            \n                            \n                                    \n                                xref\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesCreated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.geneNamesEdited)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, gene => gene.geneSymbols)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 10, nullable: false, default: 'curator'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         basicStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: basicStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withdrawnDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        xref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Xref\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, xref => xref.geneXrefs)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gene-xref/gene-xref.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { basicStatus } from 'src/common/enum/basic-status.enum';\nimport { Gene } from 'src/gene/gene.entity';\nimport { User } from 'src/user/user.entity';\nimport { Xref } from 'src/xref/xref.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity({ name: 'gene_has_xref' })\n@Unique(['gene', 'xref'])\nexport class GeneXref {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({\n    type: 'enum',\n    enum: basicStatus,\n    default: basicStatus.INTERNAL,\n    nullable: false,\n  })\n  status: basicStatus;\n\n  @CreateDateColumn()\n  creationDate?: Date;\n\n  @UpdateDateColumn()\n  modDate?: Date;\n\n  @DeleteDateColumn()\n  withdrawnDate?: Date;\n\n  @Column({\n    type: 'varchar',\n    length: 10,\n    nullable: false,\n    default: 'curator',\n  })\n  source: string;\n\n  @ManyToOne(() => Gene, (gene) => gene.geneSymbols)\n  gene: Gene;\n\n  @ManyToOne(() => Xref, (xref) => xref.geneXrefs)\n  xref: Xref;\n\n  @ManyToOne(() => User, (user) => user.geneNamesCreated)\n  creator?: User;\n\n  @ManyToOne(() => User, (user) => user.geneNamesEdited)\n  editor?: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneXrefController.html":{"url":"controllers/GeneXrefController.html","title":"controller - GeneXrefController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneXrefController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-xref/gene-xref.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gene\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createGeneXref\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createGeneXref\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGeneXref(createGeneXrefDto: CreateGeneXrefDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new gene xref'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@Role(roleTypes.CURATOR)@Post('xref')@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/gene-xref/gene-xref.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneXrefDto\n                                            \n                                                            CreateGeneXrefDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { GeneXrefService } from './gene-xref.service';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneXrefDto } from './dto/create-gene-xref.dto';\nimport { GeneXref } from './gene-xref.entity';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\n\n@Controller('gene')\n@ApiTags('Gene')\nexport class GeneXrefController {\n  constructor(private readonly geneXrefService: GeneXrefService) {}\n\n  @ApiOperation({ summary: 'Create a new gene xref' })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @Role(roleTypes.CURATOR)\n  @Post('xref')\n  @ApiBearerAuth()\n  public createGeneXref(\n    @Body() createGeneXrefDto: CreateGeneXrefDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.geneXrefService.create(createGeneXrefDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneXrefModule.html":{"url":"modules/GeneXrefModule.html","title":"module - GeneXrefModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneXrefModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneXrefModule\n\n\n\ncluster_GeneXrefModule_imports\n\n\n\ncluster_GeneXrefModule_providers\n\n\n\n\nGeneModule\n\nGeneModule\n\n\n\nGeneXrefModule\n\nGeneXrefModule\n\nGeneXrefModule -->\n\nGeneModule->GeneXrefModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneXrefModule -->\n\nRoleModule->GeneXrefModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nGeneXrefModule -->\n\nUserModule->GeneXrefModule\n\n\n\n\n\nXrefModule\n\nXrefModule\n\nGeneXrefModule -->\n\nXrefModule->GeneXrefModule\n\n\n\n\n\nGeneXrefService\n\nGeneXrefService\n\nGeneXrefModule -->\n\nGeneXrefService->GeneXrefModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gene-xref/gene-xref.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneXrefService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneXrefController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            XrefModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneXrefController } from './gene-xref.controller';\nimport { GeneXrefService } from './gene-xref.service';\nimport { XrefModule } from 'src/xref/xref.module';\nimport { UserModule } from 'src/user/user.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GeneModule } from 'src/gene/gene.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { GeneXref } from './gene-xref.entity';\n\n@Module({\n  controllers: [GeneXrefController],\n  providers: [GeneXrefService],\n  imports: [\n    XrefModule,\n    UserModule,\n    GeneModule,\n    TypeOrmModule.forFeature([GeneXref]),\n    RoleModule,\n  ],\n})\nexport class GeneXrefModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneXrefService.html":{"url":"injectables/GeneXrefService.html","title":"injectable - GeneXrefService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneXrefService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gene-xref/gene-xref.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, geneService: GeneService, xrefService: XrefService, geneXrefRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/gene-xref/gene-xref.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneService\n                                                  \n                                                        \n                                                                        GeneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xrefService\n                                                  \n                                                        \n                                                                        XrefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geneXrefRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createGeneXrefDto: CreateGeneXrefDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/gene-xref/gene-xref.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createGeneXrefDto\n                                            \n                                                            CreateGeneXrefDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GeneService } from 'src/gene/gene.service';\nimport { UserService } from 'src/user/user.service';\nimport { XrefService } from 'src/xref/xref.service';\nimport { Repository } from 'typeorm';\nimport { GeneXref } from './gene-xref.entity';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateGeneXrefDto } from './dto/create-gene-xref.dto';\n\n@Injectable()\nexport class GeneXrefService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly geneService: GeneService,\n    private readonly xrefService: XrefService,\n    @InjectRepository(GeneXref)\n    private readonly geneXrefRepository: Repository,\n  ) {}\n\n  public async create(\n    createGeneXrefDto: CreateGeneXrefDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    let author = undefined;\n    let gene = undefined;\n    let xref = undefined;\n    try {\n      author = await this.userService.findById(user.sub);\n      gene = await this.geneService.getById(createGeneXrefDto.gene);\n      xref = await this.xrefService.findById(createGeneXrefDto.xref);\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n    const geneXref = this.geneXrefRepository.create({\n      source: createGeneXrefDto.source,\n      status: createGeneXrefDto.status,\n      creator: author,\n      gene: gene,\n      xref: xref,\n    });\n    try {\n      return await this.geneXrefRepository.save(geneXref);\n    } catch (error) {\n      throw new ConflictException(error, {\n        description: 'Gene xref creation failed. Make sure the xref is unique',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokensProvider.html":{"url":"injectables/GenerateTokensProvider.html","title":"injectable - GenerateTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/provider/generate-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                GenerateTokensProvider is a provider that is responsible for generating JWT tokens.\nThe provider has two methods:\n\nsignToken: This method is responsible for signing a JWT token with the provided payload.\ngenerateTokens: This method is responsible for generating both access and refresh tokens.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/provider/generate-tokens.provider.ts:16\n                            \n                        \n\n                \n                    \n                            GenerateTokensProvider constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The JWT service.\n\n                                                        \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The JWT configuration.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/generate-tokens.provider.ts:59\n                        \n                    \n\n\n            \n                \n                        Generates both access and refresh tokens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user entity.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing both access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(userId: number, expiresIn: number, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/generate-tokens.provider.ts:35\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Signs a JWT token with the provided payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user ID.\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The token expiration time in seconds.\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The payload to include in the token.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The signed JWT token.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ActiveUserInterface } from '../interface/active-user.interface';\nimport { User } from 'src/user/user.entity';\n\n/**\n * GenerateTokensProvider is a provider that is responsible for generating JWT tokens.\n *\n * The provider has two methods:\n * - signToken: This method is responsible for signing a JWT token with the provided payload.\n * - generateTokens: This method is responsible for generating both access and refresh tokens.\n */\n@Injectable()\nexport class GenerateTokensProvider {\n  /**\n   * GenerateTokensProvider constructor.\n   * @param {JwtService} jwtService  The JWT service.\n   * @param {ConfigType} jwtConfiguration  The JWT configuration.\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * Signs a JWT token with the provided payload.\n   * @param userId  The user ID.\n   * @param expiresIn  The token expiration time in seconds.\n   * @param payload  The payload to include in the token.\n   * @returns {Promise}  The signed JWT token.\n   */\n  public async signToken(\n    userId: number,\n    expiresIn: number,\n    payload?: T,\n  ): Promise {\n    return await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn: expiresIn,\n      },\n    );\n  }\n\n  /**\n   * Generates both access and refresh tokens.\n   * @param user  The user entity.\n   * @returns {Promise}  An object containing both access and refresh tokens.\n   */\n  public async generateTokens(user: User) {\n    const [accessToken, refreshToken] = await Promise.all([\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        {\n          email: user.email,\n        },\n      ),\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl),\n    ]);\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserParamsDto.html":{"url":"classes/GetUserParamsDto.html","title":"class - GetUserParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/get-user-params.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object (DTO) class for getting user data with optional parameters.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific id', type: Number, example: 1})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/get-user-params.dto.ts:20\n                        \n                    \n\n            \n                \n                    The id of the user. It is the primary key of the user table.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * Data transfer object (DTO) class for getting user data with optional parameters.\n */\nexport class GetUserParamsDto {\n  /**\n   * The id of the user. It is the primary key of the user table.\n   */\n  @ApiPropertyOptional({\n    description: 'Get user with a specific id',\n    type: Number,\n    example: 1,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingProvider.html":{"url":"injectables/HashingProvider.html","title":"injectable - HashingProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/provider/hashing.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                HashingProvider is an abstract class that is to be extended by classes\nthat will act like a hash provider.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                comparePassword\n                            \n                            \n                                    Abstract\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/hashing.provider.ts:27\n                        \n                    \n\n\n            \n                \n                        Compares the provided data with the encrypted data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to compare.\n\n                                            \n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The encrypted data to compare against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to true if the data matches the encrypted data, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/hashing.provider.ts:19\n                        \n                    \n\n\n            \n                \n                        Hashes the provided data. The data can be a string or a buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to hash.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The hashed data.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * HashingProvider is an abstract class that is to be extended by classes\n * that will act like a hash provider.\n * @export abstract HashingProvider\n * @method {comparePassword}  Compares the provided data with the encrypted data.\n * @method {hashPassword}  Hashes the provided data.\n *\n */\n@Injectable()\nexport abstract class HashingProvider {\n  /**\n   * Hashes the provided data. The data can be a string or a buffer.\n   * @param {(string | Buffer)} data  The data to hash.\n   * @returns {Promise}  The hashed data.\n   * @abstract\n   */\n  abstract hashPassword(data: string | Buffer): Promise;\n  /**\n   * Compares the provided data with the encrypted data.\n   * @param {(string | Buffer)} data  The data to compare.\n   * @param {string} encrypted  The encrypted data to compare against.\n   * @returns {Promise}  A promise that resolves to true if the data matches the encrypted data, false otherwise.\n   * @abstract\n   */\n  abstract comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Location.html":{"url":"entities/Location.html","title":"entity - Location","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Location entity class definition.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assemblies\n                            \n                            \n                                    \n                                coordSystem\n                            \n                            \n                                    \n                                genbankAccession\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                refseqAccession\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assemblies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Assembly[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, assembly => assembly.locations, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:79\n                        \n                    \n\n            \n                \n                    The location connected to Assemblies.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coordSystem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:61\n                        \n                    \n\n            \n                \n                    The name or descriptor of the coordinate system.\nMust not be null or greater than 20 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genbankAccession\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:50\n                        \n                    \n\n            \n                \n                    GenBank accession.\nMust not be null or greater than 255 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:14\n                        \n                    \n\n            \n                \n                    Location identifier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:26\n                        \n                    \n\n            \n                \n                    Location name.\nMust not be null or greater than 255 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refseqAccession\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:38\n                        \n                    \n\n            \n                \n                    RefSeq accession.\nMust not be null or greater than 255 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/location.entity.ts:71\n                        \n                    \n\n            \n                \n                    The type of location.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Assembly } from 'src/assembly/assembly.entity';\nimport { Column, Entity, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Location entity class definition.\n */\n@Entity()\nexport class Location {\n  /**\n   * Location identifier.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  /**\n   * Location name.\n   * Must not be null or greater than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n  })\n  name: string;\n\n  /**\n   * RefSeq accession.\n   * Must not be null or greater than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n  })\n  refseqAccession: string;\n\n  /**\n   * GenBank accession.\n   * Must not be null or greater than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n  })\n  genbankAccession: string;\n\n  /**\n   * The name or descriptor of the coordinate system.\n   * Must not be null or greater than 20 characters.\n   */\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: false,\n  })\n  coordSystem: string;\n\n  /**\n   * The type of location.\n   */\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: false,\n  })\n  type: string;\n\n  /**\n   * The location connected to Assemblies.\n   */\n  @ManyToMany(() => Assembly, (assembly) => assembly.locations, {\n    onDelete: 'CASCADE',\n  })\n  assemblies: Assembly[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationController.html":{"url":"controllers/LocationController.html","title":"controller - LocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                location\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('location')\nexport class LocationController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/location/location.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationController } from './location.controller';\nimport { LocationService } from './location.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Location } from './location.entity';\n\n@Module({\n  controllers: [LocationController],\n  providers: [LocationService],\n  imports: [TypeOrmModule.forFeature([Location])],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LocationService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocusGroup.html":{"url":"entities/LocusGroup.html","title":"entity - LocusGroup","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocusGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-group/locus-group.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The LocusGroup entity represents a group of locus types.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                locusTypes\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-group/locus-group.entity.ts:14\n                        \n                    \n\n            \n                \n                    The unique identifier of the locus group.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locusTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocusType[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, locusType => locusType.locusGroup)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-group/locus-group.entity.ts:34\n                        \n                    \n\n            \n                \n                    1:M relationship with LocusType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 45, unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-group/locus-group.entity.ts:27\n                        \n                    \n\n            \n                \n                    The name of the locus group. Cannot be null or empty and must be unique\nwith less than 45 characters.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { LocusType } from 'src/locus-type/locus-type.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\n\n/**\n * The LocusGroup entity represents a group of locus types.\n */\n@Entity()\nexport class LocusGroup {\n  /**\n   * The unique identifier of the locus group.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * The name of the locus group. Cannot be null or empty and must be unique\n   * with less than 45 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 45,\n    unique: true,\n    nullable: false,\n  })\n  name: string;\n\n  /**\n   * 1:M relationship with LocusType\n   * @type {LocusType[]}\n   */\n  @OneToMany(() => LocusType, (locusType) => locusType.locusGroup)\n  locusTypes: LocusType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocusGroupController.html":{"url":"controllers/LocusGroupController.html","title":"controller - LocusGroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocusGroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-group/locus-group.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                locus-group\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createLocusGroup\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getLocusGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createLocusGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocusGroup(createLocusGroupDto: CreateLocusGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.ADMIN)@ApiBearerAuth()@ApiOperation({summary: 'Create a new locus group - Must be at admin level'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record could not be created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/locus-group/locus-group.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocusGroupDto\n                                            \n                                                            CreateLocusGroupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getLocusGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocusGroup(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(roleTypes.USER)@ApiBearerAuth()@ApiOperation({summary: 'Get a locus group by id'})@ApiParam({name: 'id', description: 'The id of the locus group to retrieve', type: 'number'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiBadRequestResponse({description: 'The record could not be retrieved.'})\n                \n            \n\n                    \n                        \n                            Defined in src/locus-group/locus-group.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { LocusGroup } from './locus-group.entity';\nimport { CreateLocusGroupDto } from './dto/create-locus-group.dto';\nimport { LocusGroupService } from './locus-group.service';\n\n@Controller('locus-group')\n@ApiTags('Locus Group')\nexport class LocusGroupController {\n  /**\n   * Creates an instance of LocusGroupController.\n   * @param {LocusGroupService} locusGroupService The locus group service.\n   */\n  constructor(private readonly locusGroupService: LocusGroupService) {}\n\n  @Post()\n  @Role(roleTypes.ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new locus group - Must be at admin level',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be created.',\n  })\n  async createLocusGroup(\n    @Body() createLocusGroupDto: CreateLocusGroupDto,\n  ): Promise {\n    return this.locusGroupService.create(createLocusGroupDto);\n  }\n\n  @Get(':id')\n  @Role(roleTypes.USER)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get a locus group by id',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'The id of the locus group to retrieve',\n    type: 'number',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be retrieved.',\n  })\n  async getLocusGroup(id: number): Promise {\n    return this.locusGroupService.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocusGroupModule.html":{"url":"modules/LocusGroupModule.html","title":"module - LocusGroupModule","body":"\n                   \n\n\n\n\n    Modules\n    LocusGroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocusGroupModule\n\n\n\ncluster_LocusGroupModule_exports\n\n\n\ncluster_LocusGroupModule_providers\n\n\n\n\nLocusGroupService \n\nLocusGroupService \n\n\n\nLocusGroupModule\n\nLocusGroupModule\n\nLocusGroupService  -->\n\nLocusGroupModule->LocusGroupService \n\n\n\n\n\nLocusGroupService\n\nLocusGroupService\n\nLocusGroupModule -->\n\nLocusGroupService->LocusGroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/locus-group/locus-group.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocusGroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocusGroupController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocusGroupService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocusGroupController } from './locus-group.controller';\nimport { LocusGroup } from './locus-group.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LocusGroupService } from './locus-group.service';\n\n@Module({\n  controllers: [LocusGroupController],\n  imports: [TypeOrmModule.forFeature([LocusGroup])],\n  providers: [LocusGroupService],\n  exports: [LocusGroupService],\n})\nexport class LocusGroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocusGroupService.html":{"url":"injectables/LocusGroupService.html","title":"injectable - LocusGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocusGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-group/locus-group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locusGroupRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/locus-group/locus-group.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locusGroupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLocusGroupDto: CreateLocusGroupDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/locus-group/locus-group.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocusGroupDto\n                                            \n                                                            CreateLocusGroupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/locus-group/locus-group.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { QueryFailedError, Repository } from 'typeorm';\nimport { LocusGroup } from './locus-group.entity';\nimport { CreateLocusGroupDto } from './dto/create-locus-group.dto';\n\n@Injectable()\nexport class LocusGroupService {\n  constructor(\n    @InjectRepository(LocusGroup)\n    private readonly locusGroupRepository: Repository,\n  ) {}\n\n  public async create(\n    createLocusGroupDto: CreateLocusGroupDto,\n  ): Promise {\n    let locusGroup: LocusGroup;\n    locusGroup = await this.locusGroupRepository.create({\n      ...createLocusGroupDto,\n    });\n    try {\n      locusGroup = await this.locusGroupRepository.save(locusGroup);\n    } catch (error) {\n      if (\n        error instanceof QueryFailedError &&\n        (error as any).code === '23505'\n      ) {\n        throw new BadRequestException('Locus group already exists');\n      }\n    }\n    return locusGroup;\n  }\n\n  public async findById(id: number): Promise {\n    let locusGroup = undefined;\n    try {\n      locusGroup = await this.locusGroupRepository.findOneBy({ id });\n    } catch (error) {\n      throw new BadRequestException({\n        description: 'Locus Group not found.',\n        cause: error,\n      });\n    }\n    if (!locusGroup) {\n      throw new BadRequestException({\n        description: `Locus group not found: ${id}.`,\n      });\n    }\n    return locusGroup;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocusType.html":{"url":"entities/LocusType.html","title":"entity - LocusType","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocusType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-type/locus-type.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The LocusType entity represents the type of a locus/genetic marker.\nSome may call this a BioType\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                geneLocusTypes\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                locusGroup\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneLocusTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneLocusType[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneLocusType => geneLocusType.locusType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-type/locus-type.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-type/locus-type.entity.ts:22\n                        \n                    \n\n            \n                \n                    The unique identifier of the locus type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locusGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocusGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, locusGroup => locusGroup.locusTypes, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-type/locus-type.entity.ts:43\n                        \n                    \n\n            \n                \n                    M:1 relationship with LocusGroup\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 45, unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/locus-type/locus-type.entity.ts:34\n                        \n                    \n\n            \n                \n                    The name of the locus type. Cannot be null or empty.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { GeneLocusType } from 'src/gene-locus-type/gene-locus-type.entity';\nimport { LocusGroup } from 'src/locus-group/locus-group.entity';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\n\n/**\n * The LocusType entity represents the type of a locus/genetic marker.\n * Some may call this a BioType\n */\n@Entity()\nexport class LocusType {\n  /**\n   * The unique identifier of the locus type.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * The name of the locus type. Cannot be null or empty.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 45,\n    unique: true,\n    nullable: false,\n  })\n  name: string;\n\n  /**\n   * M:1 relationship with LocusGroup\n   * @type {LocusGroup[]}\n   */\n  @ManyToOne(() => LocusGroup, (locusGroup) => locusGroup.locusTypes, {\n    eager: true,\n  })\n  locusGroup: LocusGroup;\n\n  @OneToMany(() => GeneLocusType, (geneLocusType) => geneLocusType.locusType)\n  geneLocusTypes: GeneLocusType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocusTypeController.html":{"url":"controllers/LocusTypeController.html","title":"controller - LocusTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocusTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-type/locus-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                locus-type\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createLocusType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getLocusGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createLocusType\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocusType(createLocusTypeDto: CreateLocusTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.ADMIN)@ApiBearerAuth()@ApiOperation({summary: 'Create a new locus type - Must be at admin level or above'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record could not be created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/locus-type/locus-type.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocusTypeDto\n                                            \n                                                            CreateLocusTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getLocusGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocusGroup(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(roleTypes.USER)@ApiBearerAuth()@ApiOperation({summary: 'Get a locus type by id'})@ApiParam({name: 'id', description: 'The id of the locus type to retrieve', type: 'number'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiBadRequestResponse({description: 'The record could not be retrieved.'})\n                \n            \n\n                    \n                        \n                            Defined in src/locus-type/locus-type.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { LocusTypeService } from './locus-type.service';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { CreateLocusTypeDto } from './dto/create-locus-type.dto';\nimport { LocusType } from './locus-type.entity';\n\n@Controller('locus-type')\n@ApiTags('Locus Type')\nexport class LocusTypeController {\n  constructor(private readonly locusTypeService: LocusTypeService) {}\n\n  @Post()\n  @Role(roleTypes.ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new locus type - Must be at admin level or above',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be created.',\n  })\n  async createLocusType(\n    @Body() createLocusTypeDto: CreateLocusTypeDto,\n  ): Promise {\n    return this.locusTypeService.create(createLocusTypeDto);\n  }\n\n  @Get(':id')\n  @Role(roleTypes.USER)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get a locus type by id',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'The id of the locus type to retrieve',\n    type: 'number',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be retrieved.',\n  })\n  async getLocusGroup(id: number): Promise {\n    return this.locusTypeService.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocusTypeModule.html":{"url":"modules/LocusTypeModule.html","title":"module - LocusTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    LocusTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocusTypeModule\n\n\n\ncluster_LocusTypeModule_exports\n\n\n\ncluster_LocusTypeModule_providers\n\n\n\ncluster_LocusTypeModule_imports\n\n\n\n\nLocusGroupModule\n\nLocusGroupModule\n\n\n\nLocusTypeModule\n\nLocusTypeModule\n\nLocusTypeModule -->\n\nLocusGroupModule->LocusTypeModule\n\n\n\n\n\nLocusTypeService \n\nLocusTypeService \n\nLocusTypeService  -->\n\nLocusTypeModule->LocusTypeService \n\n\n\n\n\nLocusTypeService\n\nLocusTypeService\n\nLocusTypeModule -->\n\nLocusTypeService->LocusTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/locus-type/locus-type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocusTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocusTypeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocusGroupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocusTypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocusTypeController } from './locus-type.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LocusType } from './locus-type.entity';\nimport { LocusTypeService } from './locus-type.service';\nimport { LocusGroupModule } from 'src/locus-group/locus-group.module';\n\n@Module({\n  controllers: [LocusTypeController],\n  imports: [TypeOrmModule.forFeature([LocusType]), LocusGroupModule],\n  providers: [LocusTypeService],\n  exports: [LocusTypeService],\n})\nexport class LocusTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocusTypeService.html":{"url":"injectables/LocusTypeService.html","title":"injectable - LocusTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocusTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locus-type/locus-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locusGroupService: LocusGroupService, locusTypeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/locus-type/locus-type.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locusGroupService\n                                                  \n                                                        \n                                                                        LocusGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locusTypeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLocusTypeDto: CreateLocusTypeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/locus-type/locus-type.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocusTypeDto\n                                            \n                                                            CreateLocusTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/locus-type/locus-type.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { LocusType } from './locus-type.entity';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { LocusGroup } from 'src/locus-group/locus-group.entity';\nimport { LocusGroupService } from 'src/locus-group/locus-group.service';\nimport { CreateLocusTypeDto } from './dto/create-locus-type.dto';\n\n@Injectable()\nexport class LocusTypeService {\n  constructor(\n    private readonly locusGroupService: LocusGroupService,\n    @InjectRepository(LocusType)\n    private readonly locusTypeRepository: Repository,\n  ) {}\n\n  public async create(\n    createLocusTypeDto: CreateLocusTypeDto,\n  ): Promise {\n    let locusType: LocusType;\n    let locusGroup: LocusGroup;\n    try {\n      locusGroup = await this.locusGroupService.findById(\n        createLocusTypeDto.groupId,\n      );\n    } catch (error) {\n      throw new BadRequestException({\n        description: 'Locus Group not found.',\n        cause: error,\n      });\n    }\n    locusType = await this.locusTypeRepository.create({\n      name: createLocusTypeDto.name,\n      locusGroup: locusGroup,\n    });\n    try {\n      locusType = await this.locusTypeRepository.save(locusType);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n    return locusType;\n  }\n\n  public async findById(id: number): Promise {\n    let locusType = undefined;\n    try {\n      locusType = await this.locusTypeRepository.findOneBy({ id });\n    } catch (error) {\n      throw new NotFoundException({\n        description: 'Locus Type not found.',\n        cause: error,\n      });\n    }\n    return locusType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Mail module to send email to users using SMTP server and EJS template engine for email template rendering.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\n\n/**\n * Mail module to send email to users using SMTP server and EJS template engine for email template rendering.\n */\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('appConfig.mailHost'),\n          secure: false,\n          port: 2525,\n          auth: {\n            user: config.get('appConfig.smtpUsername'),\n            pass: config.get('appConfig.smtpPassword'),\n          },\n        },\n        default: {\n          from: `My Blog `,\n        },\n        template: {\n          dir: join(__dirname, 'template'),\n          adapter: new EjsAdapter({\n            inlineCssEnabled: true,\n          }),\n          options: {\n            strict: false,\n          },\n        },\n      }),\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to send email to users.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendUserWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor to inject mailer service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mailer service to send email.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendUserWelcome\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendUserWelcome(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Send welcome email to user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User to send welcome email.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { User } from 'src/user/user.entity';\n\n/**\n * Service to send email to users.\n */\n@Injectable()\nexport class MailService {\n  /**\n   * Constructor to inject mailer service.\n   * @param mailerService Mailer service to send email.\n   */\n  constructor(private mailerService: MailerService) {}\n\n  /**\n   * Send welcome email to user.\n   * @param user User to send welcome email.\n   */\n  public async sendUserWelcome(user: User): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Onboarding team `,\n      subject: 'Welcome to NestJS Blog!',\n      template: './welcome',\n      context: {\n        name: user.firstName,\n        email: user.email,\n        loginUrl: 'http://localhost:3000/login',\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MasterRoleGuard.html":{"url":"guards/MasterRoleGuard.html","title":"guard - MasterRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    MasterRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guard/role/master.role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to check if the user has a master role.\n\n                \n\n                \n                Extends\n                \n                \n                                AccessTokenGuard\n                \n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConf: ConfigType<>, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/role/master.role.guard.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor to create an instance of the MasterRoleGuard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle JWT operations.\n\n\n                                                        \n                                                \n                                                \n                                                        jwtConf\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nJWT configuration.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/role/master.role.guard.ts:51\n                        \n                    \n\n\n            \n                \n                        Method to determine if the request can proceed based on the user's role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nReturns true if the user has a master role, otherwise throws an UnauthorizedException.\n\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constant/auth.constant';\nimport { UserService } from 'src/user/user.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\n\n/**\n * Guard to check if the user has a master role.\n * @extends {AccessTokenGuard}\n * @property {UserService} userService - The service to handle user operations.\n * @implements {CanActivate}\n * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n */\n@Injectable()\nexport class MasterRoleGuard extends AccessTokenGuard implements CanActivate {\n  /**\n   * Constructor to create an instance of the MasterRoleGuard\n   * @constructor\n   * @param {JwtService} jwtService - Service to handle JWT operations.\n   * @param {ConfigType} jwtConf - JWT configuration.\n   * @param {UserService} userService - Service to handle user operations.\n   * @returns {MasterRoleGuard} - An instance of the MasterRoleGuard.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   * @throws {UnauthorizedException} - Throws an exception if the user does not have the master role.\n   */\n  constructor(\n    protected readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    protected readonly jwtConf: ConfigType,\n    private readonly userService: UserService,\n  ) {\n    super(jwtService, jwtConf);\n  }\n\n  /**\n   * Method to determine if the request can proceed based on the user's role.\n   * @param {ExecutionContext} context - The execution context of the request.\n   * @returns {Promise} - Returns true if the user has a master role, otherwise throws an UnauthorizedException.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const token = this.extractRequestFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException('Token not found');\n    }\n    const payload = this.getPayloadFromContext(context);\n    request[REQUEST_USER_KEY] = payload;\n    const userId: number = request[REQUEST_USER_KEY].sub;\n    const user = await this.userService.findById(userId);\n    for (const role of user.roles) {\n      if (role.name === roleTypes.MASTER) {\n        return true;\n      }\n    }\n    throw new UnauthorizedException(\n      `User does not have the ${roleTypes.MASTER} role`,\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Name.html":{"url":"entities/Name.html","title":"entity - Name","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/name/name.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The Name entity represents a name.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                geneNames\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneName[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneName => geneName.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/name/name.entity.ts:34\n                        \n                    \n\n            \n                \n                    The gene names that have this name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/name/name.entity.ts:14\n                        \n                    \n\n            \n                \n                    The unique identifier of the name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/name/name.entity.ts:27\n                        \n                    \n\n            \n                \n                    The actual name. Cannot be null or empty and must be unique\nwith less than 255 characters.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { GeneName } from 'src/gene-name/gene-name.entity';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * The Name entity represents a name.\n */\n@Entity()\nexport class Name {\n  /**\n   * The unique identifier of the name.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * The actual name. Cannot be null or empty and must be unique\n   * with less than 255 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    unique: true,\n    nullable: false,\n  })\n  name: string;\n\n  /**\n   * The gene names that have this name.\n   * @type {GeneName[]}\n   */\n  @OneToMany(() => GeneName, (geneName) => geneName.name)\n  geneNames: GeneName[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NameController.html":{"url":"controllers/NameController.html","title":"controller - NameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/name/name.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                name\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createName\n                        \n                    \n                \n            \n            \n                \n                        \n                    createName(createNameDto: CreateNameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Create a new name - Must be at curator level or above'})@ApiResponse({status: 201, description: 'The name record has been successfully created.'})@ApiBadRequestResponse({description: 'The name already exists.'})\n                \n            \n\n                    \n                        \n                            Defined in src/name/name.controller.ts:81\n                        \n                    \n\n\n            \n                \n                        Creates a new name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createNameDto\n                                            \n                                                            CreateNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to create a new name.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName(query: number | string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':query')@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Retrieve a name by either ID or Name - Must be at curator level or above'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiNotFoundResponse({description: 'The name was not found.'})@ApiParam({name: 'query', description: 'The name ID or the name itself.', required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/name/name.controller.ts:58\n                        \n                    \n\n\n            \n                \n                        Retrieves a name by either ID or Name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The query to search for a name.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The promise of a name.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { NameService } from './name.service';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { Name } from './name.entity';\nimport { CreateNameDto } from './dto/create-name.dto';\n\n@Controller('name')\n@ApiTags('Name')\nexport class NameController {\n  /**\n   * Creates an instance of NameController.\n   * @param {NameService} nameService The name service.\n   */\n  constructor(private readonly nameService: NameService) {}\n\n  /**\n   * Retrieves a name by either ID or Name.\n   * @param {number | string} query The query to search for a name.\n   * @returns {Promise} The promise of a name.\n   */\n  @Get(':query')\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary:\n      'Retrieve a name by either ID or Name - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n    // links: {\n    //   'Get Name': {\n    //     operationRef: '/name/{query}',\n    //     parameters: {\n    //       query: 1,\n    //     },\n    //   },\n    // },\n  })\n  @ApiNotFoundResponse({\n    description: 'The name was not found.',\n  })\n  @ApiParam({\n    name: 'query',\n    description: 'The name ID or the name itself.',\n    required: true,\n  })\n  public getName(@Param('query') query: number | string): Promise {\n    return this.nameService.findName(query);\n  }\n\n  /**\n   * Creates a new name.\n   * @param {CreateNameDto} createNameDto The data to create a new name.\n   * @throws {BadRequestException} If the name already exists.\n   * @returns {Promise} The created name.\n   */\n  @Post()\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new name - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The name record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The name already exists.',\n  })\n  public createName(@Body() createNameDto: CreateNameDto): Promise {\n    return this.nameService.create(createNameDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameModule.html":{"url":"modules/NameModule.html","title":"module - NameModule","body":"\n                   \n\n\n\n\n    Modules\n    NameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NameModule\n\n\n\ncluster_NameModule_imports\n\n\n\ncluster_NameModule_exports\n\n\n\ncluster_NameModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nNameModule\n\nNameModule\n\nNameModule -->\n\nRoleModule->NameModule\n\n\n\n\n\nNameService \n\nNameService \n\nNameService  -->\n\nNameModule->NameService \n\n\n\n\n\nNameService\n\nNameService\n\nNameModule -->\n\nNameService->NameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/name/name.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NameController } from './name.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Name } from './name.entity';\nimport { RoleModule } from 'src/role/role.module';\nimport { NameService } from './name.service';\n\n@Module({\n  controllers: [NameController],\n  imports: [TypeOrmModule.forFeature([Name]), RoleModule],\n  providers: [NameService],\n  exports: [NameService],\n})\nexport class NameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NameService.html":{"url":"injectables/NameService.html","title":"injectable - NameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/name/name.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteById\n                            \n                            \n                                    Public\n                                    Async\n                                findName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nameRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/name/name.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of NameService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        nameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name repository.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNameDto: CreateNameDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/name/name.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Creates a new name. If the name already exists, it throws an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createNameDto\n                                            \n                                                            CreateNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to create a new name.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(nameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/name/name.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Deletes a name by its ID. Using this method will not cascade delete\nand so will cause issues if the name is used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the name to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An empty promise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findName(query: number | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/name/name.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Finds a name by its ID or name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID or name to find.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found name.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, QueryFailedError } from 'typeorm';\nimport { Name } from './name.entity';\nimport { CreateNameDto } from './dto/create-name.dto';\n\n@Injectable()\nexport class NameService {\n  /**\n   * Creates an instance of NameService.\n   * @param {Repository} nameRepository The name repository.\n   */\n  constructor(\n    @InjectRepository(Name)\n    private readonly nameRepository: Repository,\n  ) {}\n\n  /**\n   * Creates a new name. If the name already exists, it throws an error.\n   * @param {CreateNameDto} createNameDto The data to create a new name.\n   * @returns {Promise} The created name.\n   */\n  public async create(createNameDto: CreateNameDto): Promise {\n    let name: Name;\n    name = await this.nameRepository.create({ ...createNameDto });\n    try {\n      name = await this.nameRepository.save(name);\n    } catch (error) {\n      if (\n        error instanceof QueryFailedError &&\n        (error as any).code === '23505'\n      ) {\n        throw new BadRequestException('Name already exists');\n      }\n    }\n    return name;\n  }\n\n  /**\n   * Updates a name. If the name does not exist, it throws an error.\n   * @returns {Promise} The updated name.\n   * @param {number} nameId The ID of the name to update.\n   * @param {CreateNameDto} updateNameDto The data to update the name.\n   * @throws {BadRequestException} If the name ID does not exist.\n   * @throws {RequestTimeoutException} If the request to the database times out.\n   * @ignore This method is not yet used in the routes.\n   */\n  public async update(\n    nameId: number,\n    updateNameDto: CreateNameDto,\n  ): Promise {\n    let name: Name;\n    try {\n      name = await this.nameRepository.findOne({\n        where: { id: nameId },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description:\n          'The request to the database timed out. Failed to find the name.',\n        cause: error,\n      });\n    }\n    if (!name) {\n      throw new BadRequestException('Name ID does not exist');\n    }\n    name.name = updateNameDto.name;\n    try {\n      await this.nameRepository.save(name);\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description: 'Failed to update the name',\n        cause: error,\n      });\n    }\n    return name;\n  }\n\n  /**\n   * Deletes a name by its ID. Using this method will not cascade delete\n   * and so will cause issues if the name is used.\n   * @param {number} nameId The ID of the name to delete.\n   * @returns {Promise} An empty promise.\n   */\n  public async deleteById(nameId: number): Promise {\n    const name = await this.nameRepository.findOne({\n      where: { id: nameId },\n    });\n    if (!name) {\n      throw new NotFoundException(`Name not found for ID: ${nameId}`);\n    }\n    await this.nameRepository.remove(name);\n  }\n\n  /**\n   * Deletes a name by its name.\n   * @param {string} name The name to delete.\n   * @returns {Promise} An empty promise.\n   * @ignore This method is not yet used in the routes.\n   */\n  public async deleteByName(name: string): Promise {\n    await this.nameRepository.delete({ name: name });\n  }\n\n  /**\n   * Finds a name by its ID or name.\n   * @param {number | string} query The ID or name to find.\n   * @returns {Promise} The found name.\n   */\n  public async findName(query: number | string): Promise {\n    let name: Name;\n    if (typeof query === 'number') {\n      name = await this.nameRepository.findOne({\n        where: { id: query },\n      });\n    } else {\n      name = await this.nameRepository.findOne({\n        where: { name: query },\n      });\n    }\n    if (!name) {\n      throw new NotFoundException(`Name not found for query: ${query}`);\n    }\n    return name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Note.html":{"url":"entities/Note.html","title":"entity - Note","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/note.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                geneNotes\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneNote[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneNote => geneNote.note)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/note.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/note.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/note.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { GeneNote } from 'src/gene-note/gene-note.entity';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Note {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'text',\n    nullable: false,\n    unique: true,\n  })\n  note: string;\n\n  @OneToMany(() => GeneNote, (geneNote) => geneNote.note)\n  geneNotes: GeneNote[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NoteController.html":{"url":"controllers/NoteController.html","title":"controller - NoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/note.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                note\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createNote\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getNoteById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createNote\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNote(createNoteDto: CreateNoteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Create a new note - Must be at curator level or above'})@ApiResponse({status: 201, description: 'The note record has been successfully created.'})@ApiBadRequestResponse({description: 'The note already exists.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getNoteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNoteById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Retrieve a note by ID - Must be at curator level or above'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiNotFoundResponse({description: 'The note was not found.'})@ApiParam({name: 'id', description: 'The ID of the note to retrieve.', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { NoteService } from './note.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { Note } from './note.entity';\nimport { CreateNoteDto } from './dto/create-note.dto';\n\n@Controller('note')\n@ApiTags('Note')\nexport class NoteController {\n  constructor(private readonly noteService: NoteService) {}\n\n  @Get(':id')\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Retrieve a note by ID - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n  })\n  @ApiNotFoundResponse({\n    description: 'The note was not found.',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'The ID of the note to retrieve.',\n    example: 1,\n  })\n  async getNoteById(@Param('id') id: number): Promise {\n    return this.noteService.getById(id);\n  }\n\n  @Post()\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new note - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The note record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The note already exists.',\n  })\n  public createNote(@Body() createNoteDto: CreateNoteDto): Promise {\n    return this.noteService.create(createNoteDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoteModule.html":{"url":"modules/NoteModule.html","title":"module - NoteModule","body":"\n                   \n\n\n\n\n    Modules\n    NoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NoteModule\n\n\n\ncluster_NoteModule_exports\n\n\n\ncluster_NoteModule_providers\n\n\n\ncluster_NoteModule_imports\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nNoteModule\n\nNoteModule\n\nNoteModule -->\n\nRoleModule->NoteModule\n\n\n\n\n\nNoteService \n\nNoteService \n\nNoteService  -->\n\nNoteModule->NoteService \n\n\n\n\n\nNoteService\n\nNoteService\n\nNoteModule -->\n\nNoteService->NoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/note/note.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NoteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NoteController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NoteService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NoteController } from './note.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Note } from './note.entity';\nimport { RoleModule } from 'src/role/role.module';\nimport { NoteService } from './note.service';\n\n@Module({\n  controllers: [NoteController],\n  imports: [TypeOrmModule.forFeature([Note]), RoleModule],\n  providers: [NoteService],\n  exports: [NoteService],\n})\nexport class NoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoteService.html":{"url":"injectables/NoteService.html","title":"injectable - NoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/note.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteById\n                            \n                            \n                                    Public\n                                    Async\n                                getById\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(noteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/note/note.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        noteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNoteDto: CreateNoteDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(noteId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(noteId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(noteId: number, updateNoteDto: CreateNoteDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { QueryFailedError, Repository } from 'typeorm';\nimport { Note } from './note.entity';\nimport { CreateNoteDto } from './dto/create-note.dto';\n\n@Injectable()\nexport class NoteService {\n  constructor(\n    @InjectRepository(Note)\n    private readonly noteRepository: Repository,\n  ) {}\n\n  public async create(createNoteDto: CreateNoteDto): Promise {\n    let note: Note;\n    note = await this.noteRepository.create({ ...createNoteDto });\n    try {\n      note = await this.noteRepository.save(note);\n    } catch (error) {\n      if (\n        error instanceof QueryFailedError &&\n        (error as any).code === '23505'\n      ) {\n        throw new BadRequestException('Note already exists');\n      }\n    }\n    return note;\n  }\n\n  public async update(\n    noteId: number,\n    updateNoteDto: CreateNoteDto,\n  ): Promise {\n    let note: Note;\n    try {\n      note = await this.noteRepository.findOne({\n        where: { id: noteId },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description:\n          'The request to the database timed out. Failed to find the note.',\n        cause: error,\n      });\n    }\n    if (!note) {\n      throw new BadRequestException('Note ID does not exist');\n    }\n    note.note = updateNoteDto.note;\n    try {\n      await this.noteRepository.save(note);\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description: 'Failed to update the name',\n        cause: error,\n      });\n    }\n    return note;\n  }\n\n  public async getById(noteId: number): Promise {\n    let note: Note;\n    try {\n      note = await this.noteRepository.findOne({\n        where: { id: noteId },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description:\n          'The request to the database timed out. Failed to find the note.',\n        cause: error,\n      });\n    }\n    if (!note) {\n      throw new BadRequestException('Note ID does not exist');\n    }\n    return note;\n  }\n\n  public async deleteById(noteId: number): Promise {\n    try {\n      await this.noteRepository.delete({ id: noteId });\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description: 'Failed to delete the note',\n        cause: error,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interface/paginated.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for paginated data response.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The links.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The meta information.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  /**\n   * The data.\n   * @type {T[]}\n   */\n  data: T[];\n  /**\n   * The meta information.\n   * @property {number} itemsPerPage  The number of items per page.\n   * @property {number} totalItems  The total number of items.\n   * @property {number} currentPage  The current page.\n   * @property {number} totalPages  The total number of pages.\n   */\n  meta: {\n    itemsPerPage: number;\n    totalItems: number;\n    currentPage: number;\n    totalPages: number;\n  };\n  /**\n   * The links.\n   * @property {string} first  The first page.\n   * @property {string} previous  The previous page.\n   * @property {string} next  The next page.\n   * @property {string} last  The last page.\n   * @property {string} current  The current page.\n   */\n  links: {\n    first: string;\n    previous: string;\n    next: string;\n    last: string;\n    current: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dto/pagination.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                PaginationDto is a Data Transfer Object (DTO) that defines the shape of the data that will be sent to the server.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dto/pagination.dto.ts:19\n                        \n                    \n\n            \n                \n                    The limit of items to return.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dto/pagination.dto.ts:33\n                        \n                    \n\n            \n                \n                    The page number.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsOptional, IsPositive } from 'class-validator';\n\n/**\n * PaginationDto is a Data Transfer Object (DTO) that defines the shape of the data that will be sent to the server.\n */\nexport class PaginationDto {\n  /**\n   * The limit of items to return.\n   * @type {number}\n   * @default 10\n   * @optional\n   * @positive\n   * @transformOptions { enableImplicitConversion: true,}\n   */\n  @IsOptional()\n  @IsPositive()\n  @Type(() => Number)\n  limit?: number = 10;\n\n  /**\n   * The page number.\n   * @type {number}\n   * @default 1\n   * @optional\n   * @positive\n   * @transformOptions { enableImplicitConversion: true,}\n   */\n  @IsOptional()\n  @IsPositive()\n  // Bleow not needed if transformOptions: { enableImplicitConversion: true,} is set in main.ts\n  @Type(() => Number) // converts the value to a number\n  page?: number = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/pagination/pagination.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            PaginationModule is a module that imports the PaginationProvider.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaginationProvider } from './provider/pagination.provider';\n\n/**\n * PaginationModule is a module that imports the PaginationProvider.\n */\n@Module({\n  providers: [PaginationProvider],\n  exports: [PaginationProvider],\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationProvider.html":{"url":"injectables/PaginationProvider.html","title":"injectable - PaginationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/provider/pagination.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                PaginationProvider is a provider that is responsible for paginating query results.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginateQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/provider/pagination.provider.ts:12\n                            \n                        \n\n                \n                    \n                            PaginationProvider constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The request object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginateQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginateQuery(paginationQuery: PaginationDto, repository: Repository)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/provider/pagination.provider.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        the paginateQuery method paginates the query results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                paginationQuery\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pagination query DTO.\n\n                                            \n                                        \n                                        \n                                                repository\n                                            \n                                                        Repository\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The repository to paginate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to a paginated object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { PaginationDto } from '../dto/pagination.dto';\nimport { ObjectLiteral, Repository } from 'typeorm';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Paginated } from '../interface/paginated.interface';\n\n/**\n * PaginationProvider is a provider that is responsible for paginating query results.\n */\n@Injectable()\nexport class PaginationProvider {\n  /**\n   * PaginationProvider constructor.\n   * @param {Request} request  The request object.\n   * @param {PaginationDto} paginationQuery  The pagination query DTO.\n   * @param {Repository} repository  The repository to paginate.\n   */\n  constructor(\n    @Inject(REQUEST)\n    private readonly request: Request,\n  ) {}\n\n  /**\n   * the paginateQuery method paginates the query results.\n   * @param paginationQuery The pagination query DTO.\n   * @param repository The repository to paginate.\n   * @returns {Promise>}  A promise that resolves to a paginated object.\n   */\n  public async paginateQuery(\n    paginationQuery: PaginationDto,\n    repository: Repository,\n  ): Promise> {\n    const results = await repository.find({\n      skip:\n        paginationQuery.page * paginationQuery.limit - paginationQuery.limit,\n      take: paginationQuery.limit,\n    });\n    const baseURL = `${this.request.protocol}://${this.request.headers.host}/`;\n    const newURL = new URL(this.request.url, baseURL);\n    const totalItems = await repository.count();\n    const totalPages = Math.ceil(totalItems / paginationQuery.limit);\n    const nextPage =\n      paginationQuery.page === totalPages\n        ? paginationQuery.page\n        : paginationQuery.page + 1;\n    const previousPage =\n      paginationQuery.page === 1\n        ? paginationQuery.page\n        : paginationQuery.page - 1;\n\n    const finalResponse: Paginated = {\n      data: results,\n      meta: {\n        itemsPerPage: paginationQuery.limit,\n        totalItems: totalItems,\n        currentPage: paginationQuery.page,\n        totalPages: totalPages,\n      },\n      links: {\n        first: `${newURL.origin}${newURL.pathname}?page=1&limit=${paginationQuery.limit}`,\n        last: `${newURL.origin}${newURL.pathname}?page=${totalPages}&limit=${paginationQuery.limit}`,\n        current: `${newURL.origin}${newURL.pathname}?page=${paginationQuery.page}&limit=${paginationQuery.limit}`,\n        previous: `${newURL.origin}${newURL.pathname}?page=${previousPage}&limit=${paginationQuery.limit}`,\n        next: `${newURL.origin}${newURL.pathname}?page=${nextPage}&limit=${paginationQuery.limit}`,\n      },\n    };\n    return finalResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refresh-token.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                The data transfer object for refreshing an access token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'The refresh token', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token.dto.ts:19\n                        \n                    \n\n            \n                \n                    The refresh token.\n\nMust not be empty.\nMust be a JWT string.\n\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * The data transfer object for refreshing an access token.\n */\nexport class RefreshTokenDto {\n  /**\n   * The refresh token.\n   * - Must not be empty.\n   * - Must be a JWT string.\n   */\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'The refresh token',\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9',\n  })\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokensProvider.html":{"url":"injectables/RefreshTokensProvider.html","title":"injectable - RefreshTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/provider/refresh-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                RefreshTokensProvider is a provider that is responsible for refreshing JWT tokens.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConf: ConfigType<>, generateTokensProvider: GenerateTokensProvider, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/provider/refresh-tokens.provider.ts:19\n                            \n                        \n\n                \n                    \n                            RefreshTokensProvider constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The JWT service.\n\n                                                        \n                                                \n                                                \n                                                        jwtConf\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The JWT configuration.\n\n                                                        \n                                                \n                                                \n                                                        generateTokensProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The GenerateTokensProvider service.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The User service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/refresh-tokens.provider.ts:43\n                        \n                    \n\n\n            \n                \n                        Refreshes the JWT tokens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The refresh token DTO.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing both access and refresh tokens.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { RefreshTokenDto } from '../dto/refresh-token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\nimport { UserService } from 'src/user/user.service';\nimport { ActiveUserInterface } from '../interface/active-user.interface';\n\n/**\n * RefreshTokensProvider is a provider that is responsible for refreshing JWT tokens.\n */\n@Injectable()\nexport class RefreshTokensProvider {\n  /**\n   * RefreshTokensProvider constructor.\n   * @param {JwtService} jwtService  The JWT service.\n   * @param {ConfigType} jwtConf  The JWT configuration.\n   * @param {GenerateTokensProvider} generateTokensProvider  The GenerateTokensProvider service.\n   * @param {UserService} userService  The User service.\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConf: ConfigType,\n    private readonly generateTokensProvider: GenerateTokensProvider,\n    @Inject(forwardRef(() => UserService))\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Refreshes the JWT tokens.\n   * @async\n   * @param {RefreshTokenDto} refreshTokenDto  The refresh token DTO.\n   * @returns {Promise}  An object containing both access and refresh tokens.\n   * @throws {UnauthorizedException}  Throws an UnauthorizedException if the refresh token is invalid.\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto): Promise {\n    try {\n      const { sub } = await this.jwtService.verifyAsync\n      >(refreshTokenDto.refreshToken, {\n        secret: this.jwtConf.secret,\n        audience: this.jwtConf.audience,\n        issuer: this.jwtConf.issuer,\n      });\n      const user = await this.userService.findById(sub);\n      return await this.generateTokensProvider.generateTokens(user);\n    } catch (error) {\n      throw new UnauthorizedException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Role entity to store role information.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:14\n                        \n                    \n\n            \n                \n                    Role ID. Primary key.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: roleName, nullable: false, default: undefined, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:26\n                        \n                    \n\n            \n                \n                    Role name. Unique.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.roles, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:34\n                        \n                    \n\n            \n                \n                    Users with this role. Many-to-many relationship. Cascade on delete.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { User } from 'src/user/user.entity';\nimport { Column, Entity, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { roleName } from './enum/role-name.enum';\n\n/**\n * Role entity to store role information.\n */\n@Entity()\nexport class Role {\n  /**\n   * Role ID. Primary key.\n   */\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  /**\n   * Role name. Unique.\n   */\n  @Column({\n    type: 'enum',\n    enum: roleName,\n    nullable: false,\n    default: roleName.USER,\n    unique: true,\n  })\n  name: string;\n\n  /**\n   * Users with this role. Many-to-many relationship. Cascade on delete.\n   */\n  @ManyToMany(() => User, (user) => user.roles, {\n    onDelete: 'CASCADE',\n  })\n  users: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n            \n                Description\n            \n            \n                Controller for Role. Creates routes for creating and deleting roles.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new role'})@ApiResponse({status: undefined, description: 'No content but successful creation'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:29\n                        \n                    \n\n\n            \n                \n                        Creates a new role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { RoleService } from './provider/role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\n\n/**\n * Controller for Role. Creates routes for creating and deleting roles.\n */\n@Controller('role')\n@ApiTags('Role')\n@ApiBearerAuth()\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  /**\n   * Creates a new role.\n   */\n  @ApiOperation({ summary: 'Creates a new role' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'No content but successful creation',\n  })\n  @Post()\n  public async create(@Body() createRoleDto: CreateRoleDto): Promise {\n    return this.roleService.create(createRoleDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guard/role/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to check if the user has the required role.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultRoleType\n                            \n                            \n                                    Private\n                                    Readonly\n                                roleGuardMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, adminRoleGuard: AdminRoleGuard, curatorRoleGuard: CuratorRoleGuard, userRoleGuard: UserRoleGuard, masterRoleGuard: MasterRoleGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/role/role.guard.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor to create an instance of the RoleGuard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe reflector to get metadata from the request.\n\n\n                                                        \n                                                \n                                                \n                                                        adminRoleGuard\n                                                  \n                                                        \n                                                                        AdminRoleGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe guard to check if the user has an admin role.\n\n\n                                                        \n                                                \n                                                \n                                                        curatorRoleGuard\n                                                  \n                                                        \n                                                                        CuratorRoleGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe guard to check if the user has a curator role.\n\n\n                                                        \n                                                \n                                                \n                                                        userRoleGuard\n                                                  \n                                                        \n                                                                        UserRoleGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe guard to check if the user has a user role.\n\n\n                                                        \n                                                \n                                                \n                                                        masterRoleGuard\n                                                  \n                                                        \n                                                                        MasterRoleGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe guard to check if the user has a master role.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/role/role.guard.ts:75\n                        \n                    \n\n\n            \n                \n                        Method to determine if the request can proceed based on the user's role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nReturns true if the user has the required role, otherwise throws an UnauthorizedException.\n\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { AdminRoleGuard } from './admin.role.guard';\nimport { CuratorRoleGuard } from './curator.role.guard';\nimport { MasterRoleGuard } from './master.role.guard';\nimport { UserRoleGuard } from './user.role.guard';\nimport { ROLE_TYPE_KEY } from 'src/auth/constant/auth.constant';\n\n/**\n * Guard to check if the user has the required role.\n * @implements {CanActivate}\n * @property {Reflector} reflector - The reflector to get metadata from the request.\n * @property {AdminRoleGuard} adminRoleGuard - The guard to check if the user has an admin role.\n * @property {CuratorRoleGuard} curatorRoleGuard - The guard to check if the user has a curator role.\n * @property {UserRoleGuard} userRoleGuard - The guard to check if the user has a user role.\n * @property {MasterRoleGuard} masterRoleGuard - The guard to check if the user has a master role.\n * @property {Record} roleGuardMap - The map of role types to their respective guards.\n * @property {string} defaultRoleType - The default role type to use if no role type is found.\n * @throws {UnauthorizedException} - Throws an exception if the user does not have the required role or a valid token.\n */\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  /**\n   * Constructor to create an instance of the RoleGuard\n   * @constructor\n   * @param {Reflector} reflector - The reflector to get metadata from the request.\n   * @param {AdminRoleGuard} adminRoleGuard - The guard to check if the user has an admin role.\n   * @param {CuratorRoleGuard} curatorRoleGuard - The guard to check if the user has a curator role.\n   * @param {UserRoleGuard} userRoleGuard - The guard to check if the user has a user role.\n   * @param {MasterRoleGuard} masterRoleGuard - The guard to check if the user has a master role.\n   * @returns {RoleGuard} - An instance of the RoleGuard.\n   * @throws {UnauthorizedException} - Throws an exception if the user does not have the required role or a valid token.\n   */\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly adminRoleGuard: AdminRoleGuard,\n    private readonly curatorRoleGuard: CuratorRoleGuard,\n    private readonly userRoleGuard: UserRoleGuard,\n    private readonly masterRoleGuard: MasterRoleGuard,\n  ) {}\n\n  /**\n   * The default role type to use if no role type is found.\n   * @type {string}\n   */\n  private static readonly defaultRoleType = roleTypes.MASTER;\n\n  /**\n   * Map of role types to their respective guards.\n   * @type {Record}\n   */\n  private readonly roleGuardMap: Record = {\n    [roleTypes.ADMIN]: this.adminRoleGuard,\n    [roleTypes.CURATOR]: this.curatorRoleGuard,\n    [roleTypes.MASTER]: this.masterRoleGuard,\n    [roleTypes.USER]: this.userRoleGuard,\n    [roleTypes.NA]: { canActivate: () => true },\n  };\n\n  /**\n   * Method to determine if the request can proceed based on the user's role.\n   * @param {ExecutionContext} context - The execution context of the request.\n   * @returns {Promise} - Returns true if the user has the required role, otherwise throws an UnauthorizedException.\n   * @throws {UnauthorizedException} - Throws an exception if the user does not have the required role or a valid token.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const roleType = this.reflector.getAllAndOverride(ROLE_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [RoleGuard.defaultRoleType];\n    const guards = roleType.map((type) => this.roleGuardMap[type]).flat();\n    let error = new UnauthorizedException();\n    for (const inst of guards) {\n      const canActivate = await Promise.resolve(\n        inst.canActivate(context),\n      ).catch((err) => {\n        error = err;\n      });\n      if (canActivate) {\n        return true;\n      }\n    }\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The RoleModule is responsible for handling role-related functionality.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleController } from './role.controller';\nimport { RoleService } from './provider/role.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role.entity';\n\n/**\n * The RoleModule is responsible for handling role-related functionality.\n */\n@Module({\n  controllers: [RoleController],\n  providers: [RoleService],\n  imports: [TypeOrmModule.forFeature([Role])],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/provider/role.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The service class for the Role module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findMultiple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/provider/role.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create a new instance of RoleService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/provider/role.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Create a new role\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(roleId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/provider/role.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Delete a role\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findMultiple\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMultiple(roles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/provider/role.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Find multiple roles by their names\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In, Repository } from 'typeorm';\nimport { Role } from '../role.entity';\nimport { CreateRoleDto } from '../dto/create-role.dto';\n\n/**\n * The service class for the Role module\n */\n@Injectable()\nexport class RoleService {\n  /**\n   * Create a new instance of RoleService\n   */\n  constructor(\n    @InjectRepository(Role)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  /**\n   * Create a new role\n   */\n  public async create(createRoleDto: CreateRoleDto): Promise {\n    const role = await this.roleRepository.create({ ...createRoleDto });\n    await this.roleRepository.save(role);\n  }\n\n  /**\n   * Find multiple roles by their names\n   */\n  public async findMultiple(roles: string[]): Promise {\n    const results = await this.roleRepository.find({\n      where: {\n        name: In(roles),\n      },\n    });\n    return results;\n  }\n\n  /**\n   * Delete a role\n   */\n  public async delete(roleId: number): Promise {\n    await this.roleRepository.delete(roleId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/provider/sign-in.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                SignInProvider is a provider that is responsible for signing in a user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, hashingProvider: HashingProvider, generateTokensProvider: GenerateTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/provider/sign-in.provider.ts:17\n                            \n                        \n\n                \n                    \n                            SignInProvider constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The User service.\n\n                                                        \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HashingProvider service.\n\n                                                        \n                                                \n                                                \n                                                        generateTokensProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The GenerateTokensProvider service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signinDto: SigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/sign-in.provider.ts:38\n                        \n                    \n\n\n            \n                \n                        Signs in a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signinDto\n                                            \n                                                            SigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The sign-in DTO.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing the access token.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { UserService } from 'src/user/user.service';\nimport { SigninDto } from '../dto/signin.dto';\nimport { HashingProvider } from './hashing.provider';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\n\n/**\n * SignInProvider is a provider that is responsible for signing in a user.\n */\n@Injectable()\nexport class SignInProvider {\n  /**\n   * SignInProvider constructor.\n   * @param {UserService} userService  The User service.\n   * @param {HashingProvider} hashingProvider  The HashingProvider service.\n   * @param {GenerateTokensProvider} generateTokensProvider  The GenerateTokensProvider service.\n   */\n  constructor(\n    @Inject(forwardRef(() => UserService))\n    private readonly userService: UserService,\n    private readonly hashingProvider: HashingProvider,\n    private readonly generateTokensProvider: GenerateTokensProvider,\n  ) {}\n\n  /**\n   * Signs in a user.\n   * @param {SigninDto} signinDto  The sign-in DTO.\n   * @returns {Promise}  An object containing the access token.\n   * @throws {RequestTimeoutException}  Throws a RequestTimeoutException if the password comparison fails.\n   * @throws {UnauthorizedException}  Throws an UnauthorizedException if the password is invalid.\n   */\n  public async signIn(signinDto: SigninDto): Promise {\n    const user = await this.userService.findOneByEmail(signinDto.email);\n    let isEqual: boolean = false;\n    try {\n      isEqual = await this.hashingProvider.comparePassword(\n        signinDto.password,\n        user.password,\n      );\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: `Could not compare passwords at this time.`,\n      });\n    }\n    if (!isEqual) {\n      throw new UnauthorizedException(`Invalid password`);\n    }\n    return await this.generateTokensProvider.generateTokens(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SigninDto.html":{"url":"classes/SigninDto.html","title":"class - SigninDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SigninDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for signing in a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty({description: 'The email of the user', example: 'john.doe@email.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:19\n                        \n                    \n\n            \n                \n                    The email of the user\n\nMust be a valid email\nMust not be empty\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'The password of the user', example: 'Password1!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:32\n                        \n                    \n\n            \n                \n                    The password of the user\n\nMust be a string\nMust not be empty\n\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsEmail } from 'class-validator';\n\n/**\n * Data transfer object for signing in a user\n */\nexport class SigninDto {\n  /**\n   * The email of the user\n   * - Must be a valid email\n   * - Must not be empty\n   */\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The email of the user',\n    example: 'john.doe@email.com',\n  })\n  email: string;\n\n  /**\n   * The password of the user\n   * - Must be a string\n   * - Must not be empty\n   */\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'Password1!',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Species.html":{"url":"entities/Species.html","title":"entity - Species","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Species\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/species/species.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Species entity class definition.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assemblies\n                            \n                            \n                                    \n                                commonName\n                            \n                            \n                                    \n                                genes\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                scientificName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assemblies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Assembly[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, assembly => assembly.species)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/species/species.entity.ts:46\n                        \n                    \n\n            \n                \n                    Assemblies that belong to a species.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        commonName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/species/species.entity.ts:27\n                        \n                    \n\n            \n                \n                    Species common name.\nMust not be null or greater than 128 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, gene => gene.species)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/species/species.entity.ts:53\n                        \n                    \n\n            \n                \n                    Genes that belong to a species.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/species/species.entity.ts:15\n                        \n                    \n\n            \n                \n                    Species identifier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 40, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/species/species.entity.ts:39\n                        \n                    \n\n            \n                \n                    Species scientific name.\nMust not be null or greater than 40 characters.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Assembly } from 'src/assembly/assembly.entity';\nimport { Gene } from 'src/gene/gene.entity';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Species entity class definition.\n */\n@Entity()\nexport class Species {\n  /**\n   * Species identifier.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  /**\n   * Species common name.\n   * Must not be null or greater than 128 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  commonName: string;\n\n  /**\n   * Species scientific name.\n   * Must not be null or greater than 40 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 40,\n    nullable: false,\n  })\n  scientificName: string;\n\n  /**\n   * Assemblies that belong to a species.\n   * @type {string}\n   */\n  @OneToMany(() => Assembly, (assembly) => assembly.species)\n  assemblies: Assembly[];\n\n  /**\n   * Genes that belong to a species.\n   * @type {Gene[]}\n   */\n  @OneToMany(() => Gene, (gene) => gene.species)\n  genes: Gene[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpeciesController.html":{"url":"controllers/SpeciesController.html","title":"controller - SpeciesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpeciesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/species/species.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                species\n            \n\n\n            \n                Description\n            \n            \n                Species controller class to handle species related routes.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Species controller class to handle species related routes.\n */\n@Controller('species')\n@ApiTags('Species')\nexport class SpeciesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpeciesModule.html":{"url":"modules/SpeciesModule.html","title":"module - SpeciesModule","body":"\n                   \n\n\n\n\n    Modules\n    SpeciesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpeciesModule\n\n\n\ncluster_SpeciesModule_providers\n\n\n\ncluster_SpeciesModule_exports\n\n\n\n\nSpeciesService \n\nSpeciesService \n\n\n\nSpeciesModule\n\nSpeciesModule\n\nSpeciesService  -->\n\nSpeciesModule->SpeciesService \n\n\n\n\n\nSpeciesService\n\nSpeciesService\n\nSpeciesModule -->\n\nSpeciesService->SpeciesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/species/species.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Species module class to handle species related routes.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpeciesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SpeciesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpeciesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SpeciesController } from './species.controller';\nimport { SpeciesService } from './provider/species.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Species } from './species.entity';\n\n/**\n * Species module class to handle species related routes.\n */\n@Module({\n  controllers: [SpeciesController],\n  providers: [SpeciesService],\n  imports: [TypeOrmModule.forFeature([Species])],\n  exports: [SpeciesService],\n})\nexport class SpeciesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpeciesService.html":{"url":"injectables/SpeciesService.html","title":"injectable - SpeciesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpeciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/species/provider/species.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class to provide species related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findBySciName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(speciesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/species/provider/species.service.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of SpeciesService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        speciesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for the species entity.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findBySciName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBySciName(sciName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/species/provider/species.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Finds a species by its scientific name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sciName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scientific name of the species to find.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The species with the given scientific name.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Species } from '../species.entity';\nimport { Repository } from 'typeorm';\n\n/**\n * Service class to provide species related services.\n */\n@Injectable()\nexport class SpeciesService {\n  /**\n   * Creates an instance of SpeciesService.\n   * @param {Repository} speciesRepository The repository for the species entity.\n   * @returns {SpeciesService} The instance of the species service\n   */\n  constructor(\n    @InjectRepository(Species)\n    private readonly speciesRepository: Repository,\n  ) {}\n\n  /**\n   * Finds a species by its scientific name.\n   * @param {string} sciName The scientific name of the species to find.\n   * @returns {Promise} The species with the given scientific name.\n   * @throws {NotFoundException} Thrown if the species with the given scientific name was not found.\n   */\n  public async findBySciName(sciName: string): Promise {\n    const species = await this.speciesRepository.findOne({\n      where: {\n        scientificName: sciName,\n      },\n    });\n    if (species) {\n      return species;\n    }\n    throw new NotFoundException(\n      `The species with scientific name ${sciName} was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Symbol.html":{"url":"entities/Symbol.html","title":"entity - Symbol","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/symbol/symbol.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The Symbol entity represents a symbol.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                geneSymbols\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneSymbols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneSymbol[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneSymbol => geneSymbol.symbol)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/symbol/symbol.entity.ts:34\n                        \n                    \n\n            \n                \n                    The gene symbols that have this symbol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/symbol/symbol.entity.ts:14\n                        \n                    \n\n            \n                \n                    The unique identifier of the symbol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 45, unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/symbol/symbol.entity.ts:27\n                        \n                    \n\n            \n                \n                    The name of the symbol. Cannot be null or empty and must be unique\nwith less than 45 characters.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { GeneSymbol } from 'src/gene-symbol/gene-symbol.entity';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * The Symbol entity represents a symbol.\n */\n@Entity()\nexport class Symbol {\n  /**\n   * The unique identifier of the symbol.\n   * @type {number}\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * The name of the symbol. Cannot be null or empty and must be unique\n   * with less than 45 characters.\n   * @type {string}\n   */\n  @Column({\n    type: 'varchar',\n    length: 45,\n    unique: true,\n    nullable: false,\n  })\n  symbol: string;\n\n  /**\n   * The gene symbols that have this symbol.\n   * @type {GeneSymbol[]}\n   */\n  @OneToMany(() => GeneSymbol, (geneSymbol) => geneSymbol.symbol)\n  geneSymbols: GeneSymbol[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SymbolController.html":{"url":"controllers/SymbolController.html","title":"controller - SymbolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SymbolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/symbol/symbol.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                symbol\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createSymbol\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getSymbols\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createSymbol\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSymbol(createSymbolDto: CreateSymbolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Create a new symbol - Must be at curator level or above'})@ApiResponse({status: 201, description: 'The symbol record has been successfully created.'})@ApiBadRequestResponse({description: 'The symbol already exists.'})\n                \n            \n\n                    \n                        \n                            Defined in src/symbol/symbol.controller.ts:82\n                        \n                    \n\n\n            \n                \n                        Creates a new symbol.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createSymbolDto\n                                            \n                                                            CreateSymbolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to create a new symbol.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created symbol.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getSymbols\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSymbols(query: number | string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':query')@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Retrieve a symbol by either ID or Symbol - Must be at curator level or above'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiNotFoundResponse({description: 'The symbol was not found.'})@ApiParam({name: 'query', description: 'The symbol ID or the symbol itself.', required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/symbol/symbol.controller.ts:59\n                        \n                    \n\n\n            \n                \n                        Retrieves a symbol by either ID or Symbol.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The query to search for a symbol.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The promise of a symbol.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { SymbolService } from './symbol.service';\nimport { Symbol } from './symbol.entity';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { CreateSymbolDto } from './dto/create-symbol.dto';\n\n@Controller('symbol')\n@ApiTags('Symbol')\nexport class SymbolController {\n  /**\n   * Creates an instance of SymbolController.\n   * @param {SymbolService} symbolService The symbol service.\n   * @returns {void}\n   */\n  constructor(private readonly symbolService: SymbolService) {}\n\n  /**\n   * Retrieves a symbol by either ID or Symbol.\n   * @param {number | string} query The query to search for a symbol.\n   * @returns {Promise} The promise of a symbol.\n   */\n  @Get(':query')\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary:\n      'Retrieve a symbol by either ID or Symbol - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n    // links: {\n    //   'Get Symbol': {\n    //     operationRef: '/symbol/{query}',\n    //     parameters: {\n    //       query: 1,\n    //     },\n    //   },\n    // },\n  })\n  @ApiNotFoundResponse({\n    description: 'The symbol was not found.',\n  })\n  @ApiParam({\n    name: 'query',\n    description: 'The symbol ID or the symbol itself.',\n    required: true,\n  })\n  public getSymbols(@Param('query') query: number | string): Promise {\n    return this.symbolService.findSymbol(query);\n  }\n\n  /**\n   * Creates a new symbol.\n   * @param {CreateSymbolDto} createSymbolDto The data to create a new symbol.\n   * @throws {BadRequestException} If the symbol already exists.\n   * @returns {Promise} The created symbol.\n   */\n  @Post()\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new symbol - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The symbol record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The symbol already exists.',\n  })\n  public createSymbol(\n    @Body() createSymbolDto: CreateSymbolDto,\n  ): Promise {\n    return this.symbolService.create(createSymbolDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    SymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_imports\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nRoleModule->SymbolModule\n\n\n\n\n\nSymbolService \n\nSymbolService \n\nSymbolService  -->\n\nSymbolModule->SymbolService \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/symbol/symbol.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SymbolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SymbolController } from './symbol.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Symbol } from './symbol.entity';\nimport { SymbolService } from './symbol.service';\nimport { RoleModule } from 'src/role/role.module';\n\n@Module({\n  controllers: [SymbolController],\n  imports: [TypeOrmModule.forFeature([Symbol]), RoleModule],\n  providers: [SymbolService],\n  exports: [SymbolService],\n})\nexport class SymbolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/symbol/symbol.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The SymbolService class is a provider that manages the symbols.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteById\n                            \n                            \n                                    Public\n                                    Async\n                                findSymbol\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbolRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/symbol/symbol.service.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of SymbolService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        symbolRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The symbol repository.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSymbolDto: CreateSymbolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/symbol/symbol.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Creates a new symbol. If the symbol already exists, it throws an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createSymbolDto\n                                            \n                                                            CreateSymbolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to create a new symbol.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created symbol.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(symbolId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/symbol/symbol.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Deletes a symbol by its ID. Using this method will not cascade delete\nand so will cause issues if the symbol is used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                symbolId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the symbol to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An empty promise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findSymbol\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSymbol(query: number | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/symbol/symbol.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Finds a symbol by its ID or symbol.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID or symbol to find.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found symbol.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { QueryFailedError, Repository } from 'typeorm';\nimport { Symbol } from './symbol.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateSymbolDto } from './dto/create-symbol.dto';\n\n/**\n * The SymbolService class is a provider that manages the symbols.\n */\n@Injectable()\nexport class SymbolService {\n  /**\n   * Creates an instance of SymbolService.\n   * @param {Repository} symbolRepository The symbol repository.\n   */\n  constructor(\n    @InjectRepository(Symbol)\n    private readonly symbolRepository: Repository,\n  ) {}\n\n  /**\n   * Creates a new symbol. If the symbol already exists, it throws an error.\n   * @param {CreateSymbolDto} createSymbolDto The data to create a new symbol.\n   * @returns {Promise} The created symbol.\n   */\n  public async create(createSymbolDto: CreateSymbolDto): Promise {\n    let symbol: Symbol;\n    symbol = await this.symbolRepository.create({ ...createSymbolDto });\n    try {\n      symbol = await this.symbolRepository.save(symbol);\n    } catch (error) {\n      if (\n        error instanceof QueryFailedError &&\n        (error as any).code === '23505'\n      ) {\n        throw new BadRequestException('Symbol already exists');\n      }\n    }\n    return symbol;\n  }\n\n  /**\n   * Updates a symbol. If the symbol does not exist, it throws an error.\n   * @returns {Promise} The updated symbol.\n   * @param {number} symbolId The ID of the symbol to update.\n   * @param {CreateSymbolDto} updateSymbolDto The data to update the symbol.\n   * @throws {BadRequestException} If the symbol ID does not exist.\n   * @throws {RequestTimeoutException} If the request to the database times out.\n   * @ignore This method is not yet used in the routes.\n   */\n  public async update(\n    symbolId: number,\n    updateSymbolDto: CreateSymbolDto,\n  ): Promise {\n    let symbol: Symbol;\n    try {\n      symbol = await this.symbolRepository.findOne({\n        where: { id: symbolId },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description:\n          'The request to the database timed out. Failed to find the symbol.',\n        cause: error,\n      });\n    }\n    if (!symbol) {\n      throw new BadRequestException('Symbol ID does not exist');\n    }\n    symbol.symbol = updateSymbolDto.symbol;\n    try {\n      await this.symbolRepository.save(symbol);\n    } catch (error) {\n      throw new RequestTimeoutException({\n        description: 'Failed to update the symbol',\n        cause: error,\n      });\n    }\n    return symbol;\n  }\n\n  /**\n   * Deletes a symbol by its ID. Using this method will not cascade delete\n   * and so will cause issues if the symbol is used.\n   * @param {number} symbolId The ID of the symbol to delete.\n   * @returns {Promise} An empty promise.\n   */\n  public async deleteById(symbolId: number): Promise {\n    const symbol = await this.symbolRepository.findOne({\n      where: { id: symbolId },\n    });\n    if (!symbol) {\n      throw new NotFoundException(`Symbol not found for ID: ${symbolId}`);\n    }\n    await this.symbolRepository.remove(symbol);\n  }\n\n  /**\n   * Deletes a symbol by its symbol.\n   * @param {string} symbol The symbol to delete.\n   * @returns {Promise} An empty promise.\n   * @ignore This method is not yet used in the routes.\n   */\n  public async deleteBySymbol(symbol: string): Promise {\n    await this.symbolRepository.delete({ symbol: symbol });\n  }\n\n  /**\n   * Finds a symbol by its ID or symbol.\n   * @param {number | string} query The ID or symbol to find.\n   * @returns {Promise} The found symbol.\n   */\n  public async findSymbol(query: number | string): Promise {\n    let symbol: Symbol;\n    if (typeof query === 'number') {\n      symbol = await this.symbolRepository.findOne({\n        where: { id: query },\n      });\n    } else {\n      symbol = await this.symbolRepository.findOne({\n        where: { symbol: query },\n      });\n    }\n    if (!symbol) {\n      throw new NotFoundException(`Symbol not found for query: ${query}`);\n    }\n    return symbol;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                User entity class to represent the user table in the database.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                current\n                            \n                            \n                                    \n                                displayName\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                geneNamesCreated\n                            \n                            \n                                    \n                                geneNamesEdited\n                            \n                            \n                                    \n                                geneNotesCreated\n                            \n                            \n                                    \n                                geneNotesEdited\n                            \n                            \n                                    \n                                geneReplacements\n                            \n                            \n                                    \n                                genesCreated\n                            \n                            \n                                    \n                                genesEdited\n                            \n                            \n                                    \n                                geneSymbolsCreated\n                            \n                            \n                                    \n                                geneSymbolsEdited\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bool', nullable: false, default: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:84\n                        \n                    \n\n            \n                \n                    The current status of the user.\nIt is a required field, which is a boolean.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:37\n                        \n                    \n\n            \n                \n                    The display name of the user.\nIt is a required field, which is a string/varchar with a maximum length of 96 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:72\n                        \n                    \n\n            \n                \n                    The email of the user.\nIt is a required field, which is a string/varchar with a maximum length of 255 characters.\nIt is also unique, meaning that no two users can have the same email.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:48\n                        \n                    \n\n            \n                \n                    The first name of the user.\nIt is a required field, which is a string/varchar with a maximum length of 96 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNamesCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneName[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneName => geneName.creator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:145\n                        \n                    \n\n            \n                \n                    The names created by the user.\nIt is a one-to-many relationship with the gene_has_name table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNamesEdited\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneName[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneName => geneName.editor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:152\n                        \n                    \n\n            \n                \n                    The symbols edited by the user.\nIt is a one-to-many relationship with the gene_has_name table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNotesCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneNote[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneNote => geneNote.creator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneNotesEdited\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneNote[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneNote => geneNote.editor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneReplacements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GeneReplacement[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneReplacement => geneReplacement.editor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genesCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, gene => gene.creator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:117\n                        \n                    \n\n            \n                \n                    The genes created by the user.\nIt is a one-to-many relationship with the gene table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genesEdited\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gene[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, gene => gene.editor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:124\n                        \n                    \n\n            \n                \n                    The genes edited by the user.\nIt is a one-to-many relationship with the gene table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneSymbolsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneSymbol[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneSymbol => geneSymbol.creator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:131\n                        \n                    \n\n            \n                \n                    The symbols created by the user.\nIt is a one-to-many relationship with the gene_has_symbol table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneSymbolsEdited\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneSymbol[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneSymbol => geneSymbol.editor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:138\n                        \n                    \n\n            \n                \n                    The symbols edited by the user.\nIt is a one-to-many relationship with the gene_has_symbol table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:26\n                        \n                    \n\n            \n                \n                    The id of the user. It is the primary key of the user table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:59\n                        \n                    \n\n            \n                \n                    The last name of the user.\nIt is an optional field, which is a string/varchar with a maximum length of 96 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 70, nullable: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:96\n                        \n                    \n\n            \n                \n                    The current password of the user.\nIt is a required field, which is a string/varchar with a maximum length of 70 characters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, role => role.users, {eager: true})@JoinTable({name: 'user_has_role'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:110\n                        \n                    \n\n            \n                \n                    The roles assigned to the user.\nIt is a many-to-many relationship with the role table.\nIt is an eager relationship, meaning that the roles are loaded when the user is loaded.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { GeneName } from 'src/gene-name/gene-name.entity';\nimport { GeneNote } from 'src/gene-note/gene-note.entity';\nimport { GeneReplacement } from 'src/gene-replacement/gene-replacement.entity';\nimport { GeneSymbol } from 'src/gene-symbol/gene-symbol.entity';\nimport { Gene } from 'src/gene/gene.entity';\nimport { Role } from 'src/role/role.entity';\nimport {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n/**\n * User entity class to represent the user table in the database.\n */\n@Entity()\nexport class User {\n  /**\n   * The id of the user. It is the primary key of the user table.\n   */\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  /**\n   * The display name of the user.\n   * It is a required field, which is a string/varchar with a maximum length of 96 characters.\n   */\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n  })\n  displayName: string;\n\n  /**\n   * The first name of the user.\n   * It is a required field, which is a string/varchar with a maximum length of 96 characters.\n   */\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n  })\n  firstName: string;\n\n  /**\n   * The last name of the user.\n   * It is an optional field, which is a string/varchar with a maximum length of 96 characters.\n   */\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  lastName?: string;\n\n  /**\n   * The email of the user.\n   * It is a required field, which is a string/varchar with a maximum length of 255 characters.\n   * It is also unique, meaning that no two users can have the same email.\n   */\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  /**\n   * The current status of the user.\n   * It is a required field, which is a boolean.\n   */\n  @Column({\n    type: 'bool',\n    nullable: false,\n    default: true,\n  })\n  @Exclude()\n  current: boolean;\n\n  /**\n   * The current password of the user.\n   * It is a required field, which is a string/varchar with a maximum length of 70 characters.\n   */\n  @Column({\n    type: 'varchar',\n    length: 70,\n    nullable: false,\n  })\n  @Exclude()\n  password: string;\n\n  /**\n   * The roles assigned to the user.\n   * It is a many-to-many relationship with the role table.\n   * It is an eager relationship, meaning that the roles are loaded when the user is loaded.\n   */\n  @ManyToMany(() => Role, (role) => role.users, {\n    eager: true,\n  })\n  @JoinTable({\n    name: 'user_has_role',\n  })\n  @Exclude()\n  roles: Role[];\n\n  /**\n   * The genes created by the user.\n   * It is a one-to-many relationship with the gene table.\n   */\n  @OneToMany(() => Gene, (gene) => gene.creator)\n  genesCreated: Gene[];\n\n  /**\n   * The genes edited by the user.\n   * It is a one-to-many relationship with the gene table.\n   */\n  @OneToMany(() => Gene, (gene) => gene.editor)\n  genesEdited: Gene[];\n\n  /**\n   * The symbols created by the user.\n   * It is a one-to-many relationship with the gene_has_symbol table.\n   */\n  @OneToMany(() => GeneSymbol, (geneSymbol) => geneSymbol.creator)\n  geneSymbolsCreated: GeneSymbol[];\n\n  /**\n   * The symbols edited by the user.\n   * It is a one-to-many relationship with the gene_has_symbol table.\n   */\n  @OneToMany(() => GeneSymbol, (geneSymbol) => geneSymbol.editor)\n  geneSymbolsEdited: GeneSymbol[];\n\n  /**\n   * The names created by the user.\n   * It is a one-to-many relationship with the gene_has_name table.\n   */\n  @OneToMany(() => GeneName, (geneName) => geneName.creator)\n  geneNamesCreated: GeneName[];\n\n  /**\n   * The symbols edited by the user.\n   * It is a one-to-many relationship with the gene_has_name table.\n   */\n  @OneToMany(() => GeneName, (geneName) => geneName.editor)\n  geneNamesEdited: GeneName[];\n\n  @OneToMany(() => GeneNote, (geneNote) => geneNote.creator)\n  geneNotesCreated: GeneNote[];\n\n  @OneToMany(() => GeneNote, (geneNote) => geneNote.editor)\n  geneNotesEdited: GeneNote[];\n\n  @OneToMany(() => GeneReplacement, (geneReplacement) => geneReplacement.editor)\n  geneReplacements: GeneReplacement[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n            \n                Description\n            \n            \n                The UserController is responsible for handling user-related HTTP requests.\nIt uses the UserService to perform operations related to users.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                adminCreateUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                deleteSelf\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        adminCreateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    adminCreateUser(createUserDto: AdminCreateUserDto, user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Role(roleTypes.ADMIN)@ApiOperation({summary: 'Creates a new user and assign a role - Must be an Admin to use'})@ApiResponse({status: 201, description: 'Returns the created user'})@UseInterceptors(ClassSerializerInterceptor)@Post('admin')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates a new user using Admin rights. Will allow an admin to assign a particular role to the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            AdminCreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new user with a role of user'})@ApiResponse({status: 201, description: 'Returns the created user'})@UseInterceptors(ClassSerializerInterceptor)@Role(roleTypes.NA)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:96\n                        \n                    \n\n\n            \n                \n                        Creates a new user with user rights only.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        deleteSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSelf(user: ActiveUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete the current active user'})@ApiResponse({status: 200, description: 'Returns the deleted user'})@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Role(roleTypes.USER)@Delete('forget-me')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:112\n                        \n                    \n\n\n            \n                \n                        Delete the current active user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiParam({name: 'id', description: 'The ID of the user', required: false, type: 'positive integer'})@ApiOperation({summary: 'Fetches all users or a specific user by ID - Must be a curator or an admin'})@ApiResponse({status: 200, description: 'Returns users or a specific user based on the query'})@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Role(roleTypes.CURATOR)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:60\n                        \n                    \n\n\n            \n                \n                        Retrieves users based on a user ID provided in the path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  UseInterceptors,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UserService } from './user.service';\nimport { AdminCreateUserDto } from './dto/admin-create-user.dto';\nimport { User } from './user.entity';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\n\n/**\n * The UserController is responsible for handling user-related HTTP requests.\n * It uses the UserService to perform operations related to users.\n */\n@Controller('user')\n@ApiTags('User')\nexport class UserController {\n  /**\n   * Creates an instance of UserController.\n   */\n  public constructor(private readonly userService: UserService) {}\n\n  /**\n   * Retrieves users based on a user ID provided in the path.\n   */\n  @Get('/:id')\n  @ApiParam({\n    name: 'id',\n    description: 'The ID of the user',\n    required: false,\n    type: 'positive integer',\n  })\n  @ApiOperation({\n    summary:\n      'Fetches all users or a specific user by ID - Must be a curator or an admin',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns users or a specific user based on the query',\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Role(roleTypes.CURATOR)\n  public getUsers(@Param('id') userId: number): Promise {\n    return this.userService.findById(userId);\n  }\n\n  /**\n   * Creates a new user using Admin rights. Will allow an admin to assign a particular role to the user.\n   */\n  @ApiBearerAuth()\n  @Role(roleTypes.ADMIN)\n  @ApiOperation({\n    summary: 'Creates a new user and assign a role - Must be an Admin to use',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'Returns the created user',\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post('admin')\n  public adminCreateUser(\n    @Body() createUserDto: AdminCreateUserDto,\n    @ActiveUser() user: ActiveUserInterface,\n  ): Promise {\n    return this.userService.createUserAsAdmin(createUserDto, user);\n  }\n\n  /**\n   * Creates a new user with user rights only.\n   */\n  @ApiOperation({ summary: 'Creates a new user with a role of user' })\n  @ApiResponse({\n    status: 201,\n    description: 'Returns the created user',\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Role(roleTypes.NA)\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto): Promise {\n    return this.userService.createUser(createUserDto);\n  }\n\n  /**\n   * Delete the current active user.\n   */\n  @ApiOperation({ summary: 'Delete the current active user' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns the deleted user',\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Role(roleTypes.USER)\n  @Delete('forget-me')\n  public deleteSelf(@ActiveUser() user: ActiveUserInterface) {\n    return this.userService.deleteSelf(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUserModule -->\n\nFindOneUserByEmailProvider->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserProvider\n                        \n                        \n                            FindOneUserByEmailProvider\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserProvider } from './provider/create-user.provider';\nimport { FindOneUserByEmailProvider } from './provider/find-one-user-by-email.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from 'src/auth/auth.module';\nimport profileConfig from './config/profile.config';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RoleModule } from 'src/role/role.module';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService, CreateUserProvider, FindOneUserByEmailProvider],\n  exports: [UserService],\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    ConfigModule.forFeature(profileConfig),\n    forwardRef(() => AuthModule),\n    RoleModule,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRoleGuard.html":{"url":"injectables/UserRoleGuard.html","title":"injectable - UserRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/role/user.role.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Guard to check if the user has a user role.\n\n            \n\n            \n                Extends\n            \n            \n                            AccessTokenGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConf: ConfigType<>, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/role/user.role.guard.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor to create an instance of the UserRoleGuard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle JWT operations.\n\n\n                                                        \n                                                \n                                                \n                                                        jwtConf\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nJWT configuration.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guard/role/user.role.guard.ts:48\n                        \n                    \n\n\n            \n                \n                        Method to determine if the request can proceed based on the user's role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nReturns true if the user has a user role, otherwise throws an UnauthorizedException.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constant/auth.constant';\nimport { UserService } from 'src/user/user.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\n\n/**\n * Guard to check if the user has a user role.\n * @extends {AccessTokenGuard}\n * @property {UserService} userService - The service to handle user operations.\n * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n */\n@Injectable()\nexport class UserRoleGuard extends AccessTokenGuard {\n  /**\n   * Constructor to create an instance of the UserRoleGuard\n   * @constructor\n   * @param {JwtService} jwtService - Service to handle JWT operations.\n   * @param {ConfigType} jwtConf - JWT configuration.\n   * @param {UserService} userService - Service to handle user operations.\n   * @returns {UserRoleGuard} - An instance of the UserRoleGuard.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   */\n  constructor(\n    protected readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    protected readonly jwtConf: ConfigType,\n    private readonly userService: UserService,\n  ) {\n    super(jwtService, jwtConf);\n  }\n\n  /**\n   * Method to determine if the request can proceed based on the user's role.\n   * @param {ExecutionContext} context - The execution context of the request.\n   * @returns {Promise} - Returns true if the user has a user role, otherwise throws an UnauthorizedException.\n   * @throws {UnauthorizedException} - Throws an exception if the token is not found or the user does not have the required role.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const token = this.extractRequestFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException('Token not found');\n    }\n    const payload = this.getPayloadFromContext(context);\n    request[REQUEST_USER_KEY] = payload;\n    const userId: number = request[REQUEST_USER_KEY].sub;\n    const user = await this.userService.findById(userId);\n    for (const role of user.roles) {\n      if (Object.values(roleTypes).includes(role.name as roleTypes)) {\n        return true;\n      }\n    }\n    throw new UnauthorizedException(`User does not have a role set`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that provides user-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                createUserAsAdmin\n                            \n                            \n                                    Public\n                                    Async\n                                deleteSelf\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, profileConfiguration: ConfigType<>, createUserProvider: CreateUserProvider, findOneUserByEmailProvider: FindOneUserByEmailProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructs a new instance of the UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUserProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneUserByEmailProvider\n                                                  \n                                                        \n                                                                        FindOneUserByEmailProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Method to create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUserAsAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserAsAdmin(createUserDto: AdminCreateUserDto, user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Method to create a new user as an admin.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            AdminCreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSelf(user: ActiveUserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Deletes the current active user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUserParamsDto: GetUserParamsDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of users based on the provided parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamsDto\n                                            \n                                                            GetUserParamsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Retrieves a user by their unique identifier.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Retrieves a user by their email address.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { GetUserParamsDto } from './dto/get-user-params.dto';\nimport { Repository } from 'typeorm';\nimport { User } from './user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ConfigType } from '@nestjs/config';\nimport profileConfig from './config/profile.config';\nimport { AdminCreateUserDto } from './dto/admin-create-user.dto';\nimport { CreateUserProvider } from './provider/create-user.provider';\nimport { FindOneUserByEmailProvider } from './provider/find-one-user-by-email.provider';\nimport { ActiveUserInterface } from 'src/auth/interface/active-user.interface';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n/**\n * Service that provides user-related operations.\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Constructs a new instance of the UserService.\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @Inject(profileConfig.KEY)\n    private readonly profileConfiguration: ConfigType,\n    private readonly createUserProvider: CreateUserProvider,\n    private readonly findOneUserByEmailProvider: FindOneUserByEmailProvider,\n  ) {}\n\n  /**\n   * Retrieves a list of users based on the provided parameters.\n   */\n  public findAll(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getUserParamsDto: GetUserParamsDto,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    limit: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    page: number,\n  ): void {\n    throw new HttpException(\n      {\n        status: HttpStatus.NOT_IMPLEMENTED,\n        error: 'Not Implemented',\n      },\n      HttpStatus.NOT_IMPLEMENTED,\n      {\n        cause: new Error(),\n        description: 'This method is not yet implemented.',\n      },\n    );\n  }\n\n  /**\n   * Method to create a new user as an admin.\n   */\n  public async createUserAsAdmin(\n    createUserDto: AdminCreateUserDto,\n    user: ActiveUserInterface,\n  ): Promise {\n    return await this.createUserProvider.createUserWithRole(\n      createUserDto,\n      user,\n    );\n  }\n\n  /**\n   * Method to create a new user.\n   */\n  public async createUser(createUserDto: CreateUserDto): Promise {\n    return await this.createUserProvider.createUser(createUserDto);\n  }\n\n  /**\n   * Retrieves a user by their unique identifier.\n   */\n  public async findById(id: number): Promise {\n    let user = undefined;\n    try {\n      user = await this.userRepository.findOneBy({ id });\n    } catch (error) {\n      throw new BadRequestException({\n        description: 'User not found.',\n        cause: error,\n      });\n    }\n    if (!user) {\n      throw new BadRequestException({\n        description: `User not found: ${id}.`,\n      });\n    }\n    return user;\n  }\n\n  /**\n   * Retrieves a user by their email address.\n   */\n  public async findOneByEmail(email: string): Promise {\n    return await this.findOneUserByEmailProvider.findOneByEmail(email);\n  }\n\n  /**\n   * Deletes the current active user.\n   */\n  public async deleteSelf(user: ActiveUserInterface) {\n    return await this.userRepository.delete(user.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Xref.html":{"url":"entities/Xref.html","title":"entity - Xref","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Xref\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/xref/xref.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayId\n                            \n                            \n                                    \n                                externalResource\n                            \n                            \n                                    \n                                geneXrefs\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/xref/xref.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        externalResource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExternalResource\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, externalResource => externalResource.xrefs, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/xref/xref.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geneXrefs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneXref[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, geneXref => geneXref.xref)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/xref/xref.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/xref/xref.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ExternalResource } from 'src/external-resource/external-resource.entity';\nimport { GeneXref } from 'src/gene-xref/gene-xref.entity';\nimport {\n  Column,\n  Entity,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Xref {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 20,\n    unique: true,\n    nullable: false,\n  })\n  displayId: string;\n\n  @ManyToOne(\n    () => ExternalResource,\n    (externalResource) => externalResource.xrefs,\n    {\n      eager: true,\n    },\n  )\n  externalResource: ExternalResource;\n\n  @OneToMany(() => GeneXref, (geneXref) => geneXref.xref)\n  geneXrefs: GeneXref[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/XrefController.html":{"url":"controllers/XrefController.html","title":"controller - XrefController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  XrefController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/xref/xref.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                xref\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createLocusType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getXrefByInternalId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createLocusType\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocusType(createXrefDto: CreateXrefDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(roleTypes.CURATOR)@ApiBearerAuth()@ApiOperation({summary: 'Create a new cross reference - Must be at curator level or above'})@ApiResponse({status: 201, description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record could not be created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/xref/xref.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createXrefDto\n                                            \n                                                            CreateXrefDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getXrefByInternalId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getXrefByInternalId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(roleTypes.USER)@ApiBearerAuth()@ApiOperation({summary: 'Get an Xref by id'})@ApiParam({name: 'id', description: 'The id of the xref to retrieve', type: 'number'})@ApiResponse({status: 200, description: 'The record has been successfully retrieved.'})@ApiBadRequestResponse({description: 'The record could not be retrieved.'})\n                \n            \n\n                    \n                        \n                            Defined in src/xref/xref.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { XrefService } from './xref.service';\nimport { roleTypes } from 'src/auth/enum/role-types.enum';\nimport { Role } from 'src/auth/decorator/role.decorator';\nimport { CreateXrefDto } from './dto/create-xref.dto';\nimport { Xref } from './xref.entity';\n\n@Controller('xref')\n@ApiTags('Cross References')\nexport class XrefController {\n  constructor(public readonly xrefService: XrefService) {}\n\n  @Post()\n  @Role(roleTypes.CURATOR)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new cross reference - Must be at curator level or above',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be created.',\n  })\n  async createLocusType(@Body() createXrefDto: CreateXrefDto): Promise {\n    return this.xrefService.create(createXrefDto);\n  }\n\n  @Get(':id')\n  @Role(roleTypes.USER)\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get an Xref by id',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'The id of the xref to retrieve',\n    type: 'number',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The record has been successfully retrieved.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The record could not be retrieved.',\n  })\n  async getXrefByInternalId(id: number): Promise {\n    return this.xrefService.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XrefModule.html":{"url":"modules/XrefModule.html","title":"module - XrefModule","body":"\n                   \n\n\n\n\n    Modules\n    XrefModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_XrefModule\n\n\n\ncluster_XrefModule_imports\n\n\n\ncluster_XrefModule_exports\n\n\n\ncluster_XrefModule_providers\n\n\n\n\nExternalResourceModule\n\nExternalResourceModule\n\n\n\nXrefModule\n\nXrefModule\n\nXrefModule -->\n\nExternalResourceModule->XrefModule\n\n\n\n\n\nXrefService \n\nXrefService \n\nXrefService  -->\n\nXrefModule->XrefService \n\n\n\n\n\nXrefService\n\nXrefService\n\nXrefModule -->\n\nXrefService->XrefModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/xref/xref.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            XrefService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            XrefController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExternalResourceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            XrefService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { XrefController } from './xref.controller';\nimport { XrefService } from './xref.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Xref } from './xref.entity';\nimport { ExternalResourceModule } from 'src/external-resource/external-resource.module';\n\n@Module({\n  controllers: [XrefController],\n  imports: [TypeOrmModule.forFeature([Xref]), ExternalResourceModule],\n  providers: [XrefService],\n  exports: [XrefService],\n})\nexport class XrefModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XrefService.html":{"url":"injectables/XrefService.html","title":"injectable - XrefService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XrefService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/xref/xref.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(extResService: ExternalResourceService, xrefRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/xref/xref.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        extResService\n                                                  \n                                                        \n                                                                        ExternalResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xrefRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createXrefDto: CreateXrefDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/xref/xref.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createXrefDto\n                                            \n                                                            CreateXrefDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/xref/xref.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Xref } from './xref.entity';\nimport { CreateXrefDto } from './dto/create-xref.dto';\nimport { ExternalResource } from 'src/external-resource/external-resource.entity';\nimport { ExternalResourceService } from 'src/external-resource/external-resource.service';\n\n@Injectable()\nexport class XrefService {\n  constructor(\n    private readonly extResService: ExternalResourceService,\n    @InjectRepository(Xref)\n    private readonly xrefRepository: Repository,\n  ) {}\n\n  public async create(createXrefDto: CreateXrefDto): Promise {\n    let xref: Xref;\n    let extRes: ExternalResource;\n    try {\n      extRes = await this.extResService.findById(createXrefDto.extResourceId);\n    } catch (error) {\n      throw new BadRequestException({\n        description: 'External Resource not found.',\n        cause: error,\n      });\n    }\n    xref = await this.xrefRepository.create({\n      displayId: createXrefDto.displayId,\n      externalResource: extRes,\n    });\n    try {\n      xref = await this.xrefRepository.save(xref);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n    return xref;\n  }\n\n  public async findById(id: number): Promise {\n    let xref = undefined;\n    try {\n      xref = await this.xrefRepository.findOneBy({ id });\n    } catch (error) {\n      throw new NotFoundException({\n        description: 'Xref not found.',\n        cause: error,\n      });\n    }\n    return xref;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            env\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/assembly/assembly.controller.ts\n            \n            controller\n            AssemblyController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assembly/assembly.entity.ts\n            \n            entity\n            Assembly\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/assembly/assembly.service.ts\n            \n            injectable\n            AssemblyService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/constant/auth.constant.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constant/auth.constant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constant/auth.constant.ts\n            \n            variable\n            ROLE_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/role.decorator.ts\n            \n            variable\n            Role\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dto/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dto/signin.dto.ts\n            \n            class\n            SigninDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guard/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guard/role/admin.role.guard.ts\n            \n            injectable\n            AdminRoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guard/role/curator.role.guard.ts\n            \n            injectable\n            CuratorRoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guard/role/master.role.guard.ts\n            \n            guard\n            MasterRoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guard/role/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guard/role/user.role.guard.ts\n            \n            injectable\n            UserRoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interface/active-user.interface.ts\n            \n            interface\n            ActiveUserInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/provider/bcrypt.provider.ts\n            \n            injectable\n            BcryptProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/provider/generate-tokens.provider.ts\n            \n            injectable\n            GenerateTokensProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/provider/hashing.provider.ts\n            \n            injectable\n            HashingProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/provider/refresh-tokens.provider.ts\n            \n            injectable\n            RefreshTokensProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/provider/sign-in.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/interceptor/data-response/data-response.interceptor.ts\n            \n            injectable\n            DataResponseInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/interface/paginated.interface.ts\n            \n            interface\n            Paginated\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/pagination/provider/pagination.provider.ts\n            \n            injectable\n            PaginationProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/external-resource/dto/create-external-resource.dto.ts\n            \n            class\n            CreateExternalResourceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/external-resource/external-resource.controller.ts\n            \n            controller\n            ExternalResourceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/external-resource/external-resource.entity.ts\n            \n            entity\n            ExternalResource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/external-resource/external-resource.service.ts\n            \n            injectable\n            ExternalResourceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/gene-history/gene-history.entity.ts\n            \n            entity\n            GeneHistory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gene-locus-type/dto/create-gene-locus-type.dto.ts\n            \n            class\n            CreateGeneLocusTypeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/gene-locus-type/gene-locus-type.controller.ts\n            \n            controller\n            GeneLocusTypeController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gene-locus-type/gene-locus-type.entity.ts\n            \n            entity\n            GeneLocusType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gene-locus-type/gene-locus-type.entity.ts\n            \n            class\n            GeneLocusType\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/gene-locus-type/gene-locus-type.service.ts\n            \n            injectable\n            GeneLocusTypeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene-name/dto/create-gene-name.dto.ts\n            \n            class\n            CreateGeneNameDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/gene-name/gene-name.controller.ts\n            \n            controller\n            GeneNameController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/gene-name/gene-name.entity.ts\n            \n            entity\n            GeneName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gene-name/gene-name.entity.ts\n            \n            class\n            GeneName\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/gene-name/gene-name.service.ts\n            \n            injectable\n            GeneNameService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene-note/dto/create-gene-note.dto.ts\n            \n            class\n            CreateGeneNoteDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/gene-note/gene-note.controller.ts\n            \n            controller\n            GeneNoteController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gene-note/gene-note.entity.ts\n            \n            entity\n            GeneNote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gene-note/gene-note.entity.ts\n            \n            class\n            GeneNote\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/gene-note/gene-note.service.ts\n            \n            injectable\n            GeneNoteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene-replacement/dto/create-gene-replacement.dto.ts\n            \n            class\n            CreateGeneReplacementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene-replacement/gene-replacement.controller.ts\n            \n            controller\n            GeneReplacementController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gene-replacement/gene-replacement.entity.ts\n            \n            entity\n            GeneReplacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gene-replacement/gene-replacement.service.ts\n            \n            injectable\n            GeneReplacementService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene-symbol/dto/create-gene-symbol.dto.ts\n            \n            class\n            CreateGeneSymbolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/gene-symbol/gene-symbol.controller.ts\n            \n            controller\n            GeneSymbolController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gene-symbol/gene-symbol.entity.ts\n            \n            entity\n            GeneSymbol\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/gene-symbol/gene-symbol.entity.ts\n            \n            class\n            GeneSymbol\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/gene-symbol/gene-symbol.service.ts\n            \n            injectable\n            GeneSymbolService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene-xref/dto/create-gene-xref.dto.ts\n            \n            class\n            CreateGeneXrefDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/gene-xref/gene-xref.controller.ts\n            \n            controller\n            GeneXrefController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gene-xref/gene-xref.entity.ts\n            \n            entity\n            GeneXref\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gene-xref/gene-xref.entity.ts\n            \n            class\n            GeneXref\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/gene-xref/gene-xref.service.ts\n            \n            injectable\n            GeneXrefService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gene/dto/create-gene.dto.ts\n            \n            class\n            CreateGeneDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/gene/gene.controller.ts\n            \n            controller\n            GeneController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/gene/gene.entity.ts\n            \n            entity\n            Gene\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/gene/gene.service.ts\n            \n            injectable\n            GeneService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/gene/provider/create-gene.provider.ts\n            \n            injectable\n            CreateGeneProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/location/location.controller.ts\n            \n            controller\n            LocationController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/location.entity.ts\n            \n            entity\n            Location\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/location/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/locus-group/dto/create-locus-group.dto.ts\n            \n            class\n            CreateLocusGroupDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/locus-group/locus-group.controller.ts\n            \n            controller\n            LocusGroupController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/locus-group/locus-group.entity.ts\n            \n            entity\n            LocusGroup\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/locus-group/locus-group.service.ts\n            \n            injectable\n            LocusGroupService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/locus-type/dto/create-locus-type.dto.ts\n            \n            class\n            CreateLocusTypeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/locus-type/locus-type.controller.ts\n            \n            controller\n            LocusTypeController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/locus-type/locus-type.entity.ts\n            \n            entity\n            LocusType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/locus-type/locus-type.service.ts\n            \n            injectable\n            LocusTypeService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/name/dto/create-name.dto.ts\n            \n            class\n            CreateNameDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/name/name.controller.ts\n            \n            controller\n            NameController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/name/name.entity.ts\n            \n            entity\n            Name\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/name/name.service.ts\n            \n            injectable\n            NameService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/note/dto/create-note.dto.ts\n            \n            class\n            CreateNoteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/note/note.controller.ts\n            \n            controller\n            NoteController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/note/note.entity.ts\n            \n            entity\n            Note\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/note/note.service.ts\n            \n            injectable\n            NoteService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/role/provider/role.service.ts\n            \n            injectable\n            RoleService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/role/role.entity.ts\n            \n            entity\n            Role\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/species/provider/species.service.ts\n            \n            injectable\n            SpeciesService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/species/species.controller.ts\n            \n            controller\n            SpeciesController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/species/species.entity.ts\n            \n            entity\n            Species\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/symbol/dto/create-symbol.dto.ts\n            \n            class\n            CreateSymbolDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/symbol/symbol.controller.ts\n            \n            controller\n            SymbolController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/symbol/symbol.entity.ts\n            \n            entity\n            Symbol\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/symbol/symbol.service.ts\n            \n            injectable\n            SymbolService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/dto/admin-create-user.dto.ts\n            \n            class\n            AdminCreateUserDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/dto/get-user-params.dto.ts\n            \n            class\n            GetUserParamsDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/provider/create-user.provider.ts\n            \n            injectable\n            CreateUserProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/provider/find-one-user-by-email.provider.ts\n            \n            injectable\n            FindOneUserByEmailProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/xref/dto/create-xref.dto.ts\n            \n            class\n            CreateXrefDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/xref/xref.controller.ts\n            \n            controller\n            XrefController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/xref/xref.entity.ts\n            \n            entity\n            Xref\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/xref/xref.service.ts\n            \n            injectable\n            XrefService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.0.7\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            ejs : ^3.1.10\n        \n            joi : ^17.13.3\n        \n            nodemailer : ^6.9.16\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            typeorm-naming-strategies : ^4.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            basicStatus   (src/.../basic-status.enum.ts)\n                        \n                        \n                            geneStatus   (src/.../gene-status.enum.ts)\n                        \n                        \n                            nomenclatureType   (src/.../nomenclature-type.enum.ts)\n                        \n                        \n                            roleName   (src/.../role-name.enum.ts)\n                        \n                        \n                            roleTypes   (src/.../role-types.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enum/basic-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        basicStatus\n                    \n                \n                    \n                        \n                            Enum for basic status used across the application\n\n                        \n                    \n                        \n                            \n                                 INTERNAL\n                            \n                        \n                        \n                            \n                                Value : internal\n                            \n                        \n                        \n                            \n                                 WITHDRAWN\n                            \n                        \n                        \n                            \n                                Value : withdrawn\n                            \n                        \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : public\n                            \n                        \n            \n        \n\n    src/gene/enum/gene-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        geneStatus\n                    \n                \n                    \n                        \n                            Enum for gene status\n\n                        \n                    \n                        \n                            \n                                 INTERNAL\n                            \n                        \n                        \n                            \n                                Value : internal\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 WITHDRAWN\n                            \n                        \n                        \n                            \n                                Value : withdrawn\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 MERGED\n                            \n                        \n                        \n                            \n                                Value : merged\n                            \n                        \n                        \n                            \n                                 SPLIT\n                            \n                        \n                        \n                            \n                                Value : split\n                            \n                        \n            \n        \n\n    src/common/enum/nomenclature-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        nomenclatureType\n                    \n                \n                    \n                        \n                            Enum for nomenclature type - used within Name and Symbol\n\n                        \n                    \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 ALIAS\n                            \n                        \n                        \n                            \n                                Value : alias\n                            \n                        \n                        \n                            \n                                 PREVIOUS\n                            \n                        \n                        \n                            \n                                Value : previous\n                            \n                        \n            \n        \n\n    src/role/enum/role-name.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        roleName\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 CURATOR\n                            \n                        \n                        \n                            \n                                Value : curator\n                            \n                        \n                        \n                            \n                                 MASTER\n                            \n                        \n                        \n                            \n                                Value : master\n                            \n                        \n            \n        \n\n    src/auth/enum/role-types.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        roleTypes\n                    \n                \n                    \n                        \n                            Enum for role types\n\n                        \n                    \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 CURATOR\n                            \n                        \n                        \n                            \n                                Value : curator\n                            \n                        \n                        \n                            \n                                 MASTER\n                            \n                        \n                        \n                            \n                                Value : master\n                            \n                        \n                        \n                            \n                                 NA\n                            \n                        \n                        \n                            \n                                Value : na\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Bootstrap the application. This is the entry point of the application.\nIt creates the NestJS application and listens on the specified port.\nIt also sets up global pipes and Swagger documentation.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttps://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AssemblyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExternalResourceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneHistoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneLocusTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneNameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneNoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneReplacementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneSymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneXrefModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocusGroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocusTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpeciesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XrefModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AssemblyModule\n\n\n\ncluster_AssemblyModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ExternalResourceModule\n\n\n\ncluster_ExternalResourceModule_exports\n\n\n\ncluster_ExternalResourceModule_providers\n\n\n\ncluster_GeneLocusTypeModule\n\n\n\ncluster_GeneLocusTypeModule_providers\n\n\n\ncluster_GeneModule\n\n\n\ncluster_GeneModule_exports\n\n\n\ncluster_GeneModule_providers\n\n\n\ncluster_GeneNameModule\n\n\n\ncluster_GeneNameModule_providers\n\n\n\ncluster_GeneNoteModule\n\n\n\ncluster_GeneNoteModule_providers\n\n\n\ncluster_GeneReplacementModule\n\n\n\ncluster_GeneReplacementModule_providers\n\n\n\ncluster_GeneSymbolModule\n\n\n\ncluster_GeneSymbolModule_providers\n\n\n\ncluster_GeneXrefModule\n\n\n\ncluster_GeneXrefModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_LocusGroupModule\n\n\n\ncluster_LocusGroupModule_exports\n\n\n\ncluster_LocusGroupModule_providers\n\n\n\ncluster_LocusTypeModule\n\n\n\ncluster_LocusTypeModule_exports\n\n\n\ncluster_LocusTypeModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_NameModule\n\n\n\ncluster_NameModule_exports\n\n\n\ncluster_NameModule_providers\n\n\n\ncluster_NoteModule\n\n\n\ncluster_NoteModule_exports\n\n\n\ncluster_NoteModule_providers\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SpeciesModule\n\n\n\ncluster_SpeciesModule_exports\n\n\n\ncluster_SpeciesModule_providers\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_XrefModule\n\n\n\ncluster_XrefModule_exports\n\n\n\ncluster_XrefModule_providers\n\n\n\n\nAssemblyModule\n\nAssemblyModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAssemblyModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHashingProvider \n\nHashingProvider \n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nExternalResourceModule\n\nExternalResourceModule\n\n\n\nXrefModule\n\nXrefModule\n\nXrefModule -->\n\nExternalResourceModule->XrefModule\n\n\n\nAppModule -->\n\nExternalResourceModule->AppModule\n\n\n\n\n\nExternalResourceService \n\nExternalResourceService \n\nExternalResourceService  -->\n\nExternalResourceModule->ExternalResourceService \n\n\n\n\n\nGeneHistoryModule\n\nGeneHistoryModule\n\nAppModule -->\n\nGeneHistoryModule->AppModule\n\n\n\n\n\nGeneLocusTypeModule\n\nGeneLocusTypeModule\n\nAppModule -->\n\nGeneLocusTypeModule->AppModule\n\n\n\n\n\nGeneModule\n\nGeneModule\n\nGeneLocusTypeModule -->\n\nGeneModule->GeneLocusTypeModule\n\n\n\n\n\nGeneNameModule\n\nGeneNameModule\n\nGeneNameModule -->\n\nGeneModule->GeneNameModule\n\n\n\n\n\nGeneNoteModule\n\nGeneNoteModule\n\nGeneNoteModule -->\n\nGeneModule->GeneNoteModule\n\n\n\n\n\nGeneReplacementModule\n\nGeneReplacementModule\n\nGeneReplacementModule -->\n\nGeneModule->GeneReplacementModule\n\n\n\n\n\nGeneSymbolModule\n\nGeneSymbolModule\n\nGeneSymbolModule -->\n\nGeneModule->GeneSymbolModule\n\n\n\n\n\nGeneXrefModule\n\nGeneXrefModule\n\nGeneXrefModule -->\n\nGeneModule->GeneXrefModule\n\n\n\nAppModule -->\n\nGeneModule->AppModule\n\n\n\n\n\nGeneService \n\nGeneService \n\nGeneService  -->\n\nGeneModule->GeneService \n\n\n\nAppModule -->\n\nGeneNameModule->AppModule\n\n\n\nAppModule -->\n\nGeneNoteModule->AppModule\n\n\n\nAppModule -->\n\nGeneReplacementModule->AppModule\n\n\n\nAppModule -->\n\nGeneSymbolModule->AppModule\n\n\n\nAppModule -->\n\nGeneXrefModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nLocusGroupModule\n\nLocusGroupModule\n\n\n\nLocusTypeModule\n\nLocusTypeModule\n\nLocusTypeModule -->\n\nLocusGroupModule->LocusTypeModule\n\n\n\nAppModule -->\n\nLocusGroupModule->AppModule\n\n\n\n\n\nLocusGroupService \n\nLocusGroupService \n\nLocusGroupService  -->\n\nLocusGroupModule->LocusGroupService \n\n\n\nGeneLocusTypeModule -->\n\nLocusTypeModule->GeneLocusTypeModule\n\n\n\nAppModule -->\n\nLocusTypeModule->AppModule\n\n\n\n\n\nLocusTypeService \n\nLocusTypeService \n\nLocusTypeService  -->\n\nLocusTypeModule->LocusTypeService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nNameModule\n\nNameModule\n\nGeneNameModule -->\n\nNameModule->GeneNameModule\n\n\n\nAppModule -->\n\nNameModule->AppModule\n\n\n\n\n\nNameService \n\nNameService \n\nNameService  -->\n\nNameModule->NameService \n\n\n\n\n\nNoteModule\n\nNoteModule\n\nGeneNoteModule -->\n\nNoteModule->GeneNoteModule\n\n\n\nAppModule -->\n\nNoteModule->AppModule\n\n\n\n\n\nNoteService \n\nNoteService \n\nNoteService  -->\n\nNoteModule->NoteService \n\n\n\n\n\nPaginationModule\n\nPaginationModule\n\nGeneModule -->\n\nPaginationModule->GeneModule\n\n\n\nAppModule -->\n\nPaginationModule->AppModule\n\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nGeneLocusTypeModule -->\n\nRoleModule->GeneLocusTypeModule\n\n\n\nGeneModule -->\n\nRoleModule->GeneModule\n\n\n\nGeneNameModule -->\n\nRoleModule->GeneNameModule\n\n\n\nGeneNoteModule -->\n\nRoleModule->GeneNoteModule\n\n\n\nGeneReplacementModule -->\n\nRoleModule->GeneReplacementModule\n\n\n\nGeneSymbolModule -->\n\nRoleModule->GeneSymbolModule\n\n\n\nGeneXrefModule -->\n\nRoleModule->GeneXrefModule\n\n\n\nNameModule -->\n\nRoleModule->NameModule\n\n\n\nNoteModule -->\n\nRoleModule->NoteModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nRoleModule->SymbolModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSpeciesModule\n\nSpeciesModule\n\nGeneModule -->\n\nSpeciesModule->GeneModule\n\n\n\nAppModule -->\n\nSpeciesModule->AppModule\n\n\n\n\n\nSpeciesService \n\nSpeciesService \n\nSpeciesService  -->\n\nSpeciesModule->SpeciesService \n\n\n\nGeneSymbolModule -->\n\nSymbolModule->GeneSymbolModule\n\n\n\nAppModule -->\n\nSymbolModule->AppModule\n\n\n\n\n\nSymbolService \n\nSymbolService \n\nSymbolService  -->\n\nSymbolModule->SymbolService \n\n\n\nGeneLocusTypeModule -->\n\nUserModule->GeneLocusTypeModule\n\n\n\nGeneModule -->\n\nUserModule->GeneModule\n\n\n\nGeneNameModule -->\n\nUserModule->GeneNameModule\n\n\n\nGeneNoteModule -->\n\nUserModule->GeneNoteModule\n\n\n\nGeneReplacementModule -->\n\nUserModule->GeneReplacementModule\n\n\n\nGeneSymbolModule -->\n\nUserModule->GeneSymbolModule\n\n\n\nGeneXrefModule -->\n\nUserModule->GeneXrefModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\nGeneXrefModule -->\n\nXrefModule->GeneXrefModule\n\n\n\nAppModule -->\n\nXrefModule->AppModule\n\n\n\n\n\nXrefService \n\nXrefService \n\nXrefService  -->\n\nXrefModule->XrefService \n\n\n\n\n\nAdminRoleGuard\n\nAdminRoleGuard\n\nAppModule -->\n\nAdminRoleGuard->AppModule\n\n\n\n\n\nCuratorRoleGuard\n\nCuratorRoleGuard\n\nAppModule -->\n\nCuratorRoleGuard->AppModule\n\n\n\n\n\nUserRoleGuard\n\nUserRoleGuard\n\nAppModule -->\n\nUserRoleGuard->AppModule\n\n\n\n\n\nAssemblyService\n\nAssemblyService\n\nAssemblyModule -->\n\nAssemblyService->AssemblyModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nRefreshTokensProvider\n\nRefreshTokensProvider\n\nAuthModule -->\n\nRefreshTokensProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nExternalResourceService\n\nExternalResourceService\n\nExternalResourceModule -->\n\nExternalResourceService->ExternalResourceModule\n\n\n\n\n\nGeneLocusTypeService\n\nGeneLocusTypeService\n\nGeneLocusTypeModule -->\n\nGeneLocusTypeService->GeneLocusTypeModule\n\n\n\n\n\nCreateGeneProvider\n\nCreateGeneProvider\n\nGeneModule -->\n\nCreateGeneProvider->GeneModule\n\n\n\n\n\nGeneService\n\nGeneService\n\nGeneModule -->\n\nGeneService->GeneModule\n\n\n\n\n\nGeneNameService\n\nGeneNameService\n\nGeneNameModule -->\n\nGeneNameService->GeneNameModule\n\n\n\n\n\nGeneNoteService\n\nGeneNoteService\n\nGeneNoteModule -->\n\nGeneNoteService->GeneNoteModule\n\n\n\n\n\nGeneReplacementService\n\nGeneReplacementService\n\nGeneReplacementModule -->\n\nGeneReplacementService->GeneReplacementModule\n\n\n\n\n\nGeneSymbolService\n\nGeneSymbolService\n\nGeneSymbolModule -->\n\nGeneSymbolService->GeneSymbolModule\n\n\n\n\n\nGeneXrefService\n\nGeneXrefService\n\nGeneXrefModule -->\n\nGeneXrefService->GeneXrefModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nLocusGroupService\n\nLocusGroupService\n\nLocusGroupModule -->\n\nLocusGroupService->LocusGroupModule\n\n\n\n\n\nLocusTypeService\n\nLocusTypeService\n\nLocusTypeModule -->\n\nLocusTypeService->LocusTypeModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nNameService\n\nNameService\n\nNameModule -->\n\nNameService->NameModule\n\n\n\n\n\nNoteService\n\nNoteService\n\nNoteModule -->\n\nNoteService->NoteModule\n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSpeciesService\n\nSpeciesService\n\nSpeciesModule -->\n\nSpeciesService->SpeciesModule\n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUserModule -->\n\nFindOneUserByEmailProvider->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nXrefService\n\nXrefService\n\nXrefModule -->\n\nXrefService->XrefModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    34 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : API for the PGNC\n        \n            License : AGPL-3.0\n        \n            Author : Kristian Gray\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            env   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            Role   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLE_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserInterface | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserInterface = request[REQUEST_USER_KEY];\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator to extract the active user from the request.\n\n                \n            \n\n        \n    \n\n    src/auth/constant/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n            \n                \n                    The key used to identify the type of authentication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n            \n                \n                    The key used to identify the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLE_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roleType'\n                    \n                \n\n            \n                \n                    The key used to identify the type of role.\n\n                \n            \n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    Load the environment configuration. Can be either 'dev', 'test' or\nundefined, which defines a live environment.\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roleTypes: (roleName | string)[]) =>\n  SetMetadata(ROLE_TYPE_KEY, roleTypes)\n                    \n                \n\n            \n                \n                    A custom decorator to assign roles to a route.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
